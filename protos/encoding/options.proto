// The encoding proto schema is intended to be used for either encoding or
// decoding. The intent of whether to encode or decode should be specified
// somewhere outside of this proto.

syntax = "proto3";

package protos.encoding;

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos/encoding";

enum EncodeType {
    ENCODE_TYPE_UNSET  = 0;
    ENCODE_TYPE_JSONPB = 1;
}

enum DecodeType {
    DECODE_TYPE_UNSET      = 0;
    DECODE_TYPE_JSONPB     = 1;
    DECODE_TYPE_PROTOBUF   = 2;
    DECODE_TYPE_AVRO       = 3;
    DECODE_TYPE_THRIFT     = 4;
    DECODE_TYPE_FLATBUFFER = 5;
}

message ProtobufSettings {
    // @gotags: kong:"help='Input message(s) should be encoded with this message envelope'"
    string protobuf_root_message = 3;

    // @gotags: kong:"help='One or more directories which contains protobuf schemas',existingdir"
    repeated string protobuf_dirs = 4;
}

message EncodeOptions {
    // Use an existing schema for encoding (and ignore all other encode settings)
    // @gotags: kong:"-"
    string schema_id = 1;

    // TODO: Update kong to be able to use proto/smart enums
    // @gotags: kong:"help='Input type (0: Unset, 1: JSONPB)',default=0"
    EncodeType encode_type = 2;

    // @gotags: kong="embed,group=protobuf"
    ProtobufSettings protobuf_settings = 3;
}

message DecodeOptions {
    // Use an existing schema for decoding (and ignore all other decode settings)
    // @gotags: kong:"-"
    string schema_id = 1;

    // @gotags: kong:"help='Input type (0: Unset, 1: JSONPB, 2: Protobuf, 3: Avro, 4: Thrift, 5: Flatbuffer)',default=0"
    DecodeType decode_type = 2;

    // @gotags: kong="embed,group=protobuf"
    ProtobufSettings protobuf_settings = 3;
}
