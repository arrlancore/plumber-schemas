syntax = "proto3";

package protos;

import "ps_connect.proto";
import "ps_dynamic.proto";
import "ps_relay.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos";

service PlumberServer {
  // -------------------- Connection ---------------------

  // List configured/known connections
  rpc GetAllConnections (GetAllConnectionsRequest) returns (GetAllConnectionsResponse);

  // Fetch a specific connection by ID
  rpc GetConnection(GetConnectionRequest) returns (GetConnectionResponse);

  // Create a connection in plumber
  rpc CreateConnection(CreateConnectionRequest) returns (CreateConnectionResponse);

  // Test a connection before saving its configuration
  rpc TestConnection(TestConnectionRequest) returns (TestConnectionResponse);

  // Any active connections will be restarted
  rpc UpdateConnection(UpdateConnectionRequest) returns (UpdateConnectionResponse);

  // If there are any active connections, delete will cause them to get closed
  rpc DeleteConnection(DeleteConnectionRequest) returns (DeleteConnectionResponse);

  // ---------------------- Relay ----------------------

  rpc GetAllRelays(GetAllRelaysRequest) returns (GetAllRelaysResponse);

  rpc GetRelay(GetRelayRequest) returns (GetRelayResponse);// Delete an existing relay

  rpc CreateRelay(CreateRelayRequest) returns (CreateRelayResponse);

  rpc UpdateRelay(UpdateRelayRequest) returns (UpdateRelayResponse);

  rpc ResumeRelay(ResumeRelayRequest) returns (ResumeRelayResponse);

  rpc StopRelay(StopRelayRequest) returns (StopRelayResponse);

  rpc DeleteRelay(DeleteRelayRequest) returns (DeleteRelayResponse);

  // --------------------- Dynamic ---------------------

  // Get a specific dynamic tunnel
  rpc GetDynamic(GetDynamicRequest) returns (GetDynamicResponse);
  rpc GetAllDynamic(GetAllDynamicRequest) returns (GetAllDynamicResponse);

  rpc CreateDynamic(CreateDynamicRequest) returns (CreateDynamicResponse);

  rpc StopDynamic(StopDynamicRequest) returns (StopDynamicResponse);

  rpc ResumeDynamic(ResumeDynamicRequest) returns (ResumeDynamicResponse);

  rpc UpdateDynamic(UpdateDynamicRequest) returns (UpdateDynamicResponse);

  rpc DeleteDynamic(DeleteDynamicRequest) returns (DeleteDynamicResponse);
}
