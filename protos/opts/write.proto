// relay.proto defines which args support writes.
//
// We do not utilize oneof to simplify integration with CLI options. Similarly,
// we incorporate the connection as part of the args so that conn can be
// specified in the correct position on the CLI (ie. after `plumber $action $backend`).
syntax = "proto3";

package protos.opts;

import "records/base.proto";
import "args/activemq.proto";
import "args/azure-service-bus.proto";
import "args/azure-event-hub.proto";
import "args/aws-sns.proto";
import "args/aws-sqs.proto";
import "args/gcp-pubsub.proto";
import "args/kafka.proto";
import "args/kubemq-queue.proto";
import "args/mqtt.proto";
import "args/nats.proto";
import "args/nats-streaming.proto";
import "args/nsq.proto";
import "args/pulsar.proto";
import "args/rabbit.proto";
import "args/rabbit-streams.proto";
import "args/redis-pubsub.proto";
import "args/redis-streams.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos/opts";

// WriteOpts is the structure that backends accept for performing a write.
// NOTE: _conn is only used by the CLI - desktop does not need to set it.
message Write {
    // @gotags: kong:"embed"
    records.Write record = 1;

    // @gotags: kong:"cmd,help='Apache Kafka'"
    WriteOptsKafka kafka = 100;

    // @gotags: kong:"cmd,help='Apache ActiveMQ'"
    WriteOptsActiveMQ activemq = 101;

    // @gotags: kong:"cmd,help='AWS Simple Queue System'"
    WriteOptsAWSSQS awssqs = 102;

    // @gotags: kong:"cmd,help='AWS Simple Notification System'"
    WriteOptsAWSSNS awssns = 103;

    // @gotags: kong:"cmd,help='NATS'"
    WriteOptsNats nats = 104;

    // @gotags: kong:"cmd,help='NATS Streaming'"
    WriteOptsNatsStreaming nats_streaming = 105;

    // @gotags: kong:"cmd,help='NSQ'"
    WriteOptsNSQ nsq = 106;

    // @gotags: kong:"cmd,help='Apache Pulsar'"
    WriteOptsPulsar pulsar = 107;

    // @gotags: kong:"cmd,help='RabbitMQ'"
    WriteOptsRabbit rabbit = 108;

    // @gotags: kong:"cmd,help='RabbitMQ Streams'"
    WriteOptsRabbitStreams rabbit_streams = 109;

    // @gotags: kong:"cmd,help='MQTT'"
    WriteOptsMQTT mqtt = 110;

    // @gotags: kong:"cmd,help='Azure Service Bus'"
    WriteOptsAzureServiceBus azure_service_bus = 111;

    // @gotags: kong:"cmd,help='Azure Event Hub'"
    WriteOptsAzureEventHub azure_event_hub = 112;

    // @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
    WriteOptsGCPPubSub gcp_pubsub = 113;

    // @gotags: kong:"cmd,help='KubeMQ Queue'"
    WriteOptsKubeMQQueue kubemq_queue = 114;

    // @gotags: kong:"cmd,help='Redis PubSub'"
    WriteOptsRedisPubSub redis_pubsub = 115;

    // @gotags: kong:"cmd,help='Redis Streams'"
    WriteOptsRedisStreams redis_streams = 116;
}

message WriteOptsKafka {
    // @gotags: kong:"embed"
    args.KafkaConn _conn = 1;

    // @gotags: kong:"embed"
    args.KafkaWriteArgs args = 2;
}

message WriteOptsActiveMQ {
    // @gotags: kong:"embed"
    args.ActiveMQConn _conn = 1;

    // @gotags: kong:"embed"
    args.ActiveMQWriteArgs args = 2;
}

message WriteOptsAWSSQS {
    // @gotags: kong:"embed"
    args.AWSSQSConn _conn = 1;

    // @gotags: kong:"embed"
    args.AWSSQSWriteArgs args = 2;
}

message WriteOptsAWSSNS {
    // @gotags: kong:"embed"
    args.AWSSNSConn _conn = 1;

    // @gotags: kong:"embed"
    args.AWSSNSWriteArgs args = 2;
}

message WriteOptsNats {
    // @gotags: kong:"embed"
    args.NatsConn _conn = 1;

    // @gotags: kong:"embed"
    args.NatsWriteArgs args = 2;
}

message WriteOptsNatsStreaming {
    // @gotags: kong:"embed"
    args.NatsStreamingConn _conn = 1;

    // @gotags: kong:"embed"
    args.NatsStreamingWriteArgs args = 2;
}

message WriteOptsNSQ {
    // @gotags: kong:"embed"
    args.NSQConn _conn = 1;

    // @gotags: kong:"embed"
    args.NSQWriteArgs args = 2;
}

message WriteOptsPulsar {
    // @gotags: kong:"embed"
    args.PulsarConn _conn = 1;

    // @gotags: kong:"embed"
    args.PulsarWriteArgs args = 2;
}

message WriteOptsRabbit {
    // @gotags: kong:"embed"
    args.RabbitConn _conn = 1;

    // @gotags: kong:"embed"
    args.RabbitWriteArgs args = 2;
}

message WriteOptsRabbitStreams {
    // @gotags: kong:"embed"
    args.RabbitStreamsConn _conn = 1;

    // @gotags: kong:"embed"
    args.RabbitStreamsWriteArgs args = 2;
}

message WriteOptsRedisPubSub {
    // @gotags: kong:"embed"
    args.RedisPubSubConn _conn = 1;

    // @gotags: kong:"embed"
    args.RedisPubSubWriteArgs args = 2;
}

message WriteOptsRedisStreams {
    // @gotags: kong:"embed"
    args.RedisStreamsConn _conn = 1;

    // @gotags: kong:"embed"
    args.RedisStreamsWriteArgs args = 2;
}

message WriteOptsAzureEventHub {
    // @gotags: kong:"embed"
    args.AzureEventHubConn _conn = 1;

    // @gotags: kong:"embed"
    args.AzureEventHubWriteArgs args = 2;
}

message WriteOptsAzureServiceBus {
    // @gotags: kong:"embed"{
    args.AzureServiceBusConn _conn = 1;

    // @gotags: kong:"embed"
    args.AzureServiceBusWriteArgs args = 2;
}

message WriteOptsMQTT {
    // @gotags: kong:"embed"
    args.MQTTConn _conn = 1;

    // @gotags: kong:"embed"
    args.MQTTWriteArgs args = 2;
}

message WriteOptsGCPPubSub {
    // @gotags: kong:"embed"
    args.GCPPubSubConn _conn = 1;

    // @gotags: kong:"embed"
    args.GCPPubSubWriteArgs args = 2;
}

message WriteOptsKubeMQQueue {
    // @gotags: kong:"embed"
    args.KubeMQQueueConn _conn = 1;

    // @gotags: kong:"embed"
    args.KubeMQQueueWriteArgs args = 2;
}
