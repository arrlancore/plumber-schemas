syntax = "proto3";

package protos.opts;

import "args/activemq.proto";
import "args/azure-service-bus.proto";
import "args/azure-event-hub.proto";
import "args/aws-sqs.proto";
import "args/aws-sns.proto";
import "args/gcp-pubsub.proto";
import "args/kafka.proto";
import "args/kubemq-queue.proto";
import "args/mqtt.proto";
import "args/nats.proto";
import "args/nats-streaming.proto";
import "args/nsq.proto";
import "args/rabbit.proto";
import "args/rabbit-streams.proto";
import "args/redis-pubsub.proto";
import "args/redis-streams.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos/opts";

message DynamicOptions {
    // @gotags: kong:"help='API token to use for dynamic destination (Create here: https://console.batch.sh/account/security)',required"
    string api_token = 1;

    // @gotags: kong:"help='Dynamic destination collector address',default='dproxy.batch.sh:443'"
    string _grpc_address = 2;

    // @gotags: kong:"help='Dynamic destination collector initial connection timeout',default=5"
    string _grpc_timeout_seconds = 3;

    // @gotags: kong:"help='Do not verify Batch's dynamic destination server certificate'"
    bool _grpc_insecure_tls = 4;

    // --------------------------------------------------------------------- //
    //                       SUPPORTED BACKENDS (100-999)                    //
    // --------------------------------------------------------------------- //

    // @gotags: kong:"cmd,help='Apache Kafka'"
    DynamicGroupKafkaOptions kafka = 100;

    // @gotags: kong:"cmd,help='Apache ActiveMQ'"
    DynamicGroupActiveMQOptions activemq = 101;

    // @gotags: kong:"cmd,help='AWS Simple Queue System'"
    DynamicGroupAWSSQSOptions awssqs = 102;

    // @gotags: kong:"cmd,help='AWS Simple Notification System'"
    DynamicGroupAWSSNSOptions awssns = 103;

    // @gotags: kong:"cmd,help='NATS'"
    DynamicGroupNatsOptions nats = 104;

    // @gotags: kong:"cmd,help='NATS Streaming'"
    DynamicGroupNatsStreamingOptions nats_streaming = 105;

    // @gotags: kong:"cmd,help='NSQ'"
    DynamicGroupNSQOptions nsq = 106;

    // @gotags: kong:"cmd,help='RabbitMQ'"
    DynamicGroupRabbitOptions rabbit = 107;

    // @gotags: kong:"cmd,help='MQTT'"
    DynamicGroupMQTTOptions mqtt = 108;

    // @gotags: kong:"cmd,help='Azure Service Bus'"
    DynamicGroupAzureServiceBusOptions azure_service_bus = 109;

    // @gotags: kong:"cmd,help='Azure Event Hub'"
    DynamicGroupAzureEventHubOptions azure_event_hub = 110;

    // @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
    DynamicGroupGCPPubSubOptions gcp_pubsub = 111;

    // @gotags: kong:"cmd,help='KubeMQ Queue'"
    DynamicGroupKubeMQQueueOptions kubemq_queue = 112;

    // @gotags: kong:"cmd,help='Redis PubSub'"
    DynamicGroupRedisPubSubOptions redis_pubsub = 113;

    // @gotags: kong:"cmd,help='Redis Streams'"
    DynamicGroupRedisStreamsOptions redis_streams = 114;
}

message DynamicGroupKafkaOptions {
    // @gotags: kong:"embed"
    args.KafkaConn _conn = 1;

    // @gotags: kong:"embed"
    args.KafkaWriteArgs args = 2;
}

message DynamicGroupActiveMQOptions {
    // @gotags: kong:"embed"
    args.ActiveMQConn _conn = 1;

    // @gotags: kong:"embed"
    args.ActiveMQWriteArgs args = 2;
}

message DynamicGroupAWSSQSOptions {
    // @gotags: kong:"embed"
    args.AWSSQSConn _conn = 1;

    // @gotags: kong:"embed"
    args.AWSSQSWriteArgs args = 2;
}

message DynamicGroupAWSSNSOptions {
    // @gotags: kong:"embed"
    args.AWSSNSConn _conn = 1;

    // @gotags: kong:"embed"
    args.AWSSNSWriteArgs args = 2;
}

message DynamicGroupNatsOptions {
    // @gotags: kong:"embed"
    args.NatsConn _conn = 1;

    // @gotags: kong:"embed"
    args.NatsWriteArgs args = 2;
}

message DynamicGroupNatsStreamingOptions {
    // @gotags: kong:"embed"
    args.NatsStreamingConn _conn = 1;

    // @gotags: kong:"embed"
    args.NatsStreamingWriteArgs args = 2;
}

message DynamicGroupNSQOptions {
    // @gotags: kong:"embed"
    args.NSQConn _conn = 1;

    // @gotags: kong:"embed"
    args.NSQWriteArgs args = 2;
}

message DynamicGroupRabbitOptions {
    // @gotags: kong:"embed"
    args.RabbitConn _conn = 1;

    // @gotags: kong:"embed"
    args.RabbitWriteArgs args = 2;
}

message DynamicGroupRabbitStreamsOptions {
    // @gotags: kong:"embed"
    args.RabbitStreamsConn _conn = 1;

    // @gotags: kong:"embed"
    args.RabbitStreamsWriteArgs args = 2;
}

message DynamicGroupRedisPubSubOptions {
    // @gotags: kong:"embed"
    args.RedisPubSubConn _conn = 1;

    // @gotags: kong:"embed"
    args.RedisPubSubWriteArgs args = 2;
}

message DynamicGroupRedisStreamsOptions {
    // @gotags: kong:"embed"
    args.RedisStreamsConn _conn = 1;

    // @gotags: kong:"embed"
    args.RedisStreamsWriteArgs args = 2;
}

message DynamicGroupAzureEventHubOptions {
    // @gotags: kong:"embed"
    args.AzureEventHubConn _conn = 1;

    // @gotags: kong:"embed"
    args.AzureEventHubWriteArgs args = 2;
}

message DynamicGroupAzureServiceBusOptions {
    // @gotags: kong:"embed"{
    args.AzureServiceBusConn _conn = 1;

    // @gotags: kong:"embed"
    args.AzureServiceBusWriteArgs args = 2;
}

message DynamicGroupMQTTOptions {
    // @gotags: kong:"embed"
    args.MQTTConn _conn = 1;

    // @gotags: kong:"embed"
    args.MQTTWriteArgs args = 2;
}

message DynamicGroupGCPPubSubOptions {
    // @gotags: kong:"embed"
    args.GCPPubSubConn _conn = 1;

    // @gotags: kong:"embed"
    args.GCPPubSubWriteArgs args = 2;
}

message DynamicGroupKubeMQQueueOptions {
    // @gotags: kong:"embed"
    args.KubeMQQueueConn _conn = 1;

    // @gotags: kong:"embed"
    args.KubeMQQueueWriteArgs args = 2;
}
