syntax = "proto3";

package protos;

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos";

import "encoding/ps_encoding_options.proto";
import "common/ps_common_auth.proto";
import "common/ps_common_status.proto";

message Schema {
    // ID to identify this schema by
    string id = 1;

    // Friendly name for the schema
    string name = 2;

    SchemaType type = 3;

    // @mark what's this used for?
    map<string,string> files = 4;

    // The 'type' will determine which one of these _should_ be filled out
    oneof settings {
        encoding.ProtobufSettings protobuf_settings = 100;
        encoding.AvroSettings avro_settings = 101;
    }
}

enum SchemaType {
    SCHEMA_TYPE_UNSET = 0;
    SCHEMA_TYPE_PROTOBUF = 1;
    SCHEMA_TYPE_AVRO = 2;
}

message GetSchemaRequest {
    // Every gRPC request must have a valid auth config
    common.Auth auth = 9999;

    string id = 1;
}

message GetSchemaResponse {
    Schema schema = 1;
}

message GetAllSchemasRequest {
    // Every gRPC request must have a valid auth config
    common.Auth auth = 9999;
}

message GetAllSchemasResponse {
    repeated Schema schema = 1;
}

message ImportGithubRequest {
    // Every gRPC request must have a valid auth config
    common.Auth auth = 9999;

    string name = 1;

    SchemaType type = 2;

    string github_url = 3;

    oneof settings {
        encoding.ProtobufSettings protobuf_settings = 100;
        encoding.AvroSettings avro_settings = 101;
    }
}

message ImportGithubResponse {
    common.Status status = 1000;

    string id = 1;
}

message ImportLocalRequest {
    // Every gRPC request must have a valid auth config
    common.Auth auth = 9999;

    string name = 1;

    SchemaType type = 2;

    bytes zip_archive = 3;

    oneof settings {
        encoding.ProtobufSettings protobuf_settings = 100;
        encoding.AvroSettings avro_settings = 101;
    }
}

message ImportLocalResponse {
    common.Status status = 1000;

    string id = 1;
}

message DeleteSchemaRequest {
    // Every gRPC request must have a valid auth config
    common.Auth auth = 9999;

    string id = 1;
}

message DeleteSchemaResponse {
    common.Status status = 1000;
}
