syntax = "proto3";

package protos;

import "read.proto";
import "write.proto";
import "relay.proto";
import "server.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos";

message GlobalCLIOptions {
    // @gotags: kong:"help='Enable debug output'"
    bool debug = 1;

    // @gotags: kong:"help='Disable fancy output (like curl -s)'"
    bool quiet = 2;

    /////////////////////////////////////////////
    //////// Used internally by the app /////////
    /////////////////////////////////////////////

    // @gotags: kong:"-"
    string _full_command = 3;

    // @gotags: kong:"-"
    string _action = 4;

    // @gotags: kong:"-"
    string _backend = 5;
}

// CLI options in plumber are derived 100% from the protobuf schemas.
// The CLIOptions type is used for populating base CLI options. Introducing
// a top-level CLI option should begin here (and trickle all the way down to
// any newly introduced types).
//
// For more info, check README_CLI.md
message CLIOptions {
    // @gotags: kong:"embed"
    GlobalCLIOptions global = 1;

    // @gotags: kong:"cmd,help=Read message(s) from messaging system"
    protos.ReadConfig read = 2;

    // @gotags: kong:"cmd,help=Write message(s) to messaging system"
    protos.WriteConfig write = 3;

    // @gotags: kong:"cmd,help=Relay message(s) from messaging system to Batch"
    protos.RelayConfig relay = 4;

     // @gotags: kong:"cmd,group=server,help=Run plumber in server mode"
    protos.ServerConfig server = 5;
}
