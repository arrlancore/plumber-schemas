syntax = "proto3";

package protos.backends;

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos/backends";

message KafkaConn {
    enum SASLType {
        NONE = 0;
        PLAIN = 1;
        SCRAM = 2;
    }

    // Required
    repeated string address = 1;

    // Optional; how long to attempt connecting for (default: 10s)
    int32 timeout_seconds = 2;

    // Optional
    bool use_tls = 3;

    // Optional
    bool insecure_tls = 4;

    // Optional
    SASLType sasl_type = 5;

    // Required if sasl_type is not NONE
    string sasl_username = 6;

    // Required if sasl_type is not NONE
    string sasl_password = 7;

}

message KafkaReadArgs {
    // Required
    repeated string topics = 1;

    // Optional; specify what offset the consumer should read from (only works if '--use-consumer-group' is false)
    int64 read_offset = 2;

    // Optional: (default: true)
    bool use_consumer_group = 3;

    // Optional; used only if "use_consumer_group" is true
    string consumer_group_name = 4;

    // Optional; how long to wait for new data when reading batches of messages (default: 1s)
    int32 max_wait_seconds = 5;

    // Optional; minimum number of bytes to fetch in a single kafka request (throughput optimization)
    int32 min_bytes = 6;

    // Optional; maximum number of bytes to fetch in a single kafka request (throughput optimization)
    int32 max_bytes = 7;

    // Optional; how often to commit offsets to broker (default: 0 == synchronous)
    // NOTE: Used only-if "use_consumer_group" is true
    int32 commit_interval_seconds = 8;

    // Optional; how long a coordinator will wait for member joins as part of a rebalance (default: 5s)
    int32 rebalance_timeout_seconds = 9;
}

message KafkaWriteArgs {
    // TODO: Fill this out
}
