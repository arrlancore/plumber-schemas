// x_relay.proto defines which args support relays.
//
// We do not utilize oneof to simplify integration with CLI options. Similarly,
// we incorporate the connection as part of the args so that conn can be
// specified in the correct position on the CLI (ie. after `plumber $action $backend`).
syntax = "proto3";

package protos;

import "args/azure-service-bus.proto";
import "args/aws-sqs.proto";
import "args/gcp-pubsub.proto";
import "args/kafka.proto";
import "args/kubemq-queue.proto";
import "args/mongo.proto";
import "args/mqtt.proto";
import "args/nsq.proto";
import "args/postgres.proto";
import "args/rabbit.proto";
import "args/redis-pubsub.proto";
import "args/redis-streams.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos";

message RelayOpts {
    // @gotags: kong:"cmd,help='Apache Kafka'"
    RelayOptsKafka kafka = 100;

    // @gotags: kong:"cmd,help='AWS Simple Queue System'"
    RelayOptsAWSSQS awssqs = 101;

    // @gotags: kong:"cmd,help='MongoDB (CDC)'"
    RelayOptsMongo mongo = 102;

    // @gotags: kong:"cmd,help='NSQ'"
    RelayOptsNSQ nsq = 103;

    // @gotags: kong:"cmd,help='MQTT'"
    RelayOptsRabbit rabbit = 104;

    // @gotags: kong:"cmd,help='MQTT'"
    RelayOptsMQTT mqtt = 105;

    // @gotags: kong:"cmd,help='Azure Service Bus'"
    RelayOptsAzureServiceBus azure_service_bus = 106;

    // @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
    RelayOptsGCPPubSub gcp_pubsub = 107;

    // @gotags: kong:"cmd,help='KubeMQ Queue'"
    RelayOptsKubeMQQueue kubemq_queue = 108;

    // @gotags: kong:"cmd,help='Redis PubSub'"
    RelayOptsRedisPubSub redis_pubsub = 109;

    // @gotags: kong:"cmd,help='Redis Streams'"
    RelayOptsRedisStreams redis_streams = 111;

    // @gotags: kong:"cmd,help='PostgreSQL (CDC)'"
    RelayOptsPostgres postgres = 112;
}

message RelayOptsKafka {
    // @gotags: kong:"embed"
    args.KafkaConn conn = 1;
    // @gotags: kong:"embed"
    args.KafkaRelayOpts args = 2;
}

message RelayOptsAWSSQS {
    // @gotags: kong:"embed"
    args.AWSSQSConn conn = 1;
    // @gotags: kong:"embed"
    args.AWSSQSRelayOpts args = 2;
}

message RelayOptsMongo {
    // @gotags: kong:"embed"
    args.MongoConn conn = 1;
    // @gotags: kong:"embed"
    args.MongoReadOpts args = 2;
}

message RelayOptsNSQ {
    // @gotags: kong:"embed"
    args.NSQConn conn = 1;
    // @gotags: kong:"embed"
    args.NSQReadOpts args = 2;
}

message RelayOptsPostgres {
    // @gotags: kong:"embed"
    args.PostgresConn conn = 1;
    // @gotags: kong:"embed"
    args.PostgresReadOpts args = 2;
}

message RelayOptsRabbit {
    // @gotags: kong:"embed"
    args.RabbitConn conn = 1;
    // @gotags: kong:"embed"
    args.RabbitReadOpts args = 2;
}

message RelayOptsRedisPubSub {
    // @gotags: kong:"embed"
    args.RedisPubSubConn conn = 1;
    // @gotags: kong:"embed"
    args.RedisPubSubReadOpts args = 2;
}

message RelayOptsRedisStreams {
    // @gotags: kong:"embed"
    args.RedisStreamsConn conn = 1;
    // @gotags: kong:"embed"
    args.RedisStreamsReadOpts args = 2;
}

message RelayOptsAzureServiceBus {
    // @gotags: kong:"embed"
    args.AzureServiceBusConn conn = 1;
    // @gotags: kong:"embed"
    args.AzureServiceBusReadOpts args = 2;
}

message RelayOptsMQTT {
    // @gotags: kong:"embed"
    args.MQTTConn conn = 1;
    // @gotags: kong:"embed"
    args.MQTTReadOpts args = 2;
}

message RelayOptsGCPPubSub {
    // @gotags: kong:"embed"
    args.GCPPubSubConn conn = 1;
    // @gotags: kong:"embed"
    args.GCPPubSubReadOpts args = 2;
}

message RelayOptsKubeMQQueue {
    // @gotags: kong:"embed"
    args.KubeMQQueueConn conn = 1;
    // @gotags: kong:"embed"
    args.KubeMQQueueReadOpts args = 2;
}
