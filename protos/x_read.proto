// x_read.proto defines which backends support reads.
//
// We do not utilize oneof to simplify integration with CLI options. Similarly,
// we incorporate the connection as part of the args so that conn can be
// specified in the correct position on the CLI (ie. after `plumber $action $backend`).
syntax = "proto3";

package protos;

import "args/activemq.proto";
import "args/azure-service-bus.proto";
import "args/azure-event-hub.proto";
import "args/aws-sqs.proto";
import "args/gcp-pubsub.proto";
import "args/kafka.proto";
import "args/kubemq-queue.proto";
import "args/mongo.proto";
import "args/mqtt.proto";
import "args/nats.proto";
import "args/nats-streaming.proto";
import "args/nsq.proto";
import "args/postgres.proto";
import "args/pulsar.proto";
import "args/rabbit.proto";
import "args/rabbit-streams.proto";
import "args/redis-pubsub.proto";
import "args/redis-streams.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos";

message ReadOpts {
    // @gotags: kong:"cmd,help='Apache Kafka'"
    ReadOptsKafka kafka = 100;

    // @gotags: kong:"cmd,help='Apache ActiveMQ (STOMP)'"
    ReadOptsActiveMQ activemq = 101;

    // @gotags: kong:"cmd,help='AWS Simple Queue System'"
    ReadOptsAWSSQS awssqs = 102;

    // @gotags: kong:"cmd,help='MongoDB'"
    ReadOptsMongo mongo = 103;

    // @gotags: kong:"cmd,help='NATS'"
    ReadOptsNats nats = 104;

    // @gotags: kong:"cmd,help='NATS Streaming'"
    ReadOptsNatsStreaming nats_streaming = 105;

    // @gotags: kong:"cmd,help='NSQ'"
    ReadOptsNSQ nsq = 106;

    // @gotags: kong:"cmd,help='Apache Pulsar'"
    ReadOptsPulsar pulsar = 107;

    // @gotags: kong:"cmd,help='RabbitMQ'"
    ReadOptsRabbit rabbit = 108;

    // @gotags: kong:"cmd,help='RabbitMQ Streams'"
    ReadOptsRabbitStreams rabbit_streams = 109;

    // @gotags: kong:"cmd,help='MQTT'"
    ReadOptsMQTT mqtt = 110;

    // @gotags: kong:"cmd,help='Azure Service Bus'"
    ReadOptsAzureServiceBus azure_service_bus = 111;

    // @gotags: kong:"cmd,help=''"
    ReadOptsAzureEventHub azure_event_hub = 112;

    // @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
    ReadOptsGCPPubSub gcp_pubsub = 113;

    // @gotags: kong:"cmd,help='KubeMQ Queue'"
    ReadOptsKubeMQQueue kubemq_queue = 114;

    // @gotags: kong:"cmd,help='Redis PubSub'"
    ReadOptsRedisPubSub redis_pubsub = 115;

    // @gotags: kong:"cmd,help='Redis Streams'"
    ReadOptsRedisStreams redis_streams = 116;

    // @gotags: kong:"cmd,help='PostgreSQL'"
    ReadOptsPostgres postgres = 117;
}

message ReadOptsKafka {
    // @gotags: kong:"embed"
    args.KafkaConn conn = 1;

    // @gotags: kong:"embed"
    args.KafkaReadOpts args = 2;
}

message ReadOptsActiveMQ {
    // @gotags: kong:"embed"
    args.ActiveMQConn conn = 1;

    // @gotags: kong:"embed"
    args.ActiveMQReadOpts args = 2;
}

message ReadOptsAWSSQS {
    // @gotags: kong:"embed"
    args.AWSSQSConn conn = 1;

    // @gotags: kong:"embed"
    args.AWSSQSReadOpts args = 2;
}

message ReadOptsMongo {
    // @gotags: kong:"embed"
    args.MongoConn conn = 1;

    // @gotags: kong:"embed"
    args.MongoReadOpts args = 2;
}

message ReadOptsNats {
    // @gotags: kong:"embed"
    args.NatsConn conn = 1;

    // @gotags: kong:"embed"
    args.NatsReadOpts args = 2;
}

message ReadOptsNatsStreaming {
    // @gotags: kong:"embed"
    args.NatsStreamingConn conn = 1;

    // @gotags: kong:"embed"
    args.NatsStreamingReadOpts args = 2;
}

message ReadOptsNSQ {
    // @gotags: kong:"embed"
    args.NSQConn conn = 1;

    // @gotags: kong:"embed"
    args.NSQReadOpts args = 2;
}

message ReadOptsPostgres {
    // @gotags: kong:"embed"
    args.PostgresConn conn = 1;

    // @gotags: kong:"embed"
    args.PostgresReadOpts args = 2;
}

message ReadOptsPulsar {
    // @gotags: kong:"embed"
    args.PulsarConn conn = 1;

    // @gotags: kong:"embed"
    args.PulsarReadOpts args = 2;
}

message ReadOptsRabbit {
    // @gotags: kong:"embed"
    args.RabbitConn conn = 1;

    // @gotags: kong:"embed"
    args.RabbitReadOpts args = 2;
}

message ReadOptsRabbitStreams {
    // @gotags: kong:"embed"
    args.RabbitStreamsConn conn = 1;

    // @gotags: kong:"embed"
    args.RabbitStreamsReadOpts args = 2;
}

message ReadOptsRedisPubSub {
    // @gotags: kong:"embed"
    args.RedisPubSubConn conn = 1;

    // @gotags: kong:"embed"
    args.RedisPubSubReadOpts args = 2;
}

message ReadOptsRedisStreams {
    // @gotags: kong:"embed"
    args.RedisStreamsConn conn = 1;

    // @gotags: kong:"embed"
    args.RedisStreamsReadOpts args = 2;
}

message ReadOptsAzureEventHub {
    // @gotags: kong:"embed"
    args.AzureEventHubConn conn = 1;

    // @gotags: kong:"embed"
    args.AzureEventHubReadOpts args = 2;
}

message ReadOptsAzureServiceBus {
    // @gotags: kong:"embed"
    args.AzureServiceBusConn conn = 1;

    // @gotags: kong:"embed"
    args.AzureServiceBusReadOpts args = 2;
}

message ReadOptsMQTT {
    // @gotags: kong:"embed"
    args.MQTTConn conn = 1;

    // @gotags: kong:"embed"
    args.MQTTReadOpts args = 2;
}

message ReadOptsGCPPubSub {
    // @gotags: kong:"embed"
    args.GCPPubSubConn conn  = 1;

    // @gotags: kong:"embed"
    args.GCPPubSubReadOpts args = 2;
}

message ReadOptsKubeMQQueue {
    // @gotags: kong:"embed"
    args.KubeMQQueueConn conn = 1;

    // @gotags: kong:"embed"
    args.KubeMQQueueReadOpts args = 2;
}
