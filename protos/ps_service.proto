syntax = "proto3";

package protos;

import "common/ps_common_auth.proto";
import "common/ps_common_status.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos";

message Service {
  string id = 1;

  string name = 2;

  repeated Repository repositories = 3;

  string notes = 4;

  string owner_id = 5;

  repeated string used_schemas = 6;
}

message Repository {
  enum Type {
    UNSET = 0;
    GITHUB = 1;
    GITLAB = 2;
    BITBUCKET = 3;
  }

  string _id = 1;

  Type type = 2;

  string organization = 3;

  string name = 4;
}

message GetServiceRequest {
  common.Auth auth = 9999;

  string id = 1;
}

message GetServiceResponse {
  Service service = 1;

  common.Status status = 1000;
}

message GetAllServicesRequest {
  common.Auth auth = 9999;
}

message GetAllServicesResponse {
  repeated Service services = 1;

  common.Status status = 1000;
}

message CreateServiceRequest {
  common.Auth auth = 9999;

  Service service = 1;
}

message CreateServiceResponse {
  Service service = 1;

  common.Status status = 1000;
}

message UpdateServiceRequest {
  common.Auth auth = 9999;

  Service service = 1;
}

message UpdateServiceResponse {
  Service service = 1;

  common.Status status = 1000;
}

message DeleteServiceRequest {
  string id = 1;

  common.Auth auth = 9999;
}

message DeleteServiceResponse {
  common.Status status = 1000;
}

message LinkSchemaToServiceRequest {
  common.Auth auth = 9999;

  string service_id = 1;

  string schema_id = 2;
}

message LinkSchemaToServiceResponse {
  common.Status status = 1000;
}

message UnlinkSchemaFromServiceRequest {
  common.Auth auth = 9999;

  string service_id = 1;

  string schema_id = 2;
}

message UnlinkSchemaFromServiceResponse {
  common.Status status = 1000;
}

message LinkRepoToServiceRequest {
  common.Auth auth = 9999;

  string service_id = 1;

  string repo_url = 2;
}

message LinkRepoToServiceResponse {
  common.Status status = 1000;
}

message UnlinkRepoFromServiceRequest {
  common.Auth auth = 9999;

  string service_id = 1;

  string repo_id = 2;
}

message UnlinkRepoFromServiceResponse {
  common.Status status = 1000;
}