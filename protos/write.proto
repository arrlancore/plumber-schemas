syntax = "proto3";

package protos;

import "x_write.proto";
import "records/kafka.proto";
import "common/auth.proto";
import "records/base.proto";
import "common/status.proto";
import "encoding/options.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos";

message WriteCLIConfig {
    // @gotags: kong:"help='Write data from input file',existingfile,xor=input"
    string input_file = 1;
}

// WriteConfig is used by both CLI and server to facilitate a write request.
// It is the responsibility of the handler (CLI or server) to read EncodeOptions,
// CLI config, etc. and update the *WriteArgs accordingly. Ie. If CLI passes
// a file, the CLI handler should read the file and set it in *WriteArgs.WriteRecord.
message WriteConfig {
    // Required for desktop; ignored in CLI.
    // @gotags: kong:"-"
    string connection_id = 1;

    // Specifying encoding options will cause the _value_ of the record to get
    // encoded and set in WriteRecord.encoded.
    // @gotags: kong:"embed,group=encode"
    encoding.EncodeOptions encode_options = 2;

    // @gotags: kong:"embed"
    WriteArgs write_args = 3;

    // Optional; CLI-specific and non-backend-specific options
    // @gotags: kong:"embed"
    WriteCLIConfig _cli_config = 4;
}

message WriteRequest {
    // Every gRPC request must have a valid auth config
    common.Auth auth = 9999;

    WriteConfig config = 1;
}

message WriteResponse {
    common.Status status = 1000;
}
