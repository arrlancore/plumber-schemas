// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nats-streaming.proto

package backends

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NatsStreamingConn struct {
	// Required
	// Full DNS to connect to NATS. Ex: tls://localhost:4222
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Specify to not verify server's TLS certificate
	InsecureTls bool `protobuf:"varint,2,opt,name=insecure_tls,json=insecureTls,proto3" json:"insecure_tls,omitempty"`
	// Optional
	TlsCaCert []byte `protobuf:"bytes,3,opt,name=tls_ca_cert,json=tlsCaCert,proto3" json:"tls_ca_cert,omitempty"`
	// Optional
	TlsClientCert []byte `protobuf:"bytes,4,opt,name=tls_client_cert,json=tlsClientCert,proto3" json:"tls_client_cert,omitempty"`
	// Optional
	TlsClientKey []byte `protobuf:"bytes,5,opt,name=tls_client_key,json=tlsClientKey,proto3" json:"tls_client_key,omitempty"`
	// Optional
	UserCredentials []byte `protobuf:"bytes,6,opt,name=user_credentials,json=userCredentials,proto3" json:"user_credentials,omitempty"`
	// Required
	ClusterId string `protobuf:"bytes,7,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Required
	ClientId             string   `protobuf:"bytes,8,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NatsStreamingConn) Reset()         { *m = NatsStreamingConn{} }
func (m *NatsStreamingConn) String() string { return proto.CompactTextString(m) }
func (*NatsStreamingConn) ProtoMessage()    {}
func (*NatsStreamingConn) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee022785668eb1d, []int{0}
}

func (m *NatsStreamingConn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NatsStreamingConn.Unmarshal(m, b)
}
func (m *NatsStreamingConn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NatsStreamingConn.Marshal(b, m, deterministic)
}
func (m *NatsStreamingConn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NatsStreamingConn.Merge(m, src)
}
func (m *NatsStreamingConn) XXX_Size() int {
	return xxx_messageInfo_NatsStreamingConn.Size(m)
}
func (m *NatsStreamingConn) XXX_DiscardUnknown() {
	xxx_messageInfo_NatsStreamingConn.DiscardUnknown(m)
}

var xxx_messageInfo_NatsStreamingConn proto.InternalMessageInfo

func (m *NatsStreamingConn) GetDsn() string {
	if m != nil {
		return m.Dsn
	}
	return ""
}

func (m *NatsStreamingConn) GetInsecureTls() bool {
	if m != nil {
		return m.InsecureTls
	}
	return false
}

func (m *NatsStreamingConn) GetTlsCaCert() []byte {
	if m != nil {
		return m.TlsCaCert
	}
	return nil
}

func (m *NatsStreamingConn) GetTlsClientCert() []byte {
	if m != nil {
		return m.TlsClientCert
	}
	return nil
}

func (m *NatsStreamingConn) GetTlsClientKey() []byte {
	if m != nil {
		return m.TlsClientKey
	}
	return nil
}

func (m *NatsStreamingConn) GetUserCredentials() []byte {
	if m != nil {
		return m.UserCredentials
	}
	return nil
}

func (m *NatsStreamingConn) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *NatsStreamingConn) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type NatsStreamingReadArgs struct {
	// Required
	// Channel name to read from/write to
	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	// Optional
	// Create a durable subscription with this name for the given channel
	DurableName string `protobuf:"bytes,2,opt,name=durable_name,json=durableName,proto3" json:"durable_name,omitempty"`
	// Start reading at last available message
	ReadLastAvailable bool `protobuf:"varint,3,opt,name=read_last_available,json=readLastAvailable,proto3" json:"read_last_available,omitempty"`
	// Start reading at a sequence number
	ReadSequenceNumber uint32 `protobuf:"varint,4,opt,name=read_sequence_number,json=readSequenceNumber,proto3" json:"read_sequence_number,omitempty"`
	// Start reading at a time interval ago
	// Ex: 1s, 15m, 3h, 10h
	ReadSince string `protobuf:"bytes,5,opt,name=read_since,json=readSince,proto3" json:"read_since,omitempty"`
	// Read everything
	ReadAll              bool     `protobuf:"varint,6,opt,name=read_all,json=readAll,proto3" json:"read_all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NatsStreamingReadArgs) Reset()         { *m = NatsStreamingReadArgs{} }
func (m *NatsStreamingReadArgs) String() string { return proto.CompactTextString(m) }
func (*NatsStreamingReadArgs) ProtoMessage()    {}
func (*NatsStreamingReadArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee022785668eb1d, []int{1}
}

func (m *NatsStreamingReadArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NatsStreamingReadArgs.Unmarshal(m, b)
}
func (m *NatsStreamingReadArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NatsStreamingReadArgs.Marshal(b, m, deterministic)
}
func (m *NatsStreamingReadArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NatsStreamingReadArgs.Merge(m, src)
}
func (m *NatsStreamingReadArgs) XXX_Size() int {
	return xxx_messageInfo_NatsStreamingReadArgs.Size(m)
}
func (m *NatsStreamingReadArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_NatsStreamingReadArgs.DiscardUnknown(m)
}

var xxx_messageInfo_NatsStreamingReadArgs proto.InternalMessageInfo

func (m *NatsStreamingReadArgs) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *NatsStreamingReadArgs) GetDurableName() string {
	if m != nil {
		return m.DurableName
	}
	return ""
}

func (m *NatsStreamingReadArgs) GetReadLastAvailable() bool {
	if m != nil {
		return m.ReadLastAvailable
	}
	return false
}

func (m *NatsStreamingReadArgs) GetReadSequenceNumber() uint32 {
	if m != nil {
		return m.ReadSequenceNumber
	}
	return 0
}

func (m *NatsStreamingReadArgs) GetReadSince() string {
	if m != nil {
		return m.ReadSince
	}
	return ""
}

func (m *NatsStreamingReadArgs) GetReadAll() bool {
	if m != nil {
		return m.ReadAll
	}
	return false
}

type NatsStreamingWriteArgs struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NatsStreamingWriteArgs) Reset()         { *m = NatsStreamingWriteArgs{} }
func (m *NatsStreamingWriteArgs) String() string { return proto.CompactTextString(m) }
func (*NatsStreamingWriteArgs) ProtoMessage()    {}
func (*NatsStreamingWriteArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ee022785668eb1d, []int{2}
}

func (m *NatsStreamingWriteArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NatsStreamingWriteArgs.Unmarshal(m, b)
}
func (m *NatsStreamingWriteArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NatsStreamingWriteArgs.Marshal(b, m, deterministic)
}
func (m *NatsStreamingWriteArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NatsStreamingWriteArgs.Merge(m, src)
}
func (m *NatsStreamingWriteArgs) XXX_Size() int {
	return xxx_messageInfo_NatsStreamingWriteArgs.Size(m)
}
func (m *NatsStreamingWriteArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_NatsStreamingWriteArgs.DiscardUnknown(m)
}

var xxx_messageInfo_NatsStreamingWriteArgs proto.InternalMessageInfo

func init() {
	proto.RegisterType((*NatsStreamingConn)(nil), "protos.backends.NatsStreamingConn")
	proto.RegisterType((*NatsStreamingReadArgs)(nil), "protos.backends.NatsStreamingReadArgs")
	proto.RegisterType((*NatsStreamingWriteArgs)(nil), "protos.backends.NatsStreamingWriteArgs")
}

func init() { proto.RegisterFile("nats-streaming.proto", fileDescriptor_9ee022785668eb1d) }

var fileDescriptor_9ee022785668eb1d = []byte{
	// 435 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0x86, 0xc9, 0xae, 0x6e, 0x93, 0x69, 0xd7, 0xee, 0x8e, 0xab, 0x44, 0x44, 0xa9, 0x45, 0xa4,
	0x5e, 0x6c, 0x23, 0x78, 0x2d, 0x52, 0x7b, 0xb5, 0x28, 0xbd, 0xc8, 0x0a, 0x82, 0x37, 0xe1, 0x64,
	0xe6, 0xd0, 0x0e, 0x3b, 0x99, 0xd4, 0x39, 0x13, 0x61, 0x1f, 0xc6, 0x77, 0xf4, 0x11, 0x64, 0x4e,
	0x13, 0xb5, 0x57, 0xc9, 0xfc, 0xdf, 0x37, 0x0c, 0xe7, 0xe7, 0x88, 0x2b, 0x07, 0x81, 0xae, 0x29,
	0x78, 0x84, 0xc6, 0xb8, 0xed, 0x72, 0xef, 0xdb, 0xd0, 0xca, 0x29, 0x7f, 0x68, 0x59, 0x83, 0xba,
	0x43, 0xa7, 0x69, 0xfe, 0xeb, 0x44, 0x5c, 0x6e, 0x20, 0xd0, 0xed, 0x20, 0xae, 0x5b, 0xe7, 0xe4,
	0x85, 0x38, 0xd5, 0xe4, 0xf2, 0x64, 0x96, 0x2c, 0xb2, 0x32, 0xfe, 0xca, 0x57, 0x62, 0x62, 0x1c,
	0xa1, 0xea, 0x3c, 0x56, 0xc1, 0x52, 0x7e, 0x32, 0x4b, 0x16, 0x69, 0x39, 0x1e, 0xb2, 0xaf, 0x96,
	0xe4, 0x4b, 0x31, 0x0e, 0x96, 0x2a, 0x05, 0x95, 0x42, 0x1f, 0xf2, 0xd3, 0x59, 0xb2, 0x98, 0x94,
	0x59, 0xb0, 0xb4, 0x86, 0x35, 0xfa, 0x20, 0xdf, 0x88, 0x29, 0x73, 0x6b, 0xd0, 0x85, 0x83, 0xf3,
	0x80, 0x9d, 0xf3, 0xe8, 0x70, 0xca, 0xde, 0x6b, 0xf1, 0xe8, 0x3f, 0xef, 0x0e, 0xef, 0xf3, 0x87,
	0xac, 0x4d, 0xfe, 0x6a, 0x9f, 0xf1, 0x5e, 0xbe, 0x15, 0x17, 0x1d, 0xa1, 0xaf, 0x94, 0x47, 0x8d,
	0x2e, 0x18, 0xb0, 0x94, 0x9f, 0xb1, 0x37, 0x8d, 0xf9, 0xfa, 0x5f, 0x2c, 0x5f, 0x08, 0xa1, 0x6c,
	0x47, 0x01, 0x7d, 0x65, 0x74, 0x3e, 0xe2, 0xa1, 0xb2, 0x3e, 0xb9, 0xd1, 0xf2, 0xb9, 0xc8, 0xfa,
	0xb7, 0x8c, 0xce, 0x53, 0xa6, 0xe9, 0x21, 0xb8, 0xd1, 0xf3, 0xdf, 0x89, 0x78, 0x72, 0xd4, 0x4f,
	0x89, 0xa0, 0x57, 0x7e, 0x4b, 0x32, 0x17, 0x23, 0xb5, 0x03, 0xe7, 0xd0, 0xf6, 0x3d, 0x0d, 0xc7,
	0xd8, 0x95, 0xee, 0x3c, 0xd4, 0x16, 0x2b, 0x07, 0x0d, 0x72, 0x57, 0x59, 0x39, 0xee, 0xb3, 0x0d,
	0x34, 0x28, 0x97, 0xe2, 0xb1, 0x47, 0xd0, 0x95, 0x05, 0x0a, 0x15, 0xfc, 0x04, 0x63, 0x23, 0xe2,
	0xce, 0xd2, 0xf2, 0x32, 0xa2, 0x2f, 0x40, 0x61, 0x35, 0x00, 0xf9, 0x4e, 0x5c, 0xb1, 0x4f, 0xf8,
	0xa3, 0x43, 0xa7, 0xb0, 0x72, 0x5d, 0x53, 0xa3, 0xe7, 0x02, 0xcf, 0x4b, 0x19, 0xd9, 0x6d, 0x8f,
	0x36, 0x4c, 0xe2, 0xd0, 0x87, 0x1b, 0xc6, 0x29, 0xe4, 0x06, 0xb3, 0x32, 0x63, 0x2f, 0x06, 0xf2,
	0x99, 0x48, 0x19, 0x83, 0xb5, 0x5c, 0x5b, 0x5a, 0x8e, 0xe2, 0x79, 0x65, 0xed, 0x3c, 0x17, 0x4f,
	0x8f, 0x26, 0xfe, 0xe6, 0x4d, 0xc0, 0x38, 0xf2, 0xa7, 0x8f, 0xdf, 0x3f, 0x6c, 0x4d, 0xd8, 0x75,
	0xf5, 0x52, 0xb5, 0x4d, 0x51, 0x43, 0x50, 0x3b, 0xd5, 0xfa, 0x7d, 0xb1, 0xb7, 0xfc, 0xe6, 0x35,
	0xa9, 0x1d, 0x36, 0x40, 0x45, 0xdd, 0x19, 0xab, 0x8b, 0x6d, 0x5b, 0x1c, 0xb6, 0xad, 0x18, 0xb6,
	0xad, 0x3e, 0xe3, 0xe0, 0xfd, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1a, 0x3f, 0x79, 0xa9, 0x9d,
	0x02, 0x00, 0x00,
}
