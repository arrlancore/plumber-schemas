// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backends.proto

package backends

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Type int32

const (
	Type_UNSET             Type = 0
	Type_KAFKA             Type = 1
	Type_RABBIT            Type = 2
	Type_RABBIT_STREAMS    Type = 3
	Type_NSQ               Type = 4
	Type_NATS              Type = 5
	Type_NATS_STREAMING    Type = 6
	Type_GCP_PUBSUB        Type = 7
	Type_AZURE_SERVICE_BUS Type = 8
	Type_AZURE_EVENT_HUB   Type = 9
	Type_AWS_SQS           Type = 10
	Type_AWS_SNS           Type = 11
	Type_REDIS_PUBSUB      Type = 12
	Type_REDIS_STREAMS     Type = 13
	Type_ACTIVEMQ          Type = 14
	Type_PULSAR            Type = 15
	Type_MQTT              Type = 16
	Type_POSTGRES_CDC      Type = 17
	Type_MONGODB_CDC       Type = 18
	Type_KUBE_MQ           Type = 19
)

var Type_name = map[int32]string{
	0:  "UNSET",
	1:  "KAFKA",
	2:  "RABBIT",
	3:  "RABBIT_STREAMS",
	4:  "NSQ",
	5:  "NATS",
	6:  "NATS_STREAMING",
	7:  "GCP_PUBSUB",
	8:  "AZURE_SERVICE_BUS",
	9:  "AZURE_EVENT_HUB",
	10: "AWS_SQS",
	11: "AWS_SNS",
	12: "REDIS_PUBSUB",
	13: "REDIS_STREAMS",
	14: "ACTIVEMQ",
	15: "PULSAR",
	16: "MQTT",
	17: "POSTGRES_CDC",
	18: "MONGODB_CDC",
	19: "KUBE_MQ",
}

var Type_value = map[string]int32{
	"UNSET":             0,
	"KAFKA":             1,
	"RABBIT":            2,
	"RABBIT_STREAMS":    3,
	"NSQ":               4,
	"NATS":              5,
	"NATS_STREAMING":    6,
	"GCP_PUBSUB":        7,
	"AZURE_SERVICE_BUS": 8,
	"AZURE_EVENT_HUB":   9,
	"AWS_SQS":           10,
	"AWS_SNS":           11,
	"REDIS_PUBSUB":      12,
	"REDIS_STREAMS":     13,
	"ACTIVEMQ":          14,
	"PULSAR":            15,
	"MQTT":              16,
	"POSTGRES_CDC":      17,
	"MONGODB_CDC":       18,
	"KUBE_MQ":           19,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_058942009bb99fa7, []int{0}
}

func init() {
	proto.RegisterEnum("protos.backends.Type", Type_name, Type_value)
}

func init() { proto.RegisterFile("backends.proto", fileDescriptor_058942009bb99fa7) }

var fileDescriptor_058942009bb99fa7 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x90, 0x51, 0x8f, 0x9a, 0x40,
	0x14, 0x85, 0xdb, 0x5d, 0x57, 0xdd, 0xab, 0x0b, 0xd7, 0xbb, 0xe9, 0x9f, 0x68, 0x52, 0x79, 0xe8,
	0x73, 0xd3, 0xcc, 0xe0, 0x94, 0x12, 0x0b, 0x02, 0x77, 0xc6, 0x26, 0xbe, 0x4c, 0x04, 0x89, 0x9a,
	0x6a, 0x21, 0xa2, 0x0f, 0xfd, 0x5b, 0xfd, 0x85, 0x0d, 0x52, 0xf6, 0x69, 0xce, 0x7c, 0x39, 0x39,
	0x73, 0xe6, 0x80, 0x93, 0x6f, 0x8b, 0x5f, 0xe5, 0xef, 0x5d, 0x33, 0xaf, 0x2f, 0xd5, 0xb5, 0x22,
	0xf7, 0x7e, 0x34, 0xf3, 0x1e, 0x7f, 0xfc, 0xfb, 0x00, 0x03, 0xfd, 0xa7, 0x2e, 0xe9, 0x19, 0x9e,
	0x4c, 0xcc, 0x4a, 0xe3, 0xbb, 0x56, 0x2e, 0xc5, 0xb7, 0xa5, 0xc0, 0xf7, 0x04, 0x30, 0xcc, 0x84,
	0x94, 0xa1, 0xc6, 0x07, 0x22, 0x70, 0x3a, 0x6d, 0x59, 0x67, 0x4a, 0x44, 0x8c, 0x8f, 0x34, 0x82,
	0xc7, 0x98, 0x53, 0x1c, 0xd0, 0x18, 0x06, 0xb1, 0xd0, 0x8c, 0x4f, 0xad, 0xad, 0x55, 0xff, 0x4d,
	0x61, 0x1c, 0xe0, 0x90, 0x1c, 0x80, 0xc0, 0x4f, 0x6c, 0x62, 0x24, 0x1b, 0x89, 0x23, 0xfa, 0x00,
	0x33, 0xb1, 0x31, 0x99, 0xb2, 0xac, 0xb2, 0x75, 0xe8, 0x2b, 0x2b, 0x0d, 0xe3, 0x98, 0x5e, 0xc1,
	0xed, 0xb0, 0x5a, 0xab, 0x58, 0xdb, 0xef, 0x46, 0xe2, 0x33, 0x4d, 0x60, 0x24, 0x7e, 0xb2, 0xe5,
	0x94, 0x11, 0xde, 0x2e, 0x31, 0xe3, 0x84, 0x10, 0xa6, 0x99, 0x5a, 0x84, 0xdc, 0xe7, 0x4e, 0x69,
	0x06, 0x2f, 0x1d, 0xe9, 0x1b, 0xbe, 0xd0, 0x14, 0xc6, 0xc2, 0xd7, 0xe1, 0x5a, 0x45, 0x29, 0x3a,
	0xed, 0x7f, 0x12, 0xf3, 0x83, 0x45, 0x86, 0x6e, 0x5b, 0x39, 0x4a, 0xb5, 0x46, 0x6c, 0x83, 0x92,
	0x15, 0xeb, 0x20, 0x53, 0x6c, 0xfd, 0x85, 0x8f, 0x33, 0x72, 0x61, 0x12, 0xad, 0xe2, 0x60, 0xb5,
	0x90, 0x77, 0x40, 0xed, 0xc3, 0x4b, 0x23, 0x95, 0x8d, 0x52, 0x7c, 0x95, 0x5f, 0x37, 0x5f, 0xf6,
	0xc7, 0xeb, 0xe1, 0x96, 0xcf, 0x8b, 0xea, 0xec, 0xe5, 0xdb, 0x6b, 0x71, 0x28, 0xaa, 0x4b, 0xed,
	0xd5, 0xa7, 0xdb, 0x39, 0x2f, 0x2f, 0x9f, 0x9a, 0xe2, 0x50, 0x9e, 0xb7, 0x8d, 0x97, 0xdf, 0x8e,
	0xa7, 0x9d, 0xb7, 0xaf, 0xbc, 0x6e, 0x75, 0xaf, 0x5f, 0x3d, 0x1f, 0xde, 0xc1, 0xe7, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x9d, 0x69, 0x9e, 0xf5, 0x9f, 0x01, 0x00, 0x00,
}
