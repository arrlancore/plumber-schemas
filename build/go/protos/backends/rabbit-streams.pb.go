// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rabbit-streams.proto

package backends

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RabbitStreams struct {
	// Required
	Stream string `protobuf:"bytes,1,opt,name=stream,proto3" json:"stream,omitempty"`
	// Optional
	// If specified, stream will be declared
	DeclareStream *DeclareStream `protobuf:"bytes,2,opt,name=declare_stream,json=declareStream,proto3" json:"declare_stream,omitempty"`
	// Types that are valid to be assigned to OffsetOption:
	//	*RabbitStreams_Offset
	//	*RabbitStreams_LastOffset
	//	*RabbitStreams_LastConsumed
	//	*RabbitStreams_FirstOffset
	//	*RabbitStreams_NextOffset
	OffsetOption         isRabbitStreams_OffsetOption `protobuf_oneof:"offset_option"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RabbitStreams) Reset()         { *m = RabbitStreams{} }
func (m *RabbitStreams) String() string { return proto.CompactTextString(m) }
func (*RabbitStreams) ProtoMessage()    {}
func (*RabbitStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f92fc7a2c25d9d7, []int{0}
}

func (m *RabbitStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RabbitStreams.Unmarshal(m, b)
}
func (m *RabbitStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RabbitStreams.Marshal(b, m, deterministic)
}
func (m *RabbitStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RabbitStreams.Merge(m, src)
}
func (m *RabbitStreams) XXX_Size() int {
	return xxx_messageInfo_RabbitStreams.Size(m)
}
func (m *RabbitStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_RabbitStreams.DiscardUnknown(m)
}

var xxx_messageInfo_RabbitStreams proto.InternalMessageInfo

func (m *RabbitStreams) GetStream() string {
	if m != nil {
		return m.Stream
	}
	return ""
}

func (m *RabbitStreams) GetDeclareStream() *DeclareStream {
	if m != nil {
		return m.DeclareStream
	}
	return nil
}

type isRabbitStreams_OffsetOption interface {
	isRabbitStreams_OffsetOption()
}

type RabbitStreams_Offset struct {
	Offset *SpecificOffset `protobuf:"bytes,101,opt,name=offset,proto3,oneof"`
}

type RabbitStreams_LastOffset struct {
	LastOffset *LastOffset `protobuf:"bytes,102,opt,name=last_offset,json=lastOffset,proto3,oneof"`
}

type RabbitStreams_LastConsumed struct {
	LastConsumed *LastConsumed `protobuf:"bytes,103,opt,name=last_consumed,json=lastConsumed,proto3,oneof"`
}

type RabbitStreams_FirstOffset struct {
	FirstOffset *FirstOffset `protobuf:"bytes,104,opt,name=first_offset,json=firstOffset,proto3,oneof"`
}

type RabbitStreams_NextOffset struct {
	NextOffset *NextOffset `protobuf:"bytes,105,opt,name=next_offset,json=nextOffset,proto3,oneof"`
}

func (*RabbitStreams_Offset) isRabbitStreams_OffsetOption() {}

func (*RabbitStreams_LastOffset) isRabbitStreams_OffsetOption() {}

func (*RabbitStreams_LastConsumed) isRabbitStreams_OffsetOption() {}

func (*RabbitStreams_FirstOffset) isRabbitStreams_OffsetOption() {}

func (*RabbitStreams_NextOffset) isRabbitStreams_OffsetOption() {}

func (m *RabbitStreams) GetOffsetOption() isRabbitStreams_OffsetOption {
	if m != nil {
		return m.OffsetOption
	}
	return nil
}

func (m *RabbitStreams) GetOffset() *SpecificOffset {
	if x, ok := m.GetOffsetOption().(*RabbitStreams_Offset); ok {
		return x.Offset
	}
	return nil
}

func (m *RabbitStreams) GetLastOffset() *LastOffset {
	if x, ok := m.GetOffsetOption().(*RabbitStreams_LastOffset); ok {
		return x.LastOffset
	}
	return nil
}

func (m *RabbitStreams) GetLastConsumed() *LastConsumed {
	if x, ok := m.GetOffsetOption().(*RabbitStreams_LastConsumed); ok {
		return x.LastConsumed
	}
	return nil
}

func (m *RabbitStreams) GetFirstOffset() *FirstOffset {
	if x, ok := m.GetOffsetOption().(*RabbitStreams_FirstOffset); ok {
		return x.FirstOffset
	}
	return nil
}

func (m *RabbitStreams) GetNextOffset() *NextOffset {
	if x, ok := m.GetOffsetOption().(*RabbitStreams_NextOffset); ok {
		return x.NextOffset
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RabbitStreams) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RabbitStreams_Offset)(nil),
		(*RabbitStreams_LastOffset)(nil),
		(*RabbitStreams_LastConsumed)(nil),
		(*RabbitStreams_FirstOffset)(nil),
		(*RabbitStreams_NextOffset)(nil),
	}
}

type DeclareStream struct {
	// Size capacity to declare the stream with. Ex: 10mb, 3gb, 1024k
	Size                 string   `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeclareStream) Reset()         { *m = DeclareStream{} }
func (m *DeclareStream) String() string { return proto.CompactTextString(m) }
func (*DeclareStream) ProtoMessage()    {}
func (*DeclareStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f92fc7a2c25d9d7, []int{1}
}

func (m *DeclareStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeclareStream.Unmarshal(m, b)
}
func (m *DeclareStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeclareStream.Marshal(b, m, deterministic)
}
func (m *DeclareStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeclareStream.Merge(m, src)
}
func (m *DeclareStream) XXX_Size() int {
	return xxx_messageInfo_DeclareStream.Size(m)
}
func (m *DeclareStream) XXX_DiscardUnknown() {
	xxx_messageInfo_DeclareStream.DiscardUnknown(m)
}

var xxx_messageInfo_DeclareStream proto.InternalMessageInfo

func (m *DeclareStream) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

type SpecificOffset struct {
	Offset               uint64   `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecificOffset) Reset()         { *m = SpecificOffset{} }
func (m *SpecificOffset) String() string { return proto.CompactTextString(m) }
func (*SpecificOffset) ProtoMessage()    {}
func (*SpecificOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f92fc7a2c25d9d7, []int{2}
}

func (m *SpecificOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecificOffset.Unmarshal(m, b)
}
func (m *SpecificOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecificOffset.Marshal(b, m, deterministic)
}
func (m *SpecificOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecificOffset.Merge(m, src)
}
func (m *SpecificOffset) XXX_Size() int {
	return xxx_messageInfo_SpecificOffset.Size(m)
}
func (m *SpecificOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecificOffset.DiscardUnknown(m)
}

var xxx_messageInfo_SpecificOffset proto.InternalMessageInfo

func (m *SpecificOffset) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type LastOffset struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastOffset) Reset()         { *m = LastOffset{} }
func (m *LastOffset) String() string { return proto.CompactTextString(m) }
func (*LastOffset) ProtoMessage()    {}
func (*LastOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f92fc7a2c25d9d7, []int{3}
}

func (m *LastOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastOffset.Unmarshal(m, b)
}
func (m *LastOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastOffset.Marshal(b, m, deterministic)
}
func (m *LastOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastOffset.Merge(m, src)
}
func (m *LastOffset) XXX_Size() int {
	return xxx_messageInfo_LastOffset.Size(m)
}
func (m *LastOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_LastOffset.DiscardUnknown(m)
}

var xxx_messageInfo_LastOffset proto.InternalMessageInfo

type LastConsumed struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LastConsumed) Reset()         { *m = LastConsumed{} }
func (m *LastConsumed) String() string { return proto.CompactTextString(m) }
func (*LastConsumed) ProtoMessage()    {}
func (*LastConsumed) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f92fc7a2c25d9d7, []int{4}
}

func (m *LastConsumed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LastConsumed.Unmarshal(m, b)
}
func (m *LastConsumed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LastConsumed.Marshal(b, m, deterministic)
}
func (m *LastConsumed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LastConsumed.Merge(m, src)
}
func (m *LastConsumed) XXX_Size() int {
	return xxx_messageInfo_LastConsumed.Size(m)
}
func (m *LastConsumed) XXX_DiscardUnknown() {
	xxx_messageInfo_LastConsumed.DiscardUnknown(m)
}

var xxx_messageInfo_LastConsumed proto.InternalMessageInfo

type FirstOffset struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FirstOffset) Reset()         { *m = FirstOffset{} }
func (m *FirstOffset) String() string { return proto.CompactTextString(m) }
func (*FirstOffset) ProtoMessage()    {}
func (*FirstOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f92fc7a2c25d9d7, []int{5}
}

func (m *FirstOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FirstOffset.Unmarshal(m, b)
}
func (m *FirstOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FirstOffset.Marshal(b, m, deterministic)
}
func (m *FirstOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FirstOffset.Merge(m, src)
}
func (m *FirstOffset) XXX_Size() int {
	return xxx_messageInfo_FirstOffset.Size(m)
}
func (m *FirstOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_FirstOffset.DiscardUnknown(m)
}

var xxx_messageInfo_FirstOffset proto.InternalMessageInfo

type NextOffset struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NextOffset) Reset()         { *m = NextOffset{} }
func (m *NextOffset) String() string { return proto.CompactTextString(m) }
func (*NextOffset) ProtoMessage()    {}
func (*NextOffset) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f92fc7a2c25d9d7, []int{6}
}

func (m *NextOffset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NextOffset.Unmarshal(m, b)
}
func (m *NextOffset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NextOffset.Marshal(b, m, deterministic)
}
func (m *NextOffset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NextOffset.Merge(m, src)
}
func (m *NextOffset) XXX_Size() int {
	return xxx_messageInfo_NextOffset.Size(m)
}
func (m *NextOffset) XXX_DiscardUnknown() {
	xxx_messageInfo_NextOffset.DiscardUnknown(m)
}

var xxx_messageInfo_NextOffset proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RabbitStreams)(nil), "protos.backends.RabbitStreams")
	proto.RegisterType((*DeclareStream)(nil), "protos.backends.DeclareStream")
	proto.RegisterType((*SpecificOffset)(nil), "protos.backends.SpecificOffset")
	proto.RegisterType((*LastOffset)(nil), "protos.backends.LastOffset")
	proto.RegisterType((*LastConsumed)(nil), "protos.backends.LastConsumed")
	proto.RegisterType((*FirstOffset)(nil), "protos.backends.FirstOffset")
	proto.RegisterType((*NextOffset)(nil), "protos.backends.NextOffset")
}

func init() { proto.RegisterFile("rabbit-streams.proto", fileDescriptor_1f92fc7a2c25d9d7) }

var fileDescriptor_1f92fc7a2c25d9d7 = []byte{
	// 364 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4f, 0x83, 0x40,
	0x10, 0xc5, 0x5b, 0x6d, 0x9a, 0x38, 0x40, 0x9b, 0x6c, 0x8c, 0x69, 0xe2, 0xbf, 0x06, 0x2f, 0xbd,
	0x14, 0x12, 0x3d, 0x79, 0x50, 0x63, 0xad, 0xa6, 0x07, 0xa3, 0x09, 0xbd, 0x79, 0x69, 0x76, 0x97,
	0xa5, 0x6c, 0x04, 0x96, 0xb0, 0x4b, 0xd2, 0xf8, 0xf5, 0xfc, 0x62, 0x86, 0x85, 0x02, 0xb5, 0x7a,
	0x82, 0x07, 0xef, 0xf7, 0x32, 0x6f, 0x06, 0x8e, 0x33, 0x4c, 0x08, 0x57, 0x53, 0xa9, 0x32, 0x86,
	0x63, 0xe9, 0xa4, 0x99, 0x50, 0x02, 0x0d, 0xf5, 0x43, 0x3a, 0x04, 0xd3, 0x4f, 0x96, 0xf8, 0xd2,
	0xfe, 0x3e, 0x04, 0xcb, 0xd3, 0xce, 0x65, 0x69, 0x44, 0x27, 0xd0, 0x2f, 0x99, 0x51, 0x77, 0xdc,
	0x9d, 0x1c, 0x79, 0x95, 0x42, 0xcf, 0x30, 0xf0, 0x19, 0x8d, 0x70, 0xc6, 0x56, 0xd5, 0xff, 0x83,
	0x71, 0x77, 0x62, 0x5c, 0x5f, 0x38, 0xbf, 0x32, 0x9d, 0x79, 0x69, 0x2b, 0x03, 0x3d, 0xcb, 0x6f,
	0x4b, 0x74, 0x0b, 0x7d, 0x11, 0x04, 0x92, 0xa9, 0x11, 0xd3, 0xf8, 0xe5, 0x1e, 0xbe, 0x4c, 0x19,
	0xe5, 0x01, 0xa7, 0xef, 0xda, 0xb6, 0xe8, 0x78, 0x15, 0x80, 0xee, 0xc1, 0x88, 0xb0, 0x54, 0xab,
	0x8a, 0x0f, 0x34, 0x7f, 0xba, 0xc7, 0xbf, 0x62, 0xa9, 0x6a, 0x16, 0xa2, 0x5a, 0xa1, 0x39, 0x58,
	0x9a, 0xa7, 0x22, 0x91, 0x79, 0xcc, 0xfc, 0xd1, 0x5a, 0x27, 0x9c, 0xff, 0x99, 0xf0, 0x54, 0x99,
	0x16, 0x1d, 0xcf, 0x8c, 0x5a, 0x1a, 0x3d, 0x82, 0x19, 0xf0, 0xac, 0x19, 0x23, 0xd4, 0x21, 0x67,
	0x7b, 0x21, 0x2f, 0x85, 0xa9, 0x9e, 0xc3, 0x08, 0x1a, 0x59, 0x14, 0x49, 0xd8, 0xa6, 0x4e, 0xe0,
	0xff, 0x14, 0x79, 0x63, 0x9b, 0x56, 0x91, 0xa4, 0x56, 0xb3, 0x21, 0x58, 0x25, 0xba, 0x12, 0xa9,
	0xe2, 0x22, 0xb1, 0xaf, 0xc0, 0xda, 0x59, 0x3a, 0x42, 0xd0, 0x93, 0xfc, 0x8b, 0x55, 0x27, 0xd4,
	0xef, 0xf6, 0x04, 0x06, 0xbb, 0xab, 0x2d, 0x4e, 0x5d, 0x8d, 0x50, 0xf8, 0x7a, 0xdb, 0x45, 0xdb,
	0x26, 0x40, 0xb3, 0x44, 0x7b, 0x00, 0x66, 0x7b, 0x21, 0xb6, 0x05, 0x46, 0xab, 0x5b, 0x61, 0x6e,
	0x06, 0x9d, 0x3d, 0x7c, 0xdc, 0xad, 0xb9, 0x0a, 0x73, 0xe2, 0x50, 0x11, 0xbb, 0x04, 0x2b, 0x1a,
	0x52, 0x91, 0xa5, 0x6e, 0x1a, 0xe5, 0x31, 0x61, 0xd9, 0x54, 0xd2, 0x90, 0xc5, 0x58, 0xba, 0x24,
	0xe7, 0x91, 0xef, 0xae, 0x85, 0x5b, 0x96, 0x76, 0xb7, 0xa5, 0x49, 0x5f, 0x7f, 0xb8, 0xf9, 0x09,
	0x00, 0x00, 0xff, 0xff, 0xd7, 0xc9, 0x0a, 0x68, 0xc0, 0x02, 0x00, 0x00,
}
