// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package protos

import (
	fmt "fmt"
	common "github.com/batchcorp/plumber-schemas/build/go/protos/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServerConfig struct {
	// @gotags: kong:"help='Unique ID that identifies this plumber node',env='PLUMBER_SERVER_NODE_ID',required"
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty" kong:"help='Unique ID that identifies this plumber node',env='PLUMBER_SERVER_NODE_ID',required"`
	// @gotags: kong:"help='ID of the plumber cluster (has to be the same across all nodes)',env='PLUMBER_SERVER_CLUSTER_ID',required"
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty" kong:"help='ID of the plumber cluster (has to be the same across all nodes)',env='PLUMBER_SERVER_CLUSTER_ID',required"`
	// @gotags: kong:"help='Host:port that the gRPC server will bind to',env='PLUMBER_SERVER_GRPC_LISTEN_ADDRESS',default=127.0.0.1:9000"
	GrpcListenAddress string `protobuf:"bytes,3,opt,name=grpc_listen_address,json=grpcListenAddress,proto3" json:"grpc_listen_address,omitempty" kong:"help='Host:port that the gRPC server will bind to',env='PLUMBER_SERVER_GRPC_LISTEN_ADDRESS',default=127.0.0.1:9000"`
	// @gotags: kong:"help='All gRPC requests require this auth token to be set',env='PLUMBER_SERVER_AUTH_TOKEN',required"
	AuthToken string `protobuf:"bytes,4,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty" kong:"help='All gRPC requests require this auth token to be set',env='PLUMBER_SERVER_AUTH_TOKEN',required"`
	// @gotags: kong:"help='InitialCluster should contain comma separated list of key=value pairs of host:port entries for ALL peers in the cluster. (Example: server1=http://192.168.1.10:2380,server2=http://192.168.1.11:2380,server3=http://192.168.1.12:2380). IMPORTANT! The list should include the address of _this_ instance.',env='PLUMBER_SERVER_INITIAL_CLUSTER',required"
	InitialCluster string `protobuf:"bytes,5,opt,name=initial_cluster,json=initialCluster,proto3" json:"initial_cluster,omitempty" kong:"help='InitialCluster should contain comma separated list of key=value pairs of host:port entries for ALL peers in the cluster. (Example: server1=http://192.168.1.10:2380,server2=http://192.168.1.11:2380,server3=http://192.168.1.12:2380). IMPORTANT! The list should include the address of _this_ instance.',env='PLUMBER_SERVER_INITIAL_CLUSTER',required"`
	// @gotags: kong:"help='Address of _this_ plumber instance etcd server interface. Example: http://local-ip:2380',env='PLUMBER_SERVER_ADVERTISE_PEER_URL'"
	AdvertisePeerUrl string `protobuf:"bytes,6,opt,name=advertise_peer_url,json=advertisePeerUrl,proto3" json:"advertise_peer_url,omitempty" kong:"help='Address of _this_ plumber instance etcd server interface. Example: http://local-ip:2380',env='PLUMBER_SERVER_ADVERTISE_PEER_URL'"`
	// @gotags: kong:"help='Address of _this_ plumber instance's etcd client interface. Example: http://local-ip:2379',env='PLUMBER_SERVER_ADVERTISE_CLIENT_URL',required"
	AdvertiseClientUrl string `protobuf:"bytes,7,opt,name=advertise_client_url,json=advertiseClientUrl,proto3" json:"advertise_client_url,omitempty" kong:"help='Address of _this_ plumber instance's etcd client interface. Example: http://local-ip:2379',env='PLUMBER_SERVER_ADVERTISE_CLIENT_URL',required"`
	// @gotags: kong:"help='Address that _this_ plumber instance's etcd server should listen on. Example: http://local-ip:2380',env='PLUMBER_SERVER_LISTENER_PEER_URL'"
	ListenerPeerUrl string `protobuf:"bytes,8,opt,name=listener_peer_url,json=listenerPeerUrl,proto3" json:"listener_peer_url,omitempty" kong:"help='Address that _this_ plumber instance's etcd server should listen on. Example: http://local-ip:2380',env='PLUMBER_SERVER_LISTENER_PEER_URL'"`
	// @gotags: kong:"help='Address that _this_ plumber instance's etcd client should listen on. Example: http://local-ip:2379',env='PLUMBER_SERVER_LISTENER_CLIENT_URL'"
	ListenerClientUrl string `protobuf:"bytes,9,opt,name=listener_client_url,json=listenerClientUrl,proto3" json:"listener_client_url,omitempty" kong:"help='Address that _this_ plumber instance's etcd client should listen on. Example: http://local-ip:2379',env='PLUMBER_SERVER_LISTENER_CLIENT_URL'"`
	// @gotags: kong:"help='Secret token that ALL cluster members should use/share. If this token does not match on one of the plumber instances, this node will NOT be able to join the cluster.',env='PLUMBER_SERVER_PEER_TOKEN'"
	PeerToken            string   `protobuf:"bytes,10,opt,name=peer_token,json=peerToken,proto3" json:"peer_token,omitempty" kong:"help='Secret token that ALL cluster members should use/share. If this token does not match on one of the plumber instances, this node will NOT be able to join the cluster.',env='PLUMBER_SERVER_PEER_TOKEN'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerConfig) Reset()         { *m = ServerConfig{} }
func (m *ServerConfig) String() string { return proto.CompactTextString(m) }
func (*ServerConfig) ProtoMessage()    {}
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *ServerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConfig.Unmarshal(m, b)
}
func (m *ServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConfig.Marshal(b, m, deterministic)
}
func (m *ServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConfig.Merge(m, src)
}
func (m *ServerConfig) XXX_Size() int {
	return xxx_messageInfo_ServerConfig.Size(m)
}
func (m *ServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConfig proto.InternalMessageInfo

func (m *ServerConfig) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ServerConfig) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *ServerConfig) GetGrpcListenAddress() string {
	if m != nil {
		return m.GrpcListenAddress
	}
	return ""
}

func (m *ServerConfig) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *ServerConfig) GetInitialCluster() string {
	if m != nil {
		return m.InitialCluster
	}
	return ""
}

func (m *ServerConfig) GetAdvertisePeerUrl() string {
	if m != nil {
		return m.AdvertisePeerUrl
	}
	return ""
}

func (m *ServerConfig) GetAdvertiseClientUrl() string {
	if m != nil {
		return m.AdvertiseClientUrl
	}
	return ""
}

func (m *ServerConfig) GetListenerPeerUrl() string {
	if m != nil {
		return m.ListenerPeerUrl
	}
	return ""
}

func (m *ServerConfig) GetListenerClientUrl() string {
	if m != nil {
		return m.ListenerClientUrl
	}
	return ""
}

func (m *ServerConfig) GetPeerToken() string {
	if m != nil {
		return m.PeerToken
	}
	return ""
}

type GetServerConfigRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetServerConfigRequest) Reset()         { *m = GetServerConfigRequest{} }
func (m *GetServerConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetServerConfigRequest) ProtoMessage()    {}
func (*GetServerConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *GetServerConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServerConfigRequest.Unmarshal(m, b)
}
func (m *GetServerConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServerConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetServerConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServerConfigRequest.Merge(m, src)
}
func (m *GetServerConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetServerConfigRequest.Size(m)
}
func (m *GetServerConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServerConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServerConfigRequest proto.InternalMessageInfo

func (m *GetServerConfigRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type GetServerConfigResponse struct {
	ServerConfig         *ServerConfig `protobuf:"bytes,1,opt,name=server_config,json=serverConfig,proto3" json:"server_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetServerConfigResponse) Reset()         { *m = GetServerConfigResponse{} }
func (m *GetServerConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetServerConfigResponse) ProtoMessage()    {}
func (*GetServerConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *GetServerConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServerConfigResponse.Unmarshal(m, b)
}
func (m *GetServerConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServerConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetServerConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServerConfigResponse.Merge(m, src)
}
func (m *GetServerConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetServerConfigResponse.Size(m)
}
func (m *GetServerConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServerConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServerConfigResponse proto.InternalMessageInfo

func (m *GetServerConfigResponse) GetServerConfig() *ServerConfig {
	if m != nil {
		return m.ServerConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*ServerConfig)(nil), "protos.ServerConfig")
	proto.RegisterType((*GetServerConfigRequest)(nil), "protos.GetServerConfigRequest")
	proto.RegisterType((*GetServerConfigResponse)(nil), "protos.GetServerConfigResponse")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0x87, 0x15, 0x5a, 0x52, 0x32, 0x2d, 0x94, 0x38, 0x15, 0x5d, 0x21, 0x55, 0xaa, 0x72, 0x21,
	0x42, 0xb0, 0x8b, 0x0a, 0x42, 0xe2, 0xd8, 0xe6, 0x80, 0x2a, 0x21, 0x84, 0x42, 0xb9, 0x70, 0xb1,
	0x76, 0xed, 0x21, 0x6b, 0xe1, 0xd8, 0x8b, 0xff, 0xf4, 0x35, 0x38, 0xf3, 0xb6, 0xc8, 0xe3, 0xdd,
	0x6e, 0x11, 0xa7, 0xc8, 0xf3, 0xfd, 0xfc, 0x39, 0x3b, 0x33, 0x70, 0xe4, 0xd1, 0xdd, 0xa2, 0x2b,
	0x3b, 0x67, 0x83, 0x65, 0x53, 0xfa, 0xf1, 0xcf, 0xe7, 0xc2, 0xee, 0x76, 0xd6, 0x54, 0x75, 0x0c,
	0x6d, 0x46, 0xcb, 0x3f, 0x7b, 0x70, 0xf4, 0x95, 0xb2, 0x6b, 0x6b, 0x7e, 0xa8, 0x2d, 0x3b, 0x85,
	0x03, 0x63, 0x25, 0x72, 0x25, 0x8b, 0xc9, 0xf9, 0x64, 0x35, 0xdb, 0x4c, 0xd3, 0xf1, 0x5a, 0xb2,
	0x33, 0x00, 0xa1, 0xa3, 0x0f, 0xe8, 0x12, 0x7b, 0x40, 0x6c, 0xd6, 0x57, 0xae, 0x25, 0x2b, 0x61,
	0xb1, 0x75, 0x9d, 0xe0, 0x5a, 0xf9, 0x80, 0x86, 0xd7, 0x52, 0x3a, 0xf4, 0xbe, 0xd8, 0xa3, 0xdc,
	0x3c, 0xa1, 0x4f, 0x44, 0x2e, 0x33, 0x48, 0xba, 0xf4, 0x37, 0x78, 0xb0, 0x3f, 0xd1, 0x14, 0xfb,
	0x59, 0x97, 0x2a, 0x37, 0xa9, 0xc0, 0x5e, 0xc0, 0xb1, 0x32, 0x2a, 0xa8, 0x5a, 0xf3, 0xfe, 0x8d,
	0xe2, 0x21, 0x65, 0x9e, 0xf4, 0xe5, 0x75, 0xae, 0xb2, 0x57, 0xc0, 0x6a, 0x79, 0x8b, 0x2e, 0x28,
	0x8f, 0xbc, 0x43, 0x74, 0x3c, 0x3a, 0x5d, 0x4c, 0x29, 0xfb, 0xf4, 0x8e, 0x7c, 0x41, 0x74, 0xdf,
	0x9c, 0x66, 0x6f, 0xe0, 0x64, 0x4c, 0x0b, 0xad, 0xd0, 0x04, 0xca, 0x1f, 0x50, 0x7e, 0x34, 0xad,
	0x09, 0xa5, 0x1b, 0x2f, 0x61, 0x9e, 0x3f, 0x09, 0xdd, 0xa8, 0x7f, 0x44, 0xf1, 0xe3, 0x01, 0x0c,
	0xf6, 0x12, 0x16, 0x77, 0xd9, 0x7b, 0xf2, 0x59, 0xee, 0xc1, 0x80, 0x46, 0xf7, 0x19, 0x00, 0x29,
	0x73, 0x0f, 0x20, 0xf7, 0x20, 0x55, 0xa8, 0x07, 0xcb, 0x2b, 0x78, 0xf6, 0x11, 0xc3, 0xfd, 0xe9,
	0x6c, 0xf0, 0x57, 0x44, 0x1f, 0xd8, 0x0a, 0xf6, 0x53, 0xab, 0x8a, 0xdf, 0x9f, 0xcf, 0x27, 0xab,
	0xc3, 0x8b, 0x45, 0x1e, 0xa6, 0x2f, 0xf3, 0x7c, 0xcb, 0xcb, 0x18, 0xda, 0x0d, 0x25, 0x96, 0x37,
	0x70, 0xfa, 0x9f, 0xc3, 0x77, 0xd6, 0x78, 0x64, 0x1f, 0xe0, 0x71, 0xde, 0x12, 0x2e, 0x08, 0xd0,
	0xbc, 0x0f, 0x2f, 0x4e, 0x06, 0xd9, 0x3f, 0x97, 0xfa, 0x85, 0xca, 0xa7, 0xab, 0xf7, 0xdf, 0xdf,
	0x6d, 0x55, 0x68, 0x63, 0x93, 0x5e, 0xac, 0x9a, 0x3a, 0x88, 0x56, 0x58, 0xd7, 0x55, 0x9d, 0x8e,
	0xbb, 0x06, 0xdd, 0x6b, 0x2f, 0x5a, 0xdc, 0xd5, 0xbe, 0x6a, 0xa2, 0xd2, 0xb2, 0xda, 0xda, 0x2a,
	0x2b, 0x9b, 0xbc, 0x88, 0x6f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x52, 0xee, 0x2f, 0x9f,
	0x02, 0x00, 0x00,
}
