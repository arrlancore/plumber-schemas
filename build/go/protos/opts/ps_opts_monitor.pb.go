// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opts/ps_opts_monitor.proto

package opts

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MonitorServiceSchemaVersionType int32

const (
	// Default to "latest" check
	MonitorServiceSchemaVersionType_SERVICE_SCHEMA_VERSION_CONDITION_TYPE_LATEST MonitorServiceSchemaVersionType = 0
	// If this is used, consumer knows that they should look into
	// condition_args["version"]
	MonitorServiceSchemaVersionType_SERVICE_SCHEMA_VERSION_CONDITION_TYPE_EXACT MonitorServiceSchemaVersionType = 1
)

var MonitorServiceSchemaVersionType_name = map[int32]string{
	0: "SERVICE_SCHEMA_VERSION_CONDITION_TYPE_LATEST",
	1: "SERVICE_SCHEMA_VERSION_CONDITION_TYPE_EXACT",
}

var MonitorServiceSchemaVersionType_value = map[string]int32{
	"SERVICE_SCHEMA_VERSION_CONDITION_TYPE_LATEST": 0,
	"SERVICE_SCHEMA_VERSION_CONDITION_TYPE_EXACT":  1,
}

func (x MonitorServiceSchemaVersionType) String() string {
	return proto.EnumName(MonitorServiceSchemaVersionType_name, int32(x))
}

func (MonitorServiceSchemaVersionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad36ed35e180ed92, []int{0}
}

type ReadOperator int32

const (
	ReadOperator_READ_OPERATOR_UNSET ReadOperator = 0
	ReadOperator_READ_OPERATOR_EQ    ReadOperator = 1
	ReadOperator_READ_OPERATOR_LT    ReadOperator = 2
	ReadOperator_READ_OPERATOR_GT    ReadOperator = 3
	ReadOperator_READ_OPERATOR_LTE   ReadOperator = 4
	ReadOperator_READ_OPERATOR_GTE   ReadOperator = 5
)

var ReadOperator_name = map[int32]string{
	0: "READ_OPERATOR_UNSET",
	1: "READ_OPERATOR_EQ",
	2: "READ_OPERATOR_LT",
	3: "READ_OPERATOR_GT",
	4: "READ_OPERATOR_LTE",
	5: "READ_OPERATOR_GTE",
}

var ReadOperator_value = map[string]int32{
	"READ_OPERATOR_UNSET": 0,
	"READ_OPERATOR_EQ":    1,
	"READ_OPERATOR_LT":    2,
	"READ_OPERATOR_GT":    3,
	"READ_OPERATOR_LTE":   4,
	"READ_OPERATOR_GTE":   5,
}

func (x ReadOperator) String() string {
	return proto.EnumName(ReadOperator_name, int32(x))
}

func (ReadOperator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad36ed35e180ed92, []int{1}
}

type MonitorOptions struct {
	XId             string `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	XCreatedBy      string `protobuf:"bytes,2,opt,name=_created_by,json=CreatedBy,proto3" json:"_created_by,omitempty"`
	XCreatedAtTsUtc int64  `protobuf:"varint,3,opt,name=_created_at_ts_utc,json=CreatedAtTsUtc,proto3" json:"_created_at_ts_utc,omitempty"`
	Notes           string `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	// Types that are valid to be assigned to Config:
	//	*MonitorOptions_SchemaValidation
	//	*MonitorOptions_ServiceSchemaVersion
	//	*MonitorOptions_ReadHasData
	Config               isMonitorOptions_Config `protobuf_oneof:"config"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *MonitorOptions) Reset()         { *m = MonitorOptions{} }
func (m *MonitorOptions) String() string { return proto.CompactTextString(m) }
func (*MonitorOptions) ProtoMessage()    {}
func (*MonitorOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad36ed35e180ed92, []int{0}
}

func (m *MonitorOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonitorOptions.Unmarshal(m, b)
}
func (m *MonitorOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonitorOptions.Marshal(b, m, deterministic)
}
func (m *MonitorOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonitorOptions.Merge(m, src)
}
func (m *MonitorOptions) XXX_Size() int {
	return xxx_messageInfo_MonitorOptions.Size(m)
}
func (m *MonitorOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_MonitorOptions.DiscardUnknown(m)
}

var xxx_messageInfo_MonitorOptions proto.InternalMessageInfo

func (m *MonitorOptions) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *MonitorOptions) GetXCreatedBy() string {
	if m != nil {
		return m.XCreatedBy
	}
	return ""
}

func (m *MonitorOptions) GetXCreatedAtTsUtc() int64 {
	if m != nil {
		return m.XCreatedAtTsUtc
	}
	return 0
}

func (m *MonitorOptions) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

type isMonitorOptions_Config interface {
	isMonitorOptions_Config()
}

type MonitorOptions_SchemaValidation struct {
	SchemaValidation *MonitorSchemaValidationConfig `protobuf:"bytes,100,opt,name=schema_validation,json=schemaValidation,proto3,oneof"`
}

type MonitorOptions_ServiceSchemaVersion struct {
	ServiceSchemaVersion *MonitorServiceSchemaVersionConfig `protobuf:"bytes,101,opt,name=service_schema_version,json=serviceSchemaVersion,proto3,oneof"`
}

type MonitorOptions_ReadHasData struct {
	ReadHasData *MonitorReadHasDataConfig `protobuf:"bytes,102,opt,name=read_has_data,json=readHasData,proto3,oneof"`
}

func (*MonitorOptions_SchemaValidation) isMonitorOptions_Config() {}

func (*MonitorOptions_ServiceSchemaVersion) isMonitorOptions_Config() {}

func (*MonitorOptions_ReadHasData) isMonitorOptions_Config() {}

func (m *MonitorOptions) GetConfig() isMonitorOptions_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *MonitorOptions) GetSchemaValidation() *MonitorSchemaValidationConfig {
	if x, ok := m.GetConfig().(*MonitorOptions_SchemaValidation); ok {
		return x.SchemaValidation
	}
	return nil
}

func (m *MonitorOptions) GetServiceSchemaVersion() *MonitorServiceSchemaVersionConfig {
	if x, ok := m.GetConfig().(*MonitorOptions_ServiceSchemaVersion); ok {
		return x.ServiceSchemaVersion
	}
	return nil
}

func (m *MonitorOptions) GetReadHasData() *MonitorReadHasDataConfig {
	if x, ok := m.GetConfig().(*MonitorOptions_ReadHasData); ok {
		return x.ReadHasData
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MonitorOptions) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MonitorOptions_SchemaValidation)(nil),
		(*MonitorOptions_ServiceSchemaVersion)(nil),
		(*MonitorOptions_ReadHasData)(nil),
	}
}

type MonitorSchemaValidationConfig struct {
	SchemaId             []string `protobuf:"bytes,1,rep,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MonitorSchemaValidationConfig) Reset()         { *m = MonitorSchemaValidationConfig{} }
func (m *MonitorSchemaValidationConfig) String() string { return proto.CompactTextString(m) }
func (*MonitorSchemaValidationConfig) ProtoMessage()    {}
func (*MonitorSchemaValidationConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad36ed35e180ed92, []int{1}
}

func (m *MonitorSchemaValidationConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonitorSchemaValidationConfig.Unmarshal(m, b)
}
func (m *MonitorSchemaValidationConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonitorSchemaValidationConfig.Marshal(b, m, deterministic)
}
func (m *MonitorSchemaValidationConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonitorSchemaValidationConfig.Merge(m, src)
}
func (m *MonitorSchemaValidationConfig) XXX_Size() int {
	return xxx_messageInfo_MonitorSchemaValidationConfig.Size(m)
}
func (m *MonitorSchemaValidationConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MonitorSchemaValidationConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MonitorSchemaValidationConfig proto.InternalMessageInfo

func (m *MonitorSchemaValidationConfig) GetSchemaId() []string {
	if m != nil {
		return m.SchemaId
	}
	return nil
}

type MonitorServiceSchemaVersionConfig struct {
	ServiceIds []string                        `protobuf:"bytes,1,rep,name=service_ids,json=serviceIds,proto3" json:"service_ids,omitempty"`
	Type       MonitorServiceSchemaVersionType `protobuf:"varint,2,opt,name=type,proto3,enum=protos.opts.MonitorServiceSchemaVersionType" json:"type,omitempty"`
	// Potentially set, depending on condition
	Args                 map[string]string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MonitorServiceSchemaVersionConfig) Reset()         { *m = MonitorServiceSchemaVersionConfig{} }
func (m *MonitorServiceSchemaVersionConfig) String() string { return proto.CompactTextString(m) }
func (*MonitorServiceSchemaVersionConfig) ProtoMessage()    {}
func (*MonitorServiceSchemaVersionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad36ed35e180ed92, []int{2}
}

func (m *MonitorServiceSchemaVersionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonitorServiceSchemaVersionConfig.Unmarshal(m, b)
}
func (m *MonitorServiceSchemaVersionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonitorServiceSchemaVersionConfig.Marshal(b, m, deterministic)
}
func (m *MonitorServiceSchemaVersionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonitorServiceSchemaVersionConfig.Merge(m, src)
}
func (m *MonitorServiceSchemaVersionConfig) XXX_Size() int {
	return xxx_messageInfo_MonitorServiceSchemaVersionConfig.Size(m)
}
func (m *MonitorServiceSchemaVersionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MonitorServiceSchemaVersionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MonitorServiceSchemaVersionConfig proto.InternalMessageInfo

func (m *MonitorServiceSchemaVersionConfig) GetServiceIds() []string {
	if m != nil {
		return m.ServiceIds
	}
	return nil
}

func (m *MonitorServiceSchemaVersionConfig) GetType() MonitorServiceSchemaVersionType {
	if m != nil {
		return m.Type
	}
	return MonitorServiceSchemaVersionType_SERVICE_SCHEMA_VERSION_CONDITION_TYPE_LATEST
}

func (m *MonitorServiceSchemaVersionConfig) GetArgs() map[string]string {
	if m != nil {
		return m.Args
	}
	return nil
}

type MonitorReadHasDataConfig struct {
	// Which reads does this alert config pertain to?
	ReadIds              []string     `protobuf:"bytes,1,rep,name=read_ids,json=readIds,proto3" json:"read_ids,omitempty"`
	Operator             ReadOperator `protobuf:"varint,2,opt,name=operator,proto3,enum=protos.opts.ReadOperator" json:"operator,omitempty"`
	Value                int32        `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	IntervalSeconds      int32        `protobuf:"varint,4,opt,name=interval_seconds,json=intervalSeconds,proto3" json:"interval_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MonitorReadHasDataConfig) Reset()         { *m = MonitorReadHasDataConfig{} }
func (m *MonitorReadHasDataConfig) String() string { return proto.CompactTextString(m) }
func (*MonitorReadHasDataConfig) ProtoMessage()    {}
func (*MonitorReadHasDataConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad36ed35e180ed92, []int{3}
}

func (m *MonitorReadHasDataConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MonitorReadHasDataConfig.Unmarshal(m, b)
}
func (m *MonitorReadHasDataConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MonitorReadHasDataConfig.Marshal(b, m, deterministic)
}
func (m *MonitorReadHasDataConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MonitorReadHasDataConfig.Merge(m, src)
}
func (m *MonitorReadHasDataConfig) XXX_Size() int {
	return xxx_messageInfo_MonitorReadHasDataConfig.Size(m)
}
func (m *MonitorReadHasDataConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MonitorReadHasDataConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MonitorReadHasDataConfig proto.InternalMessageInfo

func (m *MonitorReadHasDataConfig) GetReadIds() []string {
	if m != nil {
		return m.ReadIds
	}
	return nil
}

func (m *MonitorReadHasDataConfig) GetOperator() ReadOperator {
	if m != nil {
		return m.Operator
	}
	return ReadOperator_READ_OPERATOR_UNSET
}

func (m *MonitorReadHasDataConfig) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *MonitorReadHasDataConfig) GetIntervalSeconds() int32 {
	if m != nil {
		return m.IntervalSeconds
	}
	return 0
}

func init() {
	proto.RegisterEnum("protos.opts.MonitorServiceSchemaVersionType", MonitorServiceSchemaVersionType_name, MonitorServiceSchemaVersionType_value)
	proto.RegisterEnum("protos.opts.ReadOperator", ReadOperator_name, ReadOperator_value)
	proto.RegisterType((*MonitorOptions)(nil), "protos.opts.MonitorOptions")
	proto.RegisterType((*MonitorSchemaValidationConfig)(nil), "protos.opts.MonitorSchemaValidationConfig")
	proto.RegisterType((*MonitorServiceSchemaVersionConfig)(nil), "protos.opts.MonitorServiceSchemaVersionConfig")
	proto.RegisterMapType((map[string]string)(nil), "protos.opts.MonitorServiceSchemaVersionConfig.ArgsEntry")
	proto.RegisterType((*MonitorReadHasDataConfig)(nil), "protos.opts.MonitorReadHasDataConfig")
}

func init() { proto.RegisterFile("opts/ps_opts_monitor.proto", fileDescriptor_ad36ed35e180ed92) }

var fileDescriptor_ad36ed35e180ed92 = []byte{
	// 656 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x6f, 0x13, 0x31,
	0x10, 0xed, 0x66, 0x93, 0x92, 0x4c, 0xa0, 0xdd, 0x9a, 0x02, 0xdb, 0x22, 0x68, 0x88, 0x84, 0x14,
	0x42, 0xc9, 0xa2, 0x22, 0x44, 0xf9, 0x38, 0x90, 0xa6, 0x56, 0x1b, 0xd1, 0x36, 0xc5, 0xd9, 0x56,
	0x94, 0x8b, 0xe5, 0xec, 0xba, 0xc9, 0x8a, 0x24, 0x5e, 0xd9, 0x4e, 0xa4, 0xdc, 0xb9, 0x72, 0xe6,
	0xc4, 0x4f, 0xe0, 0x3f, 0xa2, 0xfd, 0x68, 0xfa, 0x09, 0x2d, 0x27, 0x7b, 0xde, 0x1b, 0x3f, 0xcf,
	0xbc, 0xb1, 0x61, 0x59, 0x84, 0x5a, 0x39, 0xa1, 0xa2, 0xd1, 0x4a, 0x07, 0x62, 0x18, 0x68, 0x21,
	0x6b, 0xa1, 0x14, 0x5a, 0xa0, 0x62, 0xbc, 0xa8, 0x5a, 0x44, 0x95, 0x7f, 0x99, 0x30, 0xb7, 0x9b,
	0xd0, 0xad, 0x50, 0x07, 0x62, 0xa8, 0xd0, 0x3c, 0x98, 0x34, 0xf0, 0x6d, 0xa3, 0x64, 0x54, 0x0a,
	0x24, 0xd3, 0xf4, 0xd1, 0x63, 0x28, 0x52, 0x4f, 0x72, 0xa6, 0xb9, 0x4f, 0x3b, 0x13, 0x3b, 0x13,
	0x13, 0x85, 0x46, 0x82, 0x6c, 0x4c, 0x50, 0x15, 0xd0, 0x94, 0x67, 0x9a, 0x6a, 0x45, 0x47, 0xda,
	0xb3, 0xcd, 0x92, 0x51, 0x31, 0xc9, 0x5c, 0x9a, 0x56, 0xd7, 0xae, 0x3a, 0xd0, 0x1e, 0x5a, 0x84,
	0xdc, 0x50, 0x68, 0xae, 0xec, 0x6c, 0xac, 0x92, 0x04, 0xe8, 0x08, 0x16, 0x94, 0xd7, 0xe3, 0x03,
	0x46, 0xc7, 0xac, 0x1f, 0xf8, 0x2c, 0x2a, 0xc4, 0xf6, 0x4b, 0x46, 0xa5, 0xb8, 0x56, 0xad, 0x9d,
	0x29, 0xb7, 0x96, 0x96, 0xda, 0x8e, 0x93, 0x0f, 0xa7, 0xb9, 0x0d, 0x31, 0x3c, 0x0e, 0xba, 0xdb,
	0x33, 0xc4, 0x52, 0x17, 0x18, 0x74, 0x0c, 0xf7, 0x15, 0x97, 0xe3, 0xc0, 0xe3, 0xf4, 0xe4, 0x0a,
	0x2e, 0x55, 0xa4, 0xcf, 0x63, 0xfd, 0xda, 0x95, 0xfa, 0xc9, 0x89, 0xf4, 0x9a, 0x24, 0x7f, 0x7a,
	0xc7, 0xa2, 0xba, 0x82, 0x45, 0x9f, 0xe0, 0x8e, 0xe4, 0xcc, 0xa7, 0x3d, 0xa6, 0xa8, 0xcf, 0x34,
	0xb3, 0x8f, 0x63, 0xf9, 0xa7, 0x57, 0xc9, 0x13, 0xce, 0xfc, 0x6d, 0xa6, 0x36, 0x99, 0x66, 0x53,
	0xd5, 0xa2, 0x3c, 0x05, 0x37, 0xf2, 0x30, 0xeb, 0xc5, 0x44, 0xf9, 0x03, 0x3c, 0xfa, 0x67, 0xcf,
	0xe8, 0x21, 0x14, 0xd2, 0xbe, 0xe2, 0x99, 0x99, 0x95, 0x02, 0xc9, 0x27, 0x40, 0xd3, 0x2f, 0xff,
	0xc8, 0xc0, 0x93, 0x6b, 0x5b, 0x42, 0x2b, 0x50, 0x3c, 0xb1, 0x28, 0xf0, 0x55, 0x2a, 0x02, 0x29,
	0xd4, 0xf4, 0x15, 0xfa, 0x08, 0x59, 0x3d, 0x09, 0x79, 0x3c, 0xf9, 0xb9, 0xb5, 0xd5, 0x9b, 0x3a,
	0xe6, 0x4e, 0x42, 0x4e, 0xe2, 0x93, 0x68, 0x07, 0xb2, 0x4c, 0x76, 0x95, 0x6d, 0x96, 0xcc, 0x4a,
	0x71, 0x6d, 0xfd, 0xff, 0x3c, 0xaf, 0xd5, 0x65, 0x57, 0xe1, 0xa1, 0x96, 0x13, 0x12, 0xab, 0x2c,
	0xbf, 0x81, 0xc2, 0x14, 0x42, 0x16, 0x98, 0xdf, 0xf8, 0x24, 0x7d, 0xae, 0xd1, 0x36, 0x7a, 0x63,
	0x63, 0xd6, 0x1f, 0xf1, 0xf4, 0xa5, 0x26, 0xc1, 0xbb, 0xcc, 0xba, 0x51, 0xfe, 0x6d, 0x80, 0xfd,
	0xb7, 0x19, 0xa0, 0x25, 0xc8, 0xc7, 0x13, 0x3c, 0xf5, 0xe0, 0x56, 0x14, 0x47, 0x06, 0xbc, 0x86,
	0xbc, 0x08, 0xb9, 0x64, 0x5a, 0xc8, 0xd4, 0x84, 0xa5, 0x73, 0x2d, 0x44, 0x62, 0xad, 0x34, 0x81,
	0x4c, 0x53, 0x4f, 0x0b, 0x89, 0xfe, 0x42, 0x2e, 0x2d, 0x04, 0x3d, 0x03, 0x2b, 0x18, 0x6a, 0x2e,
	0xc7, 0xac, 0x4f, 0x15, 0xf7, 0xc4, 0xd0, 0x4f, 0x7e, 0x43, 0x8e, 0xcc, 0x9f, 0xe0, 0xed, 0x04,
	0xae, 0x7e, 0x37, 0x60, 0xe5, 0x1a, 0x83, 0xd1, 0x4b, 0x58, 0x6d, 0x63, 0x72, 0xd8, 0x6c, 0x60,
	0xda, 0x6e, 0x6c, 0xe3, 0xdd, 0x3a, 0x3d, 0xc4, 0xa4, 0xdd, 0x6c, 0xed, 0xd1, 0x46, 0x6b, 0x6f,
	0xb3, 0xe9, 0x46, 0x3b, 0xf7, 0x68, 0x1f, 0xd3, 0x9d, 0xba, 0x8b, 0xdb, 0xae, 0x35, 0x83, 0x1c,
	0x78, 0x7e, 0xb3, 0x13, 0xf8, 0x4b, 0xbd, 0xe1, 0x5a, 0x46, 0xf5, 0xa7, 0x01, 0xb7, 0xcf, 0xb6,
	0x88, 0x1e, 0xc0, 0x5d, 0x82, 0xeb, 0x9b, 0xb4, 0xb5, 0x8f, 0x49, 0xdd, 0x6d, 0x11, 0x7a, 0xb0,
	0xd7, 0xc6, 0x91, 0xf4, 0x22, 0x58, 0xe7, 0x09, 0xfc, 0xd9, 0x32, 0x2e, 0xa3, 0x3b, 0xae, 0x95,
	0xb9, 0x8c, 0x6e, 0xb9, 0x96, 0x89, 0xee, 0xc1, 0xc2, 0xc5, 0x5c, 0x6c, 0x65, 0x2f, 0xc3, 0x5b,
	0x2e, 0xb6, 0x72, 0x1b, 0xef, 0xbf, 0xbe, 0xed, 0x06, 0xba, 0x37, 0xea, 0xd4, 0x3c, 0x31, 0x70,
	0x3a, 0x4c, 0x7b, 0x3d, 0x4f, 0xc8, 0xd0, 0x09, 0xfb, 0xa3, 0x41, 0x87, 0xcb, 0x17, 0xc9, 0x4f,
	0x50, 0x4e, 0x67, 0x14, 0xf4, 0x7d, 0xa7, 0x2b, 0x9c, 0x64, 0x6a, 0x4e, 0x34, 0xb5, 0xce, 0x6c,
	0x1c, 0xbc, 0xfa, 0x13, 0x00, 0x00, 0xff, 0xff, 0x35, 0x0f, 0x57, 0x65, 0x2d, 0x05, 0x00, 0x00,
}
