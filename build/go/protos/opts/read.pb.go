// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opts/read.proto

package opts

import (
	fmt "fmt"
	args "github.com/batchcorp/plumber-schemas/build/go/protos/args"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Read struct {
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *ReadOptsKafka `protobuf:"bytes,100,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='Apache ActiveMQ (STOMP)'"
	Activemq *ReadOptsActiveMQ `protobuf:"bytes,101,opt,name=activemq,proto3" json:"activemq,omitempty" kong:"cmd,help='Apache ActiveMQ (STOMP)'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	Awssqs *ReadOptsAWSSQS `protobuf:"bytes,102,opt,name=awssqs,proto3" json:"awssqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='MongoDB'"
	Mongo *ReadOptsMongo `protobuf:"bytes,103,opt,name=mongo,proto3" json:"mongo,omitempty" kong:"cmd,help='MongoDB'"`
	// @gotags: kong:"cmd,help='NATS'"
	Nats *ReadOptsNats `protobuf:"bytes,104,opt,name=nats,proto3" json:"nats,omitempty" kong:"cmd,help='NATS'"`
	// @gotags: kong:"cmd,help='NATS Streaming'"
	NatsStreaming *ReadOptsNatsStreaming `protobuf:"bytes,105,opt,name=nats_streaming,json=natsStreaming,proto3" json:"nats_streaming,omitempty" kong:"cmd,help='NATS Streaming'"`
	// @gotags: kong:"cmd,help='NSQ'"
	Nsq *ReadOptsNSQ `protobuf:"bytes,106,opt,name=nsq,proto3" json:"nsq,omitempty" kong:"cmd,help='NSQ'"`
	// @gotags: kong:"cmd,help='Apache Pulsar'"
	Pulsar *ReadOptsPulsar `protobuf:"bytes,107,opt,name=pulsar,proto3" json:"pulsar,omitempty" kong:"cmd,help='Apache Pulsar'"`
	// @gotags: kong:"cmd,help='RabbitMQ'"
	Rabbit *ReadOptsRabbit `protobuf:"bytes,108,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='RabbitMQ'"`
	// @gotags: kong:"cmd,help='RabbitMQ Streams'"
	RabbitStreams *ReadOptsRabbitStreams `protobuf:"bytes,109,opt,name=rabbit_streams,json=rabbitStreams,proto3" json:"rabbit_streams,omitempty" kong:"cmd,help='RabbitMQ Streams'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Mqtt *ReadOptsMQTT `protobuf:"bytes,110,opt,name=mqtt,proto3" json:"mqtt,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='Azure Service Bus'"
	AzureServiceBus *ReadOptsAzureServiceBus `protobuf:"bytes,111,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty" kong:"cmd,help='Azure Service Bus'"`
	// @gotags: kong:"cmd,help=''"
	AzureEventHub *ReadOptsAzureEventHub `protobuf:"bytes,112,opt,name=azure_event_hub,json=azureEventHub,proto3" json:"azure_event_hub,omitempty" kong:"cmd,help=''"`
	// @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
	GcpPubsub *ReadOptsGCPPubSub `protobuf:"bytes,113,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty" kong:"cmd,help='Google Cloud Platform Pub/Sub'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *ReadOptsKubeMQQueue `protobuf:"bytes,114,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='Redis PubSub'"
	RedisPubsub *ReadOptsRedisPubSub `protobuf:"bytes,115,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty" kong:"cmd,help='Redis PubSub'"`
	// @gotags: kong:"cmd,help='Redis Streams'"
	RedisStreams *ReadOptsRedisStreams `protobuf:"bytes,116,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty" kong:"cmd,help='Redis Streams'"`
	// @gotags: kong:"cmd,help='PostgreSQL'"
	Postgres             *ReadOptsPostgres `protobuf:"bytes,117,opt,name=postgres,proto3" json:"postgres,omitempty" kong:"cmd,help='PostgreSQL'"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Read) Reset()         { *m = Read{} }
func (m *Read) String() string { return proto.CompactTextString(m) }
func (*Read) ProtoMessage()    {}
func (*Read) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{0}
}

func (m *Read) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Read.Unmarshal(m, b)
}
func (m *Read) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Read.Marshal(b, m, deterministic)
}
func (m *Read) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Read.Merge(m, src)
}
func (m *Read) XXX_Size() int {
	return xxx_messageInfo_Read.Size(m)
}
func (m *Read) XXX_DiscardUnknown() {
	xxx_messageInfo_Read.DiscardUnknown(m)
}

var xxx_messageInfo_Read proto.InternalMessageInfo

func (m *Read) GetKafka() *ReadOptsKafka {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *Read) GetActivemq() *ReadOptsActiveMQ {
	if m != nil {
		return m.Activemq
	}
	return nil
}

func (m *Read) GetAwssqs() *ReadOptsAWSSQS {
	if m != nil {
		return m.Awssqs
	}
	return nil
}

func (m *Read) GetMongo() *ReadOptsMongo {
	if m != nil {
		return m.Mongo
	}
	return nil
}

func (m *Read) GetNats() *ReadOptsNats {
	if m != nil {
		return m.Nats
	}
	return nil
}

func (m *Read) GetNatsStreaming() *ReadOptsNatsStreaming {
	if m != nil {
		return m.NatsStreaming
	}
	return nil
}

func (m *Read) GetNsq() *ReadOptsNSQ {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *Read) GetPulsar() *ReadOptsPulsar {
	if m != nil {
		return m.Pulsar
	}
	return nil
}

func (m *Read) GetRabbit() *ReadOptsRabbit {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *Read) GetRabbitStreams() *ReadOptsRabbitStreams {
	if m != nil {
		return m.RabbitStreams
	}
	return nil
}

func (m *Read) GetMqtt() *ReadOptsMQTT {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *Read) GetAzureServiceBus() *ReadOptsAzureServiceBus {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *Read) GetAzureEventHub() *ReadOptsAzureEventHub {
	if m != nil {
		return m.AzureEventHub
	}
	return nil
}

func (m *Read) GetGcpPubsub() *ReadOptsGCPPubSub {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *Read) GetKubemqQueue() *ReadOptsKubeMQQueue {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *Read) GetRedisPubsub() *ReadOptsRedisPubSub {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *Read) GetRedisStreams() *ReadOptsRedisStreams {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

func (m *Read) GetPostgres() *ReadOptsPostgres {
	if m != nil {
		return m.Postgres
	}
	return nil
}

type ReadOptsKafka struct {
	// @gotags: kong:"embed"
	XConn *args.KafkaConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KafkaReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReadOptsKafka) Reset()         { *m = ReadOptsKafka{} }
func (m *ReadOptsKafka) String() string { return proto.CompactTextString(m) }
func (*ReadOptsKafka) ProtoMessage()    {}
func (*ReadOptsKafka) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{1}
}

func (m *ReadOptsKafka) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsKafka.Unmarshal(m, b)
}
func (m *ReadOptsKafka) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsKafka.Marshal(b, m, deterministic)
}
func (m *ReadOptsKafka) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsKafka.Merge(m, src)
}
func (m *ReadOptsKafka) XXX_Size() int {
	return xxx_messageInfo_ReadOptsKafka.Size(m)
}
func (m *ReadOptsKafka) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsKafka.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsKafka proto.InternalMessageInfo

func (m *ReadOptsKafka) GetXConn() *args.KafkaConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsKafka) GetArgs() *args.KafkaReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsActiveMQ struct {
	// @gotags: kong:"embed"
	XConn *args.ActiveMQConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.ActiveMQReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ReadOptsActiveMQ) Reset()         { *m = ReadOptsActiveMQ{} }
func (m *ReadOptsActiveMQ) String() string { return proto.CompactTextString(m) }
func (*ReadOptsActiveMQ) ProtoMessage()    {}
func (*ReadOptsActiveMQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{2}
}

func (m *ReadOptsActiveMQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsActiveMQ.Unmarshal(m, b)
}
func (m *ReadOptsActiveMQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsActiveMQ.Marshal(b, m, deterministic)
}
func (m *ReadOptsActiveMQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsActiveMQ.Merge(m, src)
}
func (m *ReadOptsActiveMQ) XXX_Size() int {
	return xxx_messageInfo_ReadOptsActiveMQ.Size(m)
}
func (m *ReadOptsActiveMQ) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsActiveMQ.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsActiveMQ proto.InternalMessageInfo

func (m *ReadOptsActiveMQ) GetXConn() *args.ActiveMQConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsActiveMQ) GetArgs() *args.ActiveMQReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsAWSSQS struct {
	// @gotags: kong:"embed"
	XConn *args.AWSSQSConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AWSSQSReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReadOptsAWSSQS) Reset()         { *m = ReadOptsAWSSQS{} }
func (m *ReadOptsAWSSQS) String() string { return proto.CompactTextString(m) }
func (*ReadOptsAWSSQS) ProtoMessage()    {}
func (*ReadOptsAWSSQS) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{3}
}

func (m *ReadOptsAWSSQS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsAWSSQS.Unmarshal(m, b)
}
func (m *ReadOptsAWSSQS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsAWSSQS.Marshal(b, m, deterministic)
}
func (m *ReadOptsAWSSQS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsAWSSQS.Merge(m, src)
}
func (m *ReadOptsAWSSQS) XXX_Size() int {
	return xxx_messageInfo_ReadOptsAWSSQS.Size(m)
}
func (m *ReadOptsAWSSQS) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsAWSSQS.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsAWSSQS proto.InternalMessageInfo

func (m *ReadOptsAWSSQS) GetXConn() *args.AWSSQSConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsAWSSQS) GetArgs() *args.AWSSQSReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsMongo struct {
	// @gotags: kong:"embed"
	XConn *args.MongoConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.MongoReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReadOptsMongo) Reset()         { *m = ReadOptsMongo{} }
func (m *ReadOptsMongo) String() string { return proto.CompactTextString(m) }
func (*ReadOptsMongo) ProtoMessage()    {}
func (*ReadOptsMongo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{4}
}

func (m *ReadOptsMongo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsMongo.Unmarshal(m, b)
}
func (m *ReadOptsMongo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsMongo.Marshal(b, m, deterministic)
}
func (m *ReadOptsMongo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsMongo.Merge(m, src)
}
func (m *ReadOptsMongo) XXX_Size() int {
	return xxx_messageInfo_ReadOptsMongo.Size(m)
}
func (m *ReadOptsMongo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsMongo.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsMongo proto.InternalMessageInfo

func (m *ReadOptsMongo) GetXConn() *args.MongoConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsMongo) GetArgs() *args.MongoReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsNats struct {
	// @gotags: kong:"embed"
	XConn *args.NatsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NatsReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReadOptsNats) Reset()         { *m = ReadOptsNats{} }
func (m *ReadOptsNats) String() string { return proto.CompactTextString(m) }
func (*ReadOptsNats) ProtoMessage()    {}
func (*ReadOptsNats) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{5}
}

func (m *ReadOptsNats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsNats.Unmarshal(m, b)
}
func (m *ReadOptsNats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsNats.Marshal(b, m, deterministic)
}
func (m *ReadOptsNats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsNats.Merge(m, src)
}
func (m *ReadOptsNats) XXX_Size() int {
	return xxx_messageInfo_ReadOptsNats.Size(m)
}
func (m *ReadOptsNats) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsNats.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsNats proto.InternalMessageInfo

func (m *ReadOptsNats) GetXConn() *args.NatsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsNats) GetArgs() *args.NatsReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsNatsStreaming struct {
	// @gotags: kong:"embed"
	XConn *args.NatsStreamingConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NatsStreamingReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ReadOptsNatsStreaming) Reset()         { *m = ReadOptsNatsStreaming{} }
func (m *ReadOptsNatsStreaming) String() string { return proto.CompactTextString(m) }
func (*ReadOptsNatsStreaming) ProtoMessage()    {}
func (*ReadOptsNatsStreaming) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{6}
}

func (m *ReadOptsNatsStreaming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsNatsStreaming.Unmarshal(m, b)
}
func (m *ReadOptsNatsStreaming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsNatsStreaming.Marshal(b, m, deterministic)
}
func (m *ReadOptsNatsStreaming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsNatsStreaming.Merge(m, src)
}
func (m *ReadOptsNatsStreaming) XXX_Size() int {
	return xxx_messageInfo_ReadOptsNatsStreaming.Size(m)
}
func (m *ReadOptsNatsStreaming) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsNatsStreaming.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsNatsStreaming proto.InternalMessageInfo

func (m *ReadOptsNatsStreaming) GetXConn() *args.NatsStreamingConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsNatsStreaming) GetArgs() *args.NatsStreamingReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsNSQ struct {
	// @gotags: kong:"embed"
	XConn *args.NSQConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NSQReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ReadOptsNSQ) Reset()         { *m = ReadOptsNSQ{} }
func (m *ReadOptsNSQ) String() string { return proto.CompactTextString(m) }
func (*ReadOptsNSQ) ProtoMessage()    {}
func (*ReadOptsNSQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{7}
}

func (m *ReadOptsNSQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsNSQ.Unmarshal(m, b)
}
func (m *ReadOptsNSQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsNSQ.Marshal(b, m, deterministic)
}
func (m *ReadOptsNSQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsNSQ.Merge(m, src)
}
func (m *ReadOptsNSQ) XXX_Size() int {
	return xxx_messageInfo_ReadOptsNSQ.Size(m)
}
func (m *ReadOptsNSQ) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsNSQ.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsNSQ proto.InternalMessageInfo

func (m *ReadOptsNSQ) GetXConn() *args.NSQConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsNSQ) GetArgs() *args.NSQReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsPostgres struct {
	// @gotags: kong:"embed"
	XConn *args.PostgresConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.PostgresReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ReadOptsPostgres) Reset()         { *m = ReadOptsPostgres{} }
func (m *ReadOptsPostgres) String() string { return proto.CompactTextString(m) }
func (*ReadOptsPostgres) ProtoMessage()    {}
func (*ReadOptsPostgres) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{8}
}

func (m *ReadOptsPostgres) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsPostgres.Unmarshal(m, b)
}
func (m *ReadOptsPostgres) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsPostgres.Marshal(b, m, deterministic)
}
func (m *ReadOptsPostgres) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsPostgres.Merge(m, src)
}
func (m *ReadOptsPostgres) XXX_Size() int {
	return xxx_messageInfo_ReadOptsPostgres.Size(m)
}
func (m *ReadOptsPostgres) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsPostgres.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsPostgres proto.InternalMessageInfo

func (m *ReadOptsPostgres) GetXConn() *args.PostgresConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsPostgres) GetArgs() *args.PostgresReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsPulsar struct {
	// @gotags: kong:"embed"
	XConn *args.PulsarConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.PulsarReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReadOptsPulsar) Reset()         { *m = ReadOptsPulsar{} }
func (m *ReadOptsPulsar) String() string { return proto.CompactTextString(m) }
func (*ReadOptsPulsar) ProtoMessage()    {}
func (*ReadOptsPulsar) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{9}
}

func (m *ReadOptsPulsar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsPulsar.Unmarshal(m, b)
}
func (m *ReadOptsPulsar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsPulsar.Marshal(b, m, deterministic)
}
func (m *ReadOptsPulsar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsPulsar.Merge(m, src)
}
func (m *ReadOptsPulsar) XXX_Size() int {
	return xxx_messageInfo_ReadOptsPulsar.Size(m)
}
func (m *ReadOptsPulsar) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsPulsar.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsPulsar proto.InternalMessageInfo

func (m *ReadOptsPulsar) GetXConn() *args.PulsarConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsPulsar) GetArgs() *args.PulsarReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsRabbit struct {
	// @gotags: kong:"embed"
	XConn *args.RabbitConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RabbitReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReadOptsRabbit) Reset()         { *m = ReadOptsRabbit{} }
func (m *ReadOptsRabbit) String() string { return proto.CompactTextString(m) }
func (*ReadOptsRabbit) ProtoMessage()    {}
func (*ReadOptsRabbit) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{10}
}

func (m *ReadOptsRabbit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsRabbit.Unmarshal(m, b)
}
func (m *ReadOptsRabbit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsRabbit.Marshal(b, m, deterministic)
}
func (m *ReadOptsRabbit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsRabbit.Merge(m, src)
}
func (m *ReadOptsRabbit) XXX_Size() int {
	return xxx_messageInfo_ReadOptsRabbit.Size(m)
}
func (m *ReadOptsRabbit) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsRabbit.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsRabbit proto.InternalMessageInfo

func (m *ReadOptsRabbit) GetXConn() *args.RabbitConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsRabbit) GetArgs() *args.RabbitReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsRabbitStreams struct {
	// @gotags: kong:"embed"
	XConn *args.RabbitStreamsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RabbitStreamsReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ReadOptsRabbitStreams) Reset()         { *m = ReadOptsRabbitStreams{} }
func (m *ReadOptsRabbitStreams) String() string { return proto.CompactTextString(m) }
func (*ReadOptsRabbitStreams) ProtoMessage()    {}
func (*ReadOptsRabbitStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{11}
}

func (m *ReadOptsRabbitStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsRabbitStreams.Unmarshal(m, b)
}
func (m *ReadOptsRabbitStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsRabbitStreams.Marshal(b, m, deterministic)
}
func (m *ReadOptsRabbitStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsRabbitStreams.Merge(m, src)
}
func (m *ReadOptsRabbitStreams) XXX_Size() int {
	return xxx_messageInfo_ReadOptsRabbitStreams.Size(m)
}
func (m *ReadOptsRabbitStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsRabbitStreams.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsRabbitStreams proto.InternalMessageInfo

func (m *ReadOptsRabbitStreams) GetXConn() *args.RabbitStreamsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsRabbitStreams) GetArgs() *args.RabbitStreamsReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsRedisPubSub struct {
	// @gotags: kong:"embed"
	XConn *args.RedisPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisPubSubReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ReadOptsRedisPubSub) Reset()         { *m = ReadOptsRedisPubSub{} }
func (m *ReadOptsRedisPubSub) String() string { return proto.CompactTextString(m) }
func (*ReadOptsRedisPubSub) ProtoMessage()    {}
func (*ReadOptsRedisPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{12}
}

func (m *ReadOptsRedisPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsRedisPubSub.Unmarshal(m, b)
}
func (m *ReadOptsRedisPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsRedisPubSub.Marshal(b, m, deterministic)
}
func (m *ReadOptsRedisPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsRedisPubSub.Merge(m, src)
}
func (m *ReadOptsRedisPubSub) XXX_Size() int {
	return xxx_messageInfo_ReadOptsRedisPubSub.Size(m)
}
func (m *ReadOptsRedisPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsRedisPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsRedisPubSub proto.InternalMessageInfo

func (m *ReadOptsRedisPubSub) GetXConn() *args.RedisPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsRedisPubSub) GetArgs() *args.RedisPubSubReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsRedisStreams struct {
	// @gotags: kong:"embed"
	XConn *args.RedisStreamsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisStreamsReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ReadOptsRedisStreams) Reset()         { *m = ReadOptsRedisStreams{} }
func (m *ReadOptsRedisStreams) String() string { return proto.CompactTextString(m) }
func (*ReadOptsRedisStreams) ProtoMessage()    {}
func (*ReadOptsRedisStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{13}
}

func (m *ReadOptsRedisStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsRedisStreams.Unmarshal(m, b)
}
func (m *ReadOptsRedisStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsRedisStreams.Marshal(b, m, deterministic)
}
func (m *ReadOptsRedisStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsRedisStreams.Merge(m, src)
}
func (m *ReadOptsRedisStreams) XXX_Size() int {
	return xxx_messageInfo_ReadOptsRedisStreams.Size(m)
}
func (m *ReadOptsRedisStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsRedisStreams.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsRedisStreams proto.InternalMessageInfo

func (m *ReadOptsRedisStreams) GetXConn() *args.RedisStreamsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsRedisStreams) GetArgs() *args.RedisStreamsReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsAzureEventHub struct {
	// @gotags: kong:"embed"
	XConn *args.AzureEventHubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AzureEventHubReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ReadOptsAzureEventHub) Reset()         { *m = ReadOptsAzureEventHub{} }
func (m *ReadOptsAzureEventHub) String() string { return proto.CompactTextString(m) }
func (*ReadOptsAzureEventHub) ProtoMessage()    {}
func (*ReadOptsAzureEventHub) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{14}
}

func (m *ReadOptsAzureEventHub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsAzureEventHub.Unmarshal(m, b)
}
func (m *ReadOptsAzureEventHub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsAzureEventHub.Marshal(b, m, deterministic)
}
func (m *ReadOptsAzureEventHub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsAzureEventHub.Merge(m, src)
}
func (m *ReadOptsAzureEventHub) XXX_Size() int {
	return xxx_messageInfo_ReadOptsAzureEventHub.Size(m)
}
func (m *ReadOptsAzureEventHub) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsAzureEventHub.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsAzureEventHub proto.InternalMessageInfo

func (m *ReadOptsAzureEventHub) GetXConn() *args.AzureEventHubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsAzureEventHub) GetArgs() *args.AzureEventHubReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsAzureServiceBus struct {
	// @gotags: kong:"embed"
	XConn *args.AzureServiceBusConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AzureServiceBusReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ReadOptsAzureServiceBus) Reset()         { *m = ReadOptsAzureServiceBus{} }
func (m *ReadOptsAzureServiceBus) String() string { return proto.CompactTextString(m) }
func (*ReadOptsAzureServiceBus) ProtoMessage()    {}
func (*ReadOptsAzureServiceBus) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{15}
}

func (m *ReadOptsAzureServiceBus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsAzureServiceBus.Unmarshal(m, b)
}
func (m *ReadOptsAzureServiceBus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsAzureServiceBus.Marshal(b, m, deterministic)
}
func (m *ReadOptsAzureServiceBus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsAzureServiceBus.Merge(m, src)
}
func (m *ReadOptsAzureServiceBus) XXX_Size() int {
	return xxx_messageInfo_ReadOptsAzureServiceBus.Size(m)
}
func (m *ReadOptsAzureServiceBus) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsAzureServiceBus.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsAzureServiceBus proto.InternalMessageInfo

func (m *ReadOptsAzureServiceBus) GetXConn() *args.AzureServiceBusConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsAzureServiceBus) GetArgs() *args.AzureServiceBusReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsMQTT struct {
	// @gotags: kong:"embed"
	XConn *args.MQTTConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.MQTTReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ReadOptsMQTT) Reset()         { *m = ReadOptsMQTT{} }
func (m *ReadOptsMQTT) String() string { return proto.CompactTextString(m) }
func (*ReadOptsMQTT) ProtoMessage()    {}
func (*ReadOptsMQTT) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{16}
}

func (m *ReadOptsMQTT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsMQTT.Unmarshal(m, b)
}
func (m *ReadOptsMQTT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsMQTT.Marshal(b, m, deterministic)
}
func (m *ReadOptsMQTT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsMQTT.Merge(m, src)
}
func (m *ReadOptsMQTT) XXX_Size() int {
	return xxx_messageInfo_ReadOptsMQTT.Size(m)
}
func (m *ReadOptsMQTT) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsMQTT.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsMQTT proto.InternalMessageInfo

func (m *ReadOptsMQTT) GetXConn() *args.MQTTConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsMQTT) GetArgs() *args.MQTTReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsGCPPubSub struct {
	// @gotags: kong:"embed"
	XConn *args.GCPPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.GCPPubSubReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ReadOptsGCPPubSub) Reset()         { *m = ReadOptsGCPPubSub{} }
func (m *ReadOptsGCPPubSub) String() string { return proto.CompactTextString(m) }
func (*ReadOptsGCPPubSub) ProtoMessage()    {}
func (*ReadOptsGCPPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{17}
}

func (m *ReadOptsGCPPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsGCPPubSub.Unmarshal(m, b)
}
func (m *ReadOptsGCPPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsGCPPubSub.Marshal(b, m, deterministic)
}
func (m *ReadOptsGCPPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsGCPPubSub.Merge(m, src)
}
func (m *ReadOptsGCPPubSub) XXX_Size() int {
	return xxx_messageInfo_ReadOptsGCPPubSub.Size(m)
}
func (m *ReadOptsGCPPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsGCPPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsGCPPubSub proto.InternalMessageInfo

func (m *ReadOptsGCPPubSub) GetXConn() *args.GCPPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsGCPPubSub) GetArgs() *args.GCPPubSubReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type ReadOptsKubeMQQueue struct {
	// @gotags: kong:"embed"
	XConn *args.KubeMQQueueConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KubeMQQueueReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ReadOptsKubeMQQueue) Reset()         { *m = ReadOptsKubeMQQueue{} }
func (m *ReadOptsKubeMQQueue) String() string { return proto.CompactTextString(m) }
func (*ReadOptsKubeMQQueue) ProtoMessage()    {}
func (*ReadOptsKubeMQQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4679aa631b45850, []int{18}
}

func (m *ReadOptsKubeMQQueue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptsKubeMQQueue.Unmarshal(m, b)
}
func (m *ReadOptsKubeMQQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptsKubeMQQueue.Marshal(b, m, deterministic)
}
func (m *ReadOptsKubeMQQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptsKubeMQQueue.Merge(m, src)
}
func (m *ReadOptsKubeMQQueue) XXX_Size() int {
	return xxx_messageInfo_ReadOptsKubeMQQueue.Size(m)
}
func (m *ReadOptsKubeMQQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptsKubeMQQueue.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptsKubeMQQueue proto.InternalMessageInfo

func (m *ReadOptsKubeMQQueue) GetXConn() *args.KubeMQQueueConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *ReadOptsKubeMQQueue) GetArgs() *args.KubeMQQueueReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

func init() {
	proto.RegisterType((*Read)(nil), "protos.opts.Read")
	proto.RegisterType((*ReadOptsKafka)(nil), "protos.opts.ReadOptsKafka")
	proto.RegisterType((*ReadOptsActiveMQ)(nil), "protos.opts.ReadOptsActiveMQ")
	proto.RegisterType((*ReadOptsAWSSQS)(nil), "protos.opts.ReadOptsAWSSQS")
	proto.RegisterType((*ReadOptsMongo)(nil), "protos.opts.ReadOptsMongo")
	proto.RegisterType((*ReadOptsNats)(nil), "protos.opts.ReadOptsNats")
	proto.RegisterType((*ReadOptsNatsStreaming)(nil), "protos.opts.ReadOptsNatsStreaming")
	proto.RegisterType((*ReadOptsNSQ)(nil), "protos.opts.ReadOptsNSQ")
	proto.RegisterType((*ReadOptsPostgres)(nil), "protos.opts.ReadOptsPostgres")
	proto.RegisterType((*ReadOptsPulsar)(nil), "protos.opts.ReadOptsPulsar")
	proto.RegisterType((*ReadOptsRabbit)(nil), "protos.opts.ReadOptsRabbit")
	proto.RegisterType((*ReadOptsRabbitStreams)(nil), "protos.opts.ReadOptsRabbitStreams")
	proto.RegisterType((*ReadOptsRedisPubSub)(nil), "protos.opts.ReadOptsRedisPubSub")
	proto.RegisterType((*ReadOptsRedisStreams)(nil), "protos.opts.ReadOptsRedisStreams")
	proto.RegisterType((*ReadOptsAzureEventHub)(nil), "protos.opts.ReadOptsAzureEventHub")
	proto.RegisterType((*ReadOptsAzureServiceBus)(nil), "protos.opts.ReadOptsAzureServiceBus")
	proto.RegisterType((*ReadOptsMQTT)(nil), "protos.opts.ReadOptsMQTT")
	proto.RegisterType((*ReadOptsGCPPubSub)(nil), "protos.opts.ReadOptsGCPPubSub")
	proto.RegisterType((*ReadOptsKubeMQQueue)(nil), "protos.opts.ReadOptsKubeMQQueue")
}

func init() { proto.RegisterFile("opts/read.proto", fileDescriptor_e4679aa631b45850) }

var fileDescriptor_e4679aa631b45850 = []byte{
	// 1037 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x97, 0x5d, 0x6f, 0xdb, 0x36,
	0x17, 0xc7, 0xe1, 0xe7, 0x49, 0x8b, 0x8c, 0xae, 0x93, 0x86, 0x6d, 0x16, 0x26, 0x6d, 0x82, 0xd4,
	0xe8, 0xc5, 0xd6, 0x55, 0xd6, 0x9a, 0xac, 0xc3, 0x82, 0x61, 0x17, 0x6d, 0xb0, 0x77, 0x64, 0xb3,
	0xe9, 0x02, 0x03, 0x76, 0x63, 0x48, 0x32, 0x23, 0x7b, 0xb1, 0x25, 0x59, 0x14, 0xd3, 0x61, 0x17,
	0x03, 0x06, 0xec, 0x6a, 0x1f, 0x6e, 0x9f, 0x69, 0xe0, 0xa1, 0xe4, 0xf0, 0xd8, 0x12, 0xe1, 0x9b,
	0xba, 0x3a, 0xfc, 0x9d, 0xf3, 0x3f, 0x24, 0x0f, 0x0f, 0x19, 0xb2, 0x9b, 0x66, 0x85, 0xf4, 0x73,
	0x11, 0x8c, 0x7b, 0x59, 0x9e, 0x16, 0x29, 0x6d, 0xc3, 0x8f, 0xec, 0x69, 0xfb, 0xd1, 0xa3, 0x20,
	0x8f, 0xa5, 0x1f, 0x44, 0xc5, 0xf4, 0x56, 0xcc, 0x17, 0x86, 0x38, 0x7a, 0x6a, 0x8c, 0x7f, 0xa8,
	0x5c, 0x78, 0x52, 0xe4, 0xb7, 0xd3, 0x48, 0x78, 0xa1, 0x92, 0xe5, 0xe8, 0x91, 0x35, 0x2a, 0x6e,
	0x45, 0x52, 0x78, 0x13, 0x15, 0x96, 0x63, 0xd4, 0x8c, 0xbd, 0x97, 0x9e, 0x5c, 0x54, 0xfc, 0x3e,
	0xd8, 0xe2, 0x28, 0xf3, 0x32, 0x15, 0xca, 0x25, 0xfa, 0x10, 0xcc, 0x37, 0xc1, 0xf5, 0x4d, 0x50,
	0x5a, 0x0e, 0x8c, 0x45, 0x85, 0x62, 0xbe, 0xf0, 0x16, 0x4a, 0x28, 0x81, 0xd0, 0x79, 0x9a, 0xc4,
	0x69, 0x69, 0xd9, 0x35, 0x96, 0x45, 0x51, 0x20, 0x43, 0x12, 0x14, 0x95, 0xea, 0xe1, 0xd2, 0xe0,
	0xc9, 0x22, 0x17, 0xc1, 0x7c, 0x9a, 0xc4, 0xe5, 0xd0, 0x8e, 0x19, 0x92, 0xd5, 0x74, 0xcd, 0x1a,
	0x64, 0xa9, 0x2c, 0xe2, 0x5c, 0x54, 0xfe, 0x7b, 0xc6, 0xa8, 0x66, 0x32, 0xc8, 0x91, 0x29, 0x0f,
	0xc2, 0x70, 0x5a, 0x20, 0x15, 0x63, 0x2a, 0x75, 0x24, 0x9a, 0x4d, 0x2e, 0xc6, 0x53, 0x89, 0x27,
	0xce, 0xac, 0x01, 0xe4, 0xd2, 0xfd, 0x77, 0x9b, 0x6c, 0x71, 0x11, 0x8c, 0xe9, 0xa7, 0xe4, 0x1e,
	0x2c, 0x0c, 0x1b, 0x9f, 0xb6, 0x3e, 0x6a, 0x9f, 0x1d, 0xf5, 0xac, 0x2d, 0xeb, 0x69, 0xe2, 0xe7,
	0xac, 0x90, 0x3f, 0x6a, 0x82, 0x1b, 0x90, 0x5e, 0x90, 0xed, 0x6a, 0x13, 0x99, 0x00, 0xa7, 0xe3,
	0x5a, 0xa7, 0x37, 0x00, 0x5d, 0x0d, 0xf8, 0x12, 0xa7, 0xe7, 0xe4, 0x7e, 0xf0, 0x5e, 0xca, 0x85,
	0x64, 0xd7, 0xe0, 0xf8, 0xa4, 0xde, 0xf1, 0x97, 0xe1, 0x70, 0x30, 0xe4, 0x25, 0xaa, 0x33, 0x84,
	0xfd, 0x60, 0xb1, 0x23, 0xc3, 0x2b, 0x4d, 0x70, 0x03, 0x52, 0x8f, 0x6c, 0xe9, 0xdd, 0x60, 0x13,
	0x70, 0x38, 0xac, 0x75, 0xf8, 0x29, 0x28, 0x24, 0x07, 0x8c, 0x7e, 0x4f, 0x76, 0xf4, 0xef, 0x68,
	0xb9, 0x79, 0x6c, 0x0a, 0x8e, 0xdd, 0x46, 0xc7, 0x61, 0x45, 0xf2, 0x4e, 0x62, 0x7f, 0xd2, 0x17,
	0xe4, 0xff, 0x89, 0x5c, 0xb0, 0xdf, 0xc0, 0x9f, 0xd5, 0xfb, 0x0f, 0x07, 0x5c, 0x43, 0x7a, 0x31,
	0xcc, 0x9e, 0xb3, 0x1b, 0xc7, 0x62, 0xf4, 0x01, 0xe1, 0x25, 0xaa, 0x9d, 0x4c, 0x09, 0xb0, 0x99,
	0xc3, 0x89, 0x03, 0xc2, 0x4b, 0x54, 0x4f, 0xd0, 0xfc, 0xaf, 0x9c, 0xa2, 0x64, 0x73, 0xc7, 0x04,
	0x8d, 0xb3, 0x99, 0x93, 0xe4, 0x9d, 0xdc, 0xfe, 0xd4, 0x4b, 0xab, 0x8f, 0x02, 0x4b, 0x1c, 0x4b,
	0x7b, 0x35, 0x78, 0xf7, 0x8e, 0x03, 0x46, 0xfb, 0x64, 0x0f, 0x4e, 0xef, 0xa8, 0x3c, 0xdb, 0xa3,
	0x50, 0x49, 0x96, 0x82, 0xef, 0xf3, 0xfa, 0xbd, 0xd7, 0xf4, 0xd0, 0xc0, 0x6f, 0x95, 0xe4, 0xbb,
	0x01, 0x36, 0xd0, 0x1f, 0x88, 0x31, 0x8d, 0xa0, 0x1f, 0x8c, 0x26, 0x2a, 0x64, 0x99, 0x63, 0x32,
	0x10, 0xef, 0x6b, 0x8d, 0x7e, 0xa7, 0x42, 0xde, 0x09, 0xec, 0x4f, 0xfa, 0x15, 0x21, 0x71, 0x94,
	0x8d, 0xcc, 0x91, 0x61, 0x0b, 0x08, 0x73, 0x52, 0x1b, 0xe6, 0xdb, 0xcb, 0x7e, 0x5f, 0x85, 0x43,
	0x15, 0xf2, 0x0f, 0xe2, 0x28, 0xeb, 0x83, 0x03, 0xbd, 0x24, 0x0f, 0x4c, 0x07, 0x19, 0x41, 0x07,
	0x61, 0x39, 0x04, 0x38, 0xad, 0x3f, 0x41, 0x2a, 0x14, 0x57, 0x83, 0x81, 0xe6, 0x78, 0xdb, 0x78,
	0xc1, 0x87, 0x0e, 0x02, 0xe7, 0xb3, 0xca, 0x42, 0x3a, 0x82, 0x70, 0x0d, 0x96, 0x79, 0xb4, 0xf3,
	0xf2, 0x43, 0x67, 0xf2, 0x0d, 0xe9, 0x98, 0x20, 0xd5, 0xfe, 0x16, 0x10, 0xe5, 0x59, 0x73, 0x94,
	0x6a, 0x7b, 0x8d, 0x78, 0xb5, 0xbb, 0x17, 0x64, 0xbb, 0xea, 0x4d, 0x4c, 0x39, 0x8e, 0x76, 0xbf,
	0x84, 0xf8, 0x12, 0xef, 0xce, 0x48, 0x07, 0x75, 0x0b, 0xfa, 0x09, 0xb9, 0x37, 0x8a, 0xd2, 0x24,
	0x61, 0x2d, 0x08, 0xf4, 0x61, 0x15, 0x48, 0xb7, 0xa4, 0x1e, 0x20, 0x97, 0x69, 0x92, 0xf0, 0x2d,
	0xfd, 0x2f, 0xed, 0x91, 0x2d, 0x6d, 0x67, 0xff, 0xc3, 0x47, 0xfc, 0x8e, 0xd5, 0xb1, 0xdf, 0xe4,
	0xb1, 0xe4, 0xc0, 0x75, 0x15, 0x79, 0xb8, 0xda, 0x66, 0x68, 0x0f, 0x0b, 0x1e, 0xa2, 0x20, 0x15,
	0x65, 0x69, 0xbe, 0x42, 0x9a, 0xc7, 0xb5, 0xf8, 0x8a, 0x6c, 0x4a, 0x76, 0x70, 0x93, 0xa2, 0x2f,
	0xb1, 0xe8, 0x01, 0x8e, 0x02, 0x8c, 0x25, 0xe9, 0x23, 0xc9, 0x27, 0x35, 0xf0, 0x8a, 0xa0, 0xb5,
	0xaa, 0xd0, 0xe1, 0xdc, 0xab, 0x0a, 0xc8, 0x86, 0xab, 0x6a, 0x1a, 0x26, 0x56, 0x9b, 0x92, 0x07,
	0x76, 0x97, 0xa3, 0x2f, 0xb0, 0xd8, 0x3e, 0x0a, 0xa0, 0x09, 0x4b, 0xcb, 0x43, 0x5a, 0x87, 0x6b,
	0xe8, 0x8a, 0xd4, 0xdf, 0x2d, 0xb2, 0x5f, 0xdb, 0x51, 0xe9, 0x39, 0x16, 0x3d, 0x59, 0x8b, 0xb4,
	0x44, 0x2d, 0xf5, 0xcf, 0x91, 0x7a, 0xb7, 0xd9, 0x67, 0x25, 0x8d, 0x6b, 0xd2, 0xb6, 0xfa, 0x32,
	0xfd, 0x18, 0x6b, 0x3f, 0xc6, 0x71, 0x86, 0x76, 0xf5, 0xbc, 0x44, 0x8a, 0x6c, 0x95, 0x6c, 0xae,
	0xd7, 0xea, 0xec, 0xb8, 0xeb, 0xb5, 0xa2, 0x36, 0xac, 0xd7, 0xe5, 0x81, 0x6c, 0xac, 0x57, 0x73,
	0x8f, 0xb8, 0xeb, 0xd5, 0x30, 0x1b, 0xd6, 0x6b, 0x79, 0x31, 0x35, 0x0a, 0x9a, 0x6b, 0xc4, 0x2d,
	0x68, 0x98, 0x0d, 0x05, 0xcb, 0x4b, 0xad, 0xb9, 0x8e, 0xd0, 0xc5, 0xe5, 0xae, 0x23, 0x84, 0x6e,
	0x58, 0x47, 0xf8, 0x5e, 0xc4, 0x69, 0xfc, 0x49, 0x1e, 0xd5, 0x34, 0x69, 0xfa, 0x0a, 0xe7, 0xf0,
	0x14, 0xc7, 0xbb, 0x03, 0xad, 0x0c, 0x3e, 0x43, 0x19, 0x9c, 0x36, 0x79, 0xac, 0xe8, 0xff, 0xd5,
	0x22, 0x8f, 0xeb, 0xfa, 0x3b, 0x3d, 0xc3, 0x19, 0x1c, 0xaf, 0xc7, 0x5b, 0x5f, 0x84, 0xd7, 0x28,
	0x85, 0x67, 0x8d, 0x2e, 0x8e, 0xad, 0x40, 0xd7, 0xae, 0x7b, 0x2b, 0x10, 0xba, 0xe1, 0x56, 0xe0,
	0x5b, 0x1d, 0xa7, 0xf1, 0x4f, 0x8b, 0x1c, 0x34, 0xbc, 0x26, 0xe8, 0x6b, 0x9c, 0xc8, 0xe9, 0x7a,
	0xd0, 0x3b, 0xd8, 0x4a, 0xe5, 0x0b, 0x94, 0xca, 0x73, 0x97, 0x57, 0x73, 0x47, 0xd5, 0xaf, 0x22,
	0x77, 0x47, 0xd5, 0xc4, 0x86, 0x1d, 0x15, 0x9e, 0x58, 0x58, 0xea, 0x77, 0xb2, 0xb7, 0xf6, 0x5a,
	0xa1, 0x3e, 0xd6, 0xc3, 0x57, 0xc0, 0x12, 0xb3, 0x44, 0xcf, 0x90, 0xe8, 0x49, 0x3d, 0xdf, 0x5c,
	0xfc, 0xd6, 0x33, 0xc7, 0x5d, 0xfc, 0x16, 0xb8, 0x61, 0xf1, 0xdb, 0x2f, 0x28, 0xa4, 0xff, 0xf6,
	0xcb, 0x5f, 0x2f, 0xe2, 0x69, 0xa1, 0xff, 0x32, 0x8c, 0xd2, 0xb9, 0x1f, 0x06, 0x45, 0x34, 0x89,
	0xd2, 0x3c, 0xf3, 0xb3, 0x99, 0x9a, 0x87, 0x22, 0xf7, 0x64, 0x34, 0x11, 0xf3, 0x40, 0xfa, 0xa1,
	0x9a, 0xce, 0xc6, 0x7e, 0x9c, 0xfa, 0x26, 0xac, 0xaf, 0x9f, 0x34, 0xe1, 0x7d, 0xf8, 0x38, 0xff,
	0x2f, 0x00, 0x00, 0xff, 0xff, 0x5f, 0x7b, 0xe8, 0xa4, 0xbc, 0x0e, 0x00, 0x00,
}
