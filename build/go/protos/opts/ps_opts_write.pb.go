// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opts/ps_opts_write.proto

package opts

import (
	fmt "fmt"
	args "github.com/batchcorp/plumber-schemas/build/go/protos/args"
	encoding "github.com/batchcorp/plumber-schemas/build/go/protos/encoding"
	records "github.com/batchcorp/plumber-schemas/build/go/protos/records"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WriteCLIOptions struct {
	// @gotags: kong:"help='Write data from input file',existingfile,xor=input"
	InputFile string `protobuf:"bytes,1,opt,name=input_file,json=inputFile,proto3" json:"input_file,omitempty" kong:"help='Write data from input file',existingfile,xor=input"`
	// @gotags: kong:"help='Treat input as JSON array - each array element will be written as a separate message'"
	InputAsJsonArray bool `protobuf:"varint,2,opt,name=input_as_json_array,json=inputAsJsonArray,proto3" json:"input_as_json_array,omitempty" kong:"help='Treat input as JSON array - each array element will be written as a separate message'"`
	// @gotags: kong:"-"
	InputStdin           []string `protobuf:"bytes,3,rep,name=input_stdin,json=inputStdin,proto3" json:"input_stdin,omitempty" kong:"-"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteCLIOptions) Reset()         { *m = WriteCLIOptions{} }
func (m *WriteCLIOptions) String() string { return proto.CompactTextString(m) }
func (*WriteCLIOptions) ProtoMessage()    {}
func (*WriteCLIOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{0}
}

func (m *WriteCLIOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIOptions.Unmarshal(m, b)
}
func (m *WriteCLIOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIOptions.Marshal(b, m, deterministic)
}
func (m *WriteCLIOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIOptions.Merge(m, src)
}
func (m *WriteCLIOptions) XXX_Size() int {
	return xxx_messageInfo_WriteCLIOptions.Size(m)
}
func (m *WriteCLIOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIOptions proto.InternalMessageInfo

func (m *WriteCLIOptions) GetInputFile() string {
	if m != nil {
		return m.InputFile
	}
	return ""
}

func (m *WriteCLIOptions) GetInputAsJsonArray() bool {
	if m != nil {
		return m.InputAsJsonArray
	}
	return false
}

func (m *WriteCLIOptions) GetInputStdin() []string {
	if m != nil {
		return m.InputStdin
	}
	return nil
}

// Write is the structure that backends accept for facilitating a write.
// NOTE: _conn is only used by the CLI - desktop does not need to set it.
type WriteOptions struct {
	// Required for desktop; ignored in CLI.
	// @gotags: kong:"-"
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty" kong:"-"`
	// @gotags: kong:"embed"
	Record *records.WriteRecord `protobuf:"bytes,2,opt,name=record,proto3" json:"record,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	EncodeOptions *encoding.EncodeOptions `protobuf:"bytes,3,opt,name=encode_options,json=encodeOptions,proto3" json:"encode_options,omitempty" kong:"embed"`
	// Optional; CLI-specific and non-backend-specific options
	// @gotags: kong:"embed"
	XCliOptions *WriteCLIOptions `protobuf:"bytes,1000,opt,name=_cli_options,json=CliOptions,proto3" json:"_cli_options,omitempty" kong:"embed"`
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *WriteGroupKafkaOptions `protobuf:"bytes,100,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='Apache ActiveMQ'"
	Activemq *WriteGroupActiveMQOptions `protobuf:"bytes,101,opt,name=activemq,proto3" json:"activemq,omitempty" kong:"cmd,help='Apache ActiveMQ'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	AwsSqs *WriteGroupAWSSQSOptions `protobuf:"bytes,102,opt,name=aws_sqs,json=awsSqs,proto3" json:"aws_sqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='AWS Simple Notification System'"
	AwsSns *WriteGroupAWSSNSOptions `protobuf:"bytes,103,opt,name=aws_sns,json=awsSns,proto3" json:"aws_sns,omitempty" kong:"cmd,help='AWS Simple Notification System'"`
	// @gotags: kong:"cmd,help='NATS'"
	Nats *WriteGroupNatsOptions `protobuf:"bytes,104,opt,name=nats,proto3" json:"nats,omitempty" kong:"cmd,help='NATS'"`
	// @gotags: kong:"cmd,help='NATS Streaming'"
	NatsStreaming *WriteGroupNatsStreamingOptions `protobuf:"bytes,105,opt,name=nats_streaming,json=natsStreaming,proto3" json:"nats_streaming,omitempty" kong:"cmd,help='NATS Streaming'"`
	// @gotags: kong:"cmd,help='NSQ'"
	Nsq *WriteGroupNSQOptions `protobuf:"bytes,106,opt,name=nsq,proto3" json:"nsq,omitempty" kong:"cmd,help='NSQ'"`
	// @gotags: kong:"cmd,help='Apache Pulsar'"
	Pulsar *WriteGroupPulsarOptions `protobuf:"bytes,107,opt,name=pulsar,proto3" json:"pulsar,omitempty" kong:"cmd,help='Apache Pulsar'"`
	// @gotags: kong:"cmd,help='RabbitMQ'"
	Rabbit *WriteGroupRabbitOptions `protobuf:"bytes,108,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='RabbitMQ'"`
	// @gotags: kong:"cmd,help='RabbitMQ Streams'"
	RabbitStreams *WriteGroupRabbitStreamsOptions `protobuf:"bytes,109,opt,name=rabbit_streams,json=rabbitStreams,proto3" json:"rabbit_streams,omitempty" kong:"cmd,help='RabbitMQ Streams'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Mqtt *WriteGroupMQTTOptions `protobuf:"bytes,110,opt,name=mqtt,proto3" json:"mqtt,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='Azure Service Bus'"
	AzureServiceBus *WriteGroupAzureServiceBusOptions `protobuf:"bytes,111,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty" kong:"cmd,help='Azure Service Bus'"`
	// @gotags: kong:"cmd,help='Azure Event Hub'"
	AzureEventHub *WriteGroupAzureEventHubOptions `protobuf:"bytes,112,opt,name=azure_event_hub,json=azureEventHub,proto3" json:"azure_event_hub,omitempty" kong:"cmd,help='Azure Event Hub'"`
	// @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
	GcpPubsub *WriteGroupGCPPubSubOptions `protobuf:"bytes,113,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty" kong:"cmd,help='Google Cloud Platform Pub/Sub'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *WriteGroupKubeMQQueueOptions `protobuf:"bytes,114,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='Redis PubSub'"
	RedisPubsub *WriteGroupRedisPubSubOptions `protobuf:"bytes,115,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty" kong:"cmd,help='Redis PubSub'"`
	// @gotags: kong:"cmd,help='Redis Streams'"
	RedisStreams         *WriteGroupRedisStreamsOptions `protobuf:"bytes,116,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty" kong:"cmd,help='Redis Streams'"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WriteOptions) Reset()         { *m = WriteOptions{} }
func (m *WriteOptions) String() string { return proto.CompactTextString(m) }
func (*WriteOptions) ProtoMessage()    {}
func (*WriteOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{1}
}

func (m *WriteOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptions.Unmarshal(m, b)
}
func (m *WriteOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptions.Marshal(b, m, deterministic)
}
func (m *WriteOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptions.Merge(m, src)
}
func (m *WriteOptions) XXX_Size() int {
	return xxx_messageInfo_WriteOptions.Size(m)
}
func (m *WriteOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptions proto.InternalMessageInfo

func (m *WriteOptions) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *WriteOptions) GetRecord() *records.WriteRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *WriteOptions) GetEncodeOptions() *encoding.EncodeOptions {
	if m != nil {
		return m.EncodeOptions
	}
	return nil
}

func (m *WriteOptions) GetXCliOptions() *WriteCLIOptions {
	if m != nil {
		return m.XCliOptions
	}
	return nil
}

func (m *WriteOptions) GetKafka() *WriteGroupKafkaOptions {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *WriteOptions) GetActivemq() *WriteGroupActiveMQOptions {
	if m != nil {
		return m.Activemq
	}
	return nil
}

func (m *WriteOptions) GetAwsSqs() *WriteGroupAWSSQSOptions {
	if m != nil {
		return m.AwsSqs
	}
	return nil
}

func (m *WriteOptions) GetAwsSns() *WriteGroupAWSSNSOptions {
	if m != nil {
		return m.AwsSns
	}
	return nil
}

func (m *WriteOptions) GetNats() *WriteGroupNatsOptions {
	if m != nil {
		return m.Nats
	}
	return nil
}

func (m *WriteOptions) GetNatsStreaming() *WriteGroupNatsStreamingOptions {
	if m != nil {
		return m.NatsStreaming
	}
	return nil
}

func (m *WriteOptions) GetNsq() *WriteGroupNSQOptions {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *WriteOptions) GetPulsar() *WriteGroupPulsarOptions {
	if m != nil {
		return m.Pulsar
	}
	return nil
}

func (m *WriteOptions) GetRabbit() *WriteGroupRabbitOptions {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *WriteOptions) GetRabbitStreams() *WriteGroupRabbitStreamsOptions {
	if m != nil {
		return m.RabbitStreams
	}
	return nil
}

func (m *WriteOptions) GetMqtt() *WriteGroupMQTTOptions {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *WriteOptions) GetAzureServiceBus() *WriteGroupAzureServiceBusOptions {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *WriteOptions) GetAzureEventHub() *WriteGroupAzureEventHubOptions {
	if m != nil {
		return m.AzureEventHub
	}
	return nil
}

func (m *WriteOptions) GetGcpPubsub() *WriteGroupGCPPubSubOptions {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *WriteOptions) GetKubemqQueue() *WriteGroupKubeMQQueueOptions {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *WriteOptions) GetRedisPubsub() *WriteGroupRedisPubSubOptions {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *WriteOptions) GetRedisStreams() *WriteGroupRedisStreamsOptions {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

type WriteGroupKafkaOptions struct {
	// @gotags: kong:"embed"
	XConn *args.KafkaConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KafkaWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WriteGroupKafkaOptions) Reset()         { *m = WriteGroupKafkaOptions{} }
func (m *WriteGroupKafkaOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupKafkaOptions) ProtoMessage()    {}
func (*WriteGroupKafkaOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{2}
}

func (m *WriteGroupKafkaOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupKafkaOptions.Unmarshal(m, b)
}
func (m *WriteGroupKafkaOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupKafkaOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupKafkaOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupKafkaOptions.Merge(m, src)
}
func (m *WriteGroupKafkaOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupKafkaOptions.Size(m)
}
func (m *WriteGroupKafkaOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupKafkaOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupKafkaOptions proto.InternalMessageInfo

func (m *WriteGroupKafkaOptions) GetXConn() *args.KafkaConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupKafkaOptions) GetArgs() *args.KafkaWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupActiveMQOptions struct {
	// @gotags: kong:"embed"
	XConn *args.ActiveMQConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.ActiveMQWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WriteGroupActiveMQOptions) Reset()         { *m = WriteGroupActiveMQOptions{} }
func (m *WriteGroupActiveMQOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupActiveMQOptions) ProtoMessage()    {}
func (*WriteGroupActiveMQOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{3}
}

func (m *WriteGroupActiveMQOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupActiveMQOptions.Unmarshal(m, b)
}
func (m *WriteGroupActiveMQOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupActiveMQOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupActiveMQOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupActiveMQOptions.Merge(m, src)
}
func (m *WriteGroupActiveMQOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupActiveMQOptions.Size(m)
}
func (m *WriteGroupActiveMQOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupActiveMQOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupActiveMQOptions proto.InternalMessageInfo

func (m *WriteGroupActiveMQOptions) GetXConn() *args.ActiveMQConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupActiveMQOptions) GetArgs() *args.ActiveMQWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupAWSSQSOptions struct {
	// @gotags: kong:"embed"
	XConn *args.AWSSQSConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AWSSQSWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteGroupAWSSQSOptions) Reset()         { *m = WriteGroupAWSSQSOptions{} }
func (m *WriteGroupAWSSQSOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupAWSSQSOptions) ProtoMessage()    {}
func (*WriteGroupAWSSQSOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{4}
}

func (m *WriteGroupAWSSQSOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupAWSSQSOptions.Unmarshal(m, b)
}
func (m *WriteGroupAWSSQSOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupAWSSQSOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupAWSSQSOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupAWSSQSOptions.Merge(m, src)
}
func (m *WriteGroupAWSSQSOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupAWSSQSOptions.Size(m)
}
func (m *WriteGroupAWSSQSOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupAWSSQSOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupAWSSQSOptions proto.InternalMessageInfo

func (m *WriteGroupAWSSQSOptions) GetXConn() *args.AWSSQSConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupAWSSQSOptions) GetArgs() *args.AWSSQSWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupAWSSNSOptions struct {
	// @gotags: kong:"embed"
	XConn *args.AWSSNSConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AWSSNSWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteGroupAWSSNSOptions) Reset()         { *m = WriteGroupAWSSNSOptions{} }
func (m *WriteGroupAWSSNSOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupAWSSNSOptions) ProtoMessage()    {}
func (*WriteGroupAWSSNSOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{5}
}

func (m *WriteGroupAWSSNSOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupAWSSNSOptions.Unmarshal(m, b)
}
func (m *WriteGroupAWSSNSOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupAWSSNSOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupAWSSNSOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupAWSSNSOptions.Merge(m, src)
}
func (m *WriteGroupAWSSNSOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupAWSSNSOptions.Size(m)
}
func (m *WriteGroupAWSSNSOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupAWSSNSOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupAWSSNSOptions proto.InternalMessageInfo

func (m *WriteGroupAWSSNSOptions) GetXConn() *args.AWSSNSConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupAWSSNSOptions) GetArgs() *args.AWSSNSWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupNatsOptions struct {
	// @gotags: kong:"embed"
	XConn *args.NatsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NatsWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *WriteGroupNatsOptions) Reset()         { *m = WriteGroupNatsOptions{} }
func (m *WriteGroupNatsOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupNatsOptions) ProtoMessage()    {}
func (*WriteGroupNatsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{6}
}

func (m *WriteGroupNatsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupNatsOptions.Unmarshal(m, b)
}
func (m *WriteGroupNatsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupNatsOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupNatsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupNatsOptions.Merge(m, src)
}
func (m *WriteGroupNatsOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupNatsOptions.Size(m)
}
func (m *WriteGroupNatsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupNatsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupNatsOptions proto.InternalMessageInfo

func (m *WriteGroupNatsOptions) GetXConn() *args.NatsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupNatsOptions) GetArgs() *args.NatsWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupNatsStreamingOptions struct {
	// @gotags: kong:"embed"
	XConn *args.NatsStreamingConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NatsStreamingWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WriteGroupNatsStreamingOptions) Reset()         { *m = WriteGroupNatsStreamingOptions{} }
func (m *WriteGroupNatsStreamingOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupNatsStreamingOptions) ProtoMessage()    {}
func (*WriteGroupNatsStreamingOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{7}
}

func (m *WriteGroupNatsStreamingOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupNatsStreamingOptions.Unmarshal(m, b)
}
func (m *WriteGroupNatsStreamingOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupNatsStreamingOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupNatsStreamingOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupNatsStreamingOptions.Merge(m, src)
}
func (m *WriteGroupNatsStreamingOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupNatsStreamingOptions.Size(m)
}
func (m *WriteGroupNatsStreamingOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupNatsStreamingOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupNatsStreamingOptions proto.InternalMessageInfo

func (m *WriteGroupNatsStreamingOptions) GetXConn() *args.NatsStreamingConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupNatsStreamingOptions) GetArgs() *args.NatsStreamingWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupNSQOptions struct {
	// @gotags: kong:"embed"
	XConn *args.NSQConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NSQWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WriteGroupNSQOptions) Reset()         { *m = WriteGroupNSQOptions{} }
func (m *WriteGroupNSQOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupNSQOptions) ProtoMessage()    {}
func (*WriteGroupNSQOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{8}
}

func (m *WriteGroupNSQOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupNSQOptions.Unmarshal(m, b)
}
func (m *WriteGroupNSQOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupNSQOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupNSQOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupNSQOptions.Merge(m, src)
}
func (m *WriteGroupNSQOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupNSQOptions.Size(m)
}
func (m *WriteGroupNSQOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupNSQOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupNSQOptions proto.InternalMessageInfo

func (m *WriteGroupNSQOptions) GetXConn() *args.NSQConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupNSQOptions) GetArgs() *args.NSQWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupPulsarOptions struct {
	// @gotags: kong:"embed"
	XConn *args.PulsarConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.PulsarWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteGroupPulsarOptions) Reset()         { *m = WriteGroupPulsarOptions{} }
func (m *WriteGroupPulsarOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupPulsarOptions) ProtoMessage()    {}
func (*WriteGroupPulsarOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{9}
}

func (m *WriteGroupPulsarOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupPulsarOptions.Unmarshal(m, b)
}
func (m *WriteGroupPulsarOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupPulsarOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupPulsarOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupPulsarOptions.Merge(m, src)
}
func (m *WriteGroupPulsarOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupPulsarOptions.Size(m)
}
func (m *WriteGroupPulsarOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupPulsarOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupPulsarOptions proto.InternalMessageInfo

func (m *WriteGroupPulsarOptions) GetXConn() *args.PulsarConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupPulsarOptions) GetArgs() *args.PulsarWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupRabbitOptions struct {
	// @gotags: kong:"embed"
	XConn *args.RabbitConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RabbitWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteGroupRabbitOptions) Reset()         { *m = WriteGroupRabbitOptions{} }
func (m *WriteGroupRabbitOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupRabbitOptions) ProtoMessage()    {}
func (*WriteGroupRabbitOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{10}
}

func (m *WriteGroupRabbitOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupRabbitOptions.Unmarshal(m, b)
}
func (m *WriteGroupRabbitOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupRabbitOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupRabbitOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupRabbitOptions.Merge(m, src)
}
func (m *WriteGroupRabbitOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupRabbitOptions.Size(m)
}
func (m *WriteGroupRabbitOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupRabbitOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupRabbitOptions proto.InternalMessageInfo

func (m *WriteGroupRabbitOptions) GetXConn() *args.RabbitConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupRabbitOptions) GetArgs() *args.RabbitWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupRabbitStreamsOptions struct {
	// @gotags: kong:"embed"
	XConn *args.RabbitStreamsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RabbitStreamsWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WriteGroupRabbitStreamsOptions) Reset()         { *m = WriteGroupRabbitStreamsOptions{} }
func (m *WriteGroupRabbitStreamsOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupRabbitStreamsOptions) ProtoMessage()    {}
func (*WriteGroupRabbitStreamsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{11}
}

func (m *WriteGroupRabbitStreamsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupRabbitStreamsOptions.Unmarshal(m, b)
}
func (m *WriteGroupRabbitStreamsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupRabbitStreamsOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupRabbitStreamsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupRabbitStreamsOptions.Merge(m, src)
}
func (m *WriteGroupRabbitStreamsOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupRabbitStreamsOptions.Size(m)
}
func (m *WriteGroupRabbitStreamsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupRabbitStreamsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupRabbitStreamsOptions proto.InternalMessageInfo

func (m *WriteGroupRabbitStreamsOptions) GetXConn() *args.RabbitStreamsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupRabbitStreamsOptions) GetArgs() *args.RabbitStreamsWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupRedisPubSubOptions struct {
	// @gotags: kong:"embed"
	XConn *args.RedisPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisPubSubWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *WriteGroupRedisPubSubOptions) Reset()         { *m = WriteGroupRedisPubSubOptions{} }
func (m *WriteGroupRedisPubSubOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupRedisPubSubOptions) ProtoMessage()    {}
func (*WriteGroupRedisPubSubOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{12}
}

func (m *WriteGroupRedisPubSubOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupRedisPubSubOptions.Unmarshal(m, b)
}
func (m *WriteGroupRedisPubSubOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupRedisPubSubOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupRedisPubSubOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupRedisPubSubOptions.Merge(m, src)
}
func (m *WriteGroupRedisPubSubOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupRedisPubSubOptions.Size(m)
}
func (m *WriteGroupRedisPubSubOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupRedisPubSubOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupRedisPubSubOptions proto.InternalMessageInfo

func (m *WriteGroupRedisPubSubOptions) GetXConn() *args.RedisPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupRedisPubSubOptions) GetArgs() *args.RedisPubSubWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupRedisStreamsOptions struct {
	// @gotags: kong:"embed"
	XConn *args.RedisStreamsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisStreamsWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *WriteGroupRedisStreamsOptions) Reset()         { *m = WriteGroupRedisStreamsOptions{} }
func (m *WriteGroupRedisStreamsOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupRedisStreamsOptions) ProtoMessage()    {}
func (*WriteGroupRedisStreamsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{13}
}

func (m *WriteGroupRedisStreamsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupRedisStreamsOptions.Unmarshal(m, b)
}
func (m *WriteGroupRedisStreamsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupRedisStreamsOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupRedisStreamsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupRedisStreamsOptions.Merge(m, src)
}
func (m *WriteGroupRedisStreamsOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupRedisStreamsOptions.Size(m)
}
func (m *WriteGroupRedisStreamsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupRedisStreamsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupRedisStreamsOptions proto.InternalMessageInfo

func (m *WriteGroupRedisStreamsOptions) GetXConn() *args.RedisStreamsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupRedisStreamsOptions) GetArgs() *args.RedisStreamsWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupAzureEventHubOptions struct {
	// @gotags: kong:"embed"
	XConn *args.AzureEventHubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AzureEventHubWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WriteGroupAzureEventHubOptions) Reset()         { *m = WriteGroupAzureEventHubOptions{} }
func (m *WriteGroupAzureEventHubOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupAzureEventHubOptions) ProtoMessage()    {}
func (*WriteGroupAzureEventHubOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{14}
}

func (m *WriteGroupAzureEventHubOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupAzureEventHubOptions.Unmarshal(m, b)
}
func (m *WriteGroupAzureEventHubOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupAzureEventHubOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupAzureEventHubOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupAzureEventHubOptions.Merge(m, src)
}
func (m *WriteGroupAzureEventHubOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupAzureEventHubOptions.Size(m)
}
func (m *WriteGroupAzureEventHubOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupAzureEventHubOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupAzureEventHubOptions proto.InternalMessageInfo

func (m *WriteGroupAzureEventHubOptions) GetXConn() *args.AzureEventHubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupAzureEventHubOptions) GetArgs() *args.AzureEventHubWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupAzureServiceBusOptions struct {
	// @gotags: kong:"embed"{
	XConn *args.AzureServiceBusConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AzureServiceBusWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WriteGroupAzureServiceBusOptions) Reset()         { *m = WriteGroupAzureServiceBusOptions{} }
func (m *WriteGroupAzureServiceBusOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupAzureServiceBusOptions) ProtoMessage()    {}
func (*WriteGroupAzureServiceBusOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{15}
}

func (m *WriteGroupAzureServiceBusOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupAzureServiceBusOptions.Unmarshal(m, b)
}
func (m *WriteGroupAzureServiceBusOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupAzureServiceBusOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupAzureServiceBusOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupAzureServiceBusOptions.Merge(m, src)
}
func (m *WriteGroupAzureServiceBusOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupAzureServiceBusOptions.Size(m)
}
func (m *WriteGroupAzureServiceBusOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupAzureServiceBusOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupAzureServiceBusOptions proto.InternalMessageInfo

func (m *WriteGroupAzureServiceBusOptions) GetXConn() *args.AzureServiceBusConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupAzureServiceBusOptions) GetArgs() *args.AzureServiceBusWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupMQTTOptions struct {
	// @gotags: kong:"embed"
	XConn *args.MQTTConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.MQTTWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *WriteGroupMQTTOptions) Reset()         { *m = WriteGroupMQTTOptions{} }
func (m *WriteGroupMQTTOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupMQTTOptions) ProtoMessage()    {}
func (*WriteGroupMQTTOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{16}
}

func (m *WriteGroupMQTTOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupMQTTOptions.Unmarshal(m, b)
}
func (m *WriteGroupMQTTOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupMQTTOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupMQTTOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupMQTTOptions.Merge(m, src)
}
func (m *WriteGroupMQTTOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupMQTTOptions.Size(m)
}
func (m *WriteGroupMQTTOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupMQTTOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupMQTTOptions proto.InternalMessageInfo

func (m *WriteGroupMQTTOptions) GetXConn() *args.MQTTConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupMQTTOptions) GetArgs() *args.MQTTWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupGCPPubSubOptions struct {
	// @gotags: kong:"embed"
	XConn *args.GCPPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.GCPPubSubWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *WriteGroupGCPPubSubOptions) Reset()         { *m = WriteGroupGCPPubSubOptions{} }
func (m *WriteGroupGCPPubSubOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupGCPPubSubOptions) ProtoMessage()    {}
func (*WriteGroupGCPPubSubOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{17}
}

func (m *WriteGroupGCPPubSubOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupGCPPubSubOptions.Unmarshal(m, b)
}
func (m *WriteGroupGCPPubSubOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupGCPPubSubOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupGCPPubSubOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupGCPPubSubOptions.Merge(m, src)
}
func (m *WriteGroupGCPPubSubOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupGCPPubSubOptions.Size(m)
}
func (m *WriteGroupGCPPubSubOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupGCPPubSubOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupGCPPubSubOptions proto.InternalMessageInfo

func (m *WriteGroupGCPPubSubOptions) GetXConn() *args.GCPPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupGCPPubSubOptions) GetArgs() *args.GCPPubSubWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteGroupKubeMQQueueOptions struct {
	// @gotags: kong:"embed"
	XConn *args.KubeMQQueueConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KubeMQQueueWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *WriteGroupKubeMQQueueOptions) Reset()         { *m = WriteGroupKubeMQQueueOptions{} }
func (m *WriteGroupKubeMQQueueOptions) String() string { return proto.CompactTextString(m) }
func (*WriteGroupKubeMQQueueOptions) ProtoMessage()    {}
func (*WriteGroupKubeMQQueueOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_c48ba9642d1e9ac6, []int{18}
}

func (m *WriteGroupKubeMQQueueOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteGroupKubeMQQueueOptions.Unmarshal(m, b)
}
func (m *WriteGroupKubeMQQueueOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteGroupKubeMQQueueOptions.Marshal(b, m, deterministic)
}
func (m *WriteGroupKubeMQQueueOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteGroupKubeMQQueueOptions.Merge(m, src)
}
func (m *WriteGroupKubeMQQueueOptions) XXX_Size() int {
	return xxx_messageInfo_WriteGroupKubeMQQueueOptions.Size(m)
}
func (m *WriteGroupKubeMQQueueOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteGroupKubeMQQueueOptions.DiscardUnknown(m)
}

var xxx_messageInfo_WriteGroupKubeMQQueueOptions proto.InternalMessageInfo

func (m *WriteGroupKubeMQQueueOptions) GetXConn() *args.KubeMQQueueConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteGroupKubeMQQueueOptions) GetArgs() *args.KubeMQQueueWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

func init() {
	proto.RegisterType((*WriteCLIOptions)(nil), "protos.opts.WriteCLIOptions")
	proto.RegisterType((*WriteOptions)(nil), "protos.opts.WriteOptions")
	proto.RegisterType((*WriteGroupKafkaOptions)(nil), "protos.opts.WriteGroupKafkaOptions")
	proto.RegisterType((*WriteGroupActiveMQOptions)(nil), "protos.opts.WriteGroupActiveMQOptions")
	proto.RegisterType((*WriteGroupAWSSQSOptions)(nil), "protos.opts.WriteGroupAWSSQSOptions")
	proto.RegisterType((*WriteGroupAWSSNSOptions)(nil), "protos.opts.WriteGroupAWSSNSOptions")
	proto.RegisterType((*WriteGroupNatsOptions)(nil), "protos.opts.WriteGroupNatsOptions")
	proto.RegisterType((*WriteGroupNatsStreamingOptions)(nil), "protos.opts.WriteGroupNatsStreamingOptions")
	proto.RegisterType((*WriteGroupNSQOptions)(nil), "protos.opts.WriteGroupNSQOptions")
	proto.RegisterType((*WriteGroupPulsarOptions)(nil), "protos.opts.WriteGroupPulsarOptions")
	proto.RegisterType((*WriteGroupRabbitOptions)(nil), "protos.opts.WriteGroupRabbitOptions")
	proto.RegisterType((*WriteGroupRabbitStreamsOptions)(nil), "protos.opts.WriteGroupRabbitStreamsOptions")
	proto.RegisterType((*WriteGroupRedisPubSubOptions)(nil), "protos.opts.WriteGroupRedisPubSubOptions")
	proto.RegisterType((*WriteGroupRedisStreamsOptions)(nil), "protos.opts.WriteGroupRedisStreamsOptions")
	proto.RegisterType((*WriteGroupAzureEventHubOptions)(nil), "protos.opts.WriteGroupAzureEventHubOptions")
	proto.RegisterType((*WriteGroupAzureServiceBusOptions)(nil), "protos.opts.WriteGroupAzureServiceBusOptions")
	proto.RegisterType((*WriteGroupMQTTOptions)(nil), "protos.opts.WriteGroupMQTTOptions")
	proto.RegisterType((*WriteGroupGCPPubSubOptions)(nil), "protos.opts.WriteGroupGCPPubSubOptions")
	proto.RegisterType((*WriteGroupKubeMQQueueOptions)(nil), "protos.opts.WriteGroupKubeMQQueueOptions")
}

func init() { proto.RegisterFile("opts/ps_opts_write.proto", fileDescriptor_c48ba9642d1e9ac6) }

var fileDescriptor_c48ba9642d1e9ac6 = []byte{
	// 1206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xcd, 0x4f, 0xdc, 0x46,
	0x14, 0xd7, 0x16, 0x42, 0xc2, 0x2c, 0x84, 0x76, 0x9a, 0xc0, 0x40, 0xf8, 0x58, 0x96, 0xb4, 0x25,
	0x49, 0xf1, 0xb6, 0xa0, 0xa4, 0x42, 0x6d, 0x55, 0x01, 0x22, 0x69, 0xda, 0x40, 0xc0, 0x8e, 0x14,
	0xb5, 0x17, 0xcb, 0xf6, 0x0e, 0xbb, 0x0e, 0xbb, 0xb6, 0xd7, 0x63, 0x83, 0xd2, 0x4b, 0xab, 0x9e,
	0x2a, 0x55, 0xea, 0xa9, 0xb7, 0xfe, 0x83, 0xfd, 0x33, 0xaa, 0x99, 0xb1, 0xbd, 0x7e, 0xfe, 0x18,
	0xb6, 0x17, 0x16, 0xcf, 0xfb, 0x7d, 0xbc, 0x99, 0xe7, 0xf7, 0xc6, 0x88, 0xf8, 0x41, 0xc4, 0x3a,
	0x01, 0x33, 0xf9, 0xaf, 0x79, 0x1d, 0xba, 0x11, 0xd5, 0x82, 0xd0, 0x8f, 0x7c, 0xdc, 0x14, 0x3f,
	0x4c, 0xe3, 0x81, 0x95, 0xb5, 0x90, 0x3a, 0x7e, 0xd8, 0x15, 0xc8, 0xe4, 0x5f, 0xd3, 0xb6, 0x58,
	0x82, 0x5d, 0x79, 0x60, 0x85, 0x3d, 0x11, 0xe3, 0xbf, 0xa6, 0xe5, 0x44, 0xee, 0x15, 0x1d, 0x8e,
	0x92, 0xe0, 0x43, 0x18, 0xfc, 0x25, 0x0e, 0xa9, 0xc9, 0x68, 0x78, 0xe5, 0x3a, 0xd4, 0xb4, 0x63,
	0x96, 0xa0, 0xda, 0x15, 0x28, 0x7a, 0x45, 0xbd, 0xc8, 0xec, 0xc7, 0x76, 0x82, 0x59, 0x81, 0x98,
	0x6b, 0x66, 0x32, 0x8f, 0xd5, 0xc7, 0x46, 0x69, 0x6c, 0x0d, 0xc4, 0x7a, 0x4e, 0x60, 0x06, 0xb1,
	0xcd, 0x32, 0x59, 0x02, 0xc2, 0x97, 0xd6, 0xc5, 0xa5, 0x95, 0x44, 0x36, 0x60, 0x24, 0xb6, 0xe9,
	0x70, 0x64, 0x8e, 0x62, 0x1a, 0xa7, 0x1b, 0x5f, 0x02, 0x80, 0xe1, 0x28, 0x8a, 0x2a, 0x03, 0x9e,
	0x15, 0xa5, 0xb9, 0x6c, 0x96, 0x02, 0x26, 0x8b, 0x42, 0x6a, 0x0d, 0x5d, 0xaf, 0x97, 0x40, 0x16,
	0x21, 0x84, 0xa5, 0x07, 0xb9, 0x0c, 0xd6, 0x83, 0x78, 0xc0, 0xac, 0xb0, 0x32, 0x14, 0x5a, 0xb6,
	0xed, 0x46, 0x95, 0x86, 0x32, 0x94, 0x58, 0xb2, 0xca, 0x6d, 0x86, 0xb4, 0xeb, 0x32, 0x78, 0x42,
	0xad, 0x0a, 0x00, 0x94, 0x68, 0x53, 0xcf, 0xf1, 0xbb, 0xae, 0xd7, 0xe3, 0xa8, 0xf4, 0x7f, 0xfe,
	0x52, 0xb9, 0x7e, 0x5a, 0xa2, 0xf6, 0x6f, 0x0d, 0xb4, 0xf0, 0x96, 0xbf, 0x61, 0x47, 0xaf, 0x5e,
	0xbe, 0x96, 0x11, 0xbc, 0x86, 0x90, 0xeb, 0x05, 0x71, 0x64, 0x5e, 0xb8, 0x03, 0x4a, 0x1a, 0xad,
	0xc6, 0xf6, 0xac, 0x3e, 0x2b, 0x56, 0x9e, 0xbb, 0x03, 0x8a, 0x77, 0xd0, 0xc7, 0x32, 0x6c, 0x31,
	0xf3, 0x1d, 0xf3, 0x3d, 0xd3, 0x0a, 0x43, 0xeb, 0x3d, 0xf9, 0xa0, 0xd5, 0xd8, 0xbe, 0xa3, 0x7f,
	0x28, 0x42, 0x07, 0xec, 0x07, 0xe6, 0x7b, 0x07, 0x7c, 0x1d, 0x6f, 0xa0, 0xa6, 0x84, 0xb3, 0xa8,
	0xeb, 0x7a, 0x64, 0xaa, 0x35, 0xb5, 0x3d, 0xab, 0x4b, 0x03, 0x83, 0xaf, 0xb4, 0xff, 0x69, 0xa2,
	0x39, 0x91, 0x42, 0xea, 0xbf, 0x85, 0xe6, 0x1d, 0xdf, 0xf3, 0xa8, 0xc3, 0x1f, 0x4d, 0xb7, 0x9b,
	0xa4, 0x30, 0x37, 0x5e, 0x7c, 0xd9, 0xc5, 0x7b, 0x68, 0x46, 0xbe, 0xf4, 0xc2, 0xb8, 0xb9, 0xfb,
	0x40, 0x4b, 0x7a, 0x23, 0x69, 0x05, 0x4d, 0x48, 0xea, 0xe2, 0x41, 0x4f, 0xa0, 0xf8, 0x18, 0xdd,
	0x15, 0xe7, 0x40, 0xd3, 0x53, 0x20, 0x53, 0x82, 0xbc, 0x9e, 0x92, 0xd3, 0x53, 0xd2, 0x8e, 0x05,
	0x2c, 0xc9, 0x48, 0x9f, 0xa7, 0xf9, 0x47, 0xfc, 0x1d, 0x9a, 0x33, 0x9d, 0x81, 0x9b, 0x89, 0xfc,
	0x7b, 0x5b, 0xa8, 0xac, 0x6a, 0xb9, 0xf6, 0xd4, 0x0a, 0xa7, 0xaa, 0xa3, 0xa3, 0x81, 0x9b, 0x0a,
	0xec, 0xa3, 0x5b, 0xe2, 0x95, 0x26, 0x5d, 0x41, 0xdc, 0x2a, 0x13, 0x5f, 0x84, 0x7e, 0x1c, 0xfc,
	0xc8, 0x31, 0x29, 0x5f, 0x32, 0xf0, 0x21, 0xba, 0x93, 0xf6, 0x32, 0xa1, 0x82, 0xfd, 0x69, 0x0d,
	0xfb, 0x40, 0xc0, 0x4e, 0xce, 0x53, 0x81, 0x8c, 0x87, 0xbf, 0x45, 0xb7, 0x93, 0x66, 0x24, 0x17,
	0x42, 0xe2, 0x61, 0x9d, 0xc4, 0x5b, 0xc3, 0x38, 0x37, 0x52, 0x81, 0x19, 0xeb, 0x9a, 0x19, 0x23,
	0x96, 0xd1, 0x3d, 0x46, 0x7a, 0x37, 0xd2, 0x4f, 0x21, 0xdd, 0x63, 0xf8, 0x19, 0x9a, 0xe6, 0x2d,
	0x46, 0xfa, 0x82, 0xdb, 0xae, 0xe1, 0x9e, 0x5a, 0x11, 0x4b, 0x99, 0x02, 0x8f, 0x75, 0x74, 0x17,
	0xb6, 0x26, 0x71, 0x85, 0xc2, 0x13, 0x85, 0x82, 0x91, 0x62, 0xb3, 0x4a, 0x7a, 0xf9, 0x55, 0xbc,
	0x87, 0xa6, 0x3c, 0x36, 0x22, 0xef, 0x84, 0xd0, 0x66, 0x9d, 0x90, 0x91, 0x9d, 0x21, 0x47, 0xe3,
	0x6f, 0xd0, 0x8c, 0x6c, 0x74, 0x72, 0xa9, 0xdc, 0xfe, 0x99, 0x00, 0x65, 0xdb, 0x97, 0x1c, 0xce,
	0x96, 0x0d, 0x4f, 0x06, 0x4a, 0xb6, 0x2e, 0x40, 0x19, 0x5b, 0x72, 0xf8, 0x21, 0xc0, 0x71, 0x41,
	0x86, 0xca, 0x43, 0x90, 0x2a, 0x72, 0xc3, 0xd9, 0x79, 0xce, 0x87, 0xf9, 0x55, 0x5e, 0x10, 0x3e,
	0x25, 0x89, 0xa7, 0x2c, 0xc8, 0xc9, 0xf9, 0x9b, 0x37, 0x59, 0x41, 0x38, 0x1e, 0xff, 0x84, 0x3e,
	0x2a, 0xdd, 0x1c, 0xc4, 0x17, 0x22, 0x3b, 0x75, 0x6f, 0x04, 0xc7, 0x1b, 0x12, 0x7e, 0x18, 0x67,
	0x09, 0x2d, 0x58, 0x70, 0x1d, 0x1b, 0x68, 0xa1, 0x70, 0xdd, 0x90, 0x40, 0xb9, 0x4f, 0x21, 0x7c,
	0xcc, 0xc1, 0xdf, 0xc7, 0x76, 0xb6, 0x4f, 0x2b, 0xbf, 0x8a, 0x9f, 0x23, 0x34, 0xbe, 0x67, 0xc8,
	0x48, 0xe8, 0x7d, 0x56, 0xa3, 0xf7, 0xe2, 0xe8, 0xec, 0x2c, 0xb6, 0x8d, 0xb1, 0xd6, 0x6c, 0xcf,
	0x09, 0xce, 0x04, 0x13, 0xbf, 0x42, 0x73, 0xf9, 0x6b, 0x87, 0x84, 0x42, 0xe9, 0x51, 0x5d, 0x13,
	0xc7, 0x36, 0x3d, 0x39, 0x3f, 0xe7, 0xc8, 0x54, 0xab, 0x29, 0xe9, 0x62, 0x8d, 0xab, 0xe5, 0xa7,
	0x3b, 0x61, 0x4a, 0x35, 0x9d, 0x43, 0x61, 0x66, 0xcd, 0x30, 0x59, 0xe3, 0xb9, 0xbd, 0x46, 0xf3,
	0xe0, 0x2a, 0x20, 0x91, 0x90, 0x7b, 0xac, 0x92, 0x2b, 0xbc, 0x1d, 0x32, 0x9d, 0x64, 0xb1, 0x7d,
	0x85, 0x16, 0xab, 0x07, 0x12, 0x7e, 0x82, 0x6e, 0x99, 0x7c, 0x24, 0x8b, 0xf1, 0xdc, 0xdc, 0x5d,
	0x4c, 0x2d, 0xf8, 0x7d, 0xa4, 0x09, 0xe4, 0x91, 0xef, 0x79, 0xfa, 0x34, 0xff, 0x8b, 0x3b, 0x68,
	0x9a, 0xaf, 0x17, 0x87, 0xf5, 0x18, 0x2b, 0x4c, 0x0e, 0xc2, 0x1e, 0xd3, 0x05, 0xb0, 0xfd, 0x2b,
	0x5a, 0xae, 0x1d, 0x65, 0x58, 0x83, 0xd6, 0xcb, 0x40, 0x2e, 0x05, 0xe7, 0xdc, 0x77, 0x81, 0xfb,
	0x7a, 0x25, 0xbc, 0x98, 0xc0, 0x7b, 0xb4, 0x54, 0x33, 0x08, 0xf1, 0xe7, 0xd0, 0x7e, 0x09, 0xea,
	0x09, 0x68, 0xce, 0xfc, 0x0b, 0x60, 0xbe, 0x5a, 0x01, 0xbe, 0xd1, 0xfa, 0x74, 0x72, 0xeb, 0xd3,
	0xff, 0x63, 0x7d, 0x5a, 0xb2, 0x66, 0xe8, 0x7e, 0xe5, 0x0c, 0xc6, 0x8f, 0xa1, 0xf1, 0x7d, 0xa0,
	0xc5, 0x81, 0x39, 0x5b, 0x0d, 0xd8, 0xae, 0x94, 0xa0, 0x45, 0xd3, 0xbf, 0x1a, 0x68, 0x5d, 0x3d,
	0xb7, 0xf1, 0x1e, 0xb4, 0x5f, 0x2f, 0x69, 0x66, 0x8c, 0x5c, 0x1e, 0x5f, 0x81, 0x3c, 0xb6, 0xea,
	0x39, 0xc5, 0x84, 0x02, 0x74, 0xaf, 0x6a, 0xfc, 0xe3, 0x47, 0x30, 0x8b, 0x7b, 0x50, 0xd1, 0xc8,
	0xbf, 0x72, 0x3b, 0xc0, 0x7b, 0xb9, 0x88, 0x54, 0x96, 0x1c, 0x5c, 0x1c, 0xea, 0x92, 0x4b, 0xe8,
	0x84, 0x25, 0x97, 0x60, 0xa5, 0x35, 0xb8, 0x75, 0xd4, 0xd6, 0x12, 0x3a, 0xa1, 0xb5, 0x04, 0xab,
	0x0b, 0x5f, 0x75, 0x57, 0xa9, 0x0b, 0x0f, 0x18, 0x13, 0x16, 0x1e, 0x70, 0x8a, 0x09, 0xfd, 0xd1,
	0x40, 0xab, 0xaa, 0x61, 0x8b, 0xbf, 0x84, 0xe9, 0x14, 0x36, 0x39, 0xc6, 0xe7, 0x92, 0x79, 0x0a,
	0x92, 0xd9, 0xac, 0x63, 0x14, 0x53, 0xf9, 0xb3, 0x81, 0xd6, 0x94, 0x83, 0x1a, 0xef, 0xc2, 0x5c,
	0xd6, 0xca, 0xca, 0xe5, 0x93, 0x79, 0x06, 0x92, 0x69, 0xd7, 0x52, 0xd4, 0x95, 0xaa, 0xba, 0x6d,
	0xd5, 0x95, 0x02, 0x8c, 0x09, 0x2b, 0x05, 0x38, 0xc5, 0x84, 0xfe, 0x6e, 0xa0, 0xd6, 0x4d, 0xdf,
	0x15, 0xf8, 0x29, 0x4c, 0xa9, 0x55, 0x96, 0x1f, 0x73, 0x72, 0x49, 0xed, 0x83, 0xa4, 0x3e, 0x51,
	0xb1, 0x94, 0xf3, 0x33, 0xf7, 0xc9, 0xa4, 0x9e, 0x9f, 0x1c, 0x38, 0xe1, 0xfc, 0xe4, 0xd0, 0xa2,
	0xe9, 0xef, 0x0d, 0xb4, 0x52, 0xff, 0xe9, 0x82, 0x3b, 0xd0, 0x1a, 0xea, 0x65, 0xe8, 0x9c, 0xff,
	0x1e, 0xf0, 0xdf, 0xa8, 0xc6, 0xab, 0x5b, 0xa7, 0xfc, 0xd5, 0xa3, 0x6e, 0x9d, 0x1c, 0x7e, 0xc2,
	0xd6, 0xc9, 0x31, 0x0a, 0xa9, 0x1c, 0x7e, 0xfd, 0xf3, 0x7e, 0xcf, 0x8d, 0xfa, 0xb1, 0xad, 0x39,
	0xfe, 0xb0, 0x63, 0x5b, 0x91, 0xd3, 0x77, 0xfc, 0x30, 0xe8, 0x04, 0x83, 0x78, 0x68, 0xd3, 0x70,
	0x87, 0x39, 0x7d, 0x3a, 0xb4, 0x58, 0xc7, 0x8e, 0xdd, 0x41, 0xb7, 0xd3, 0xf3, 0x3b, 0x52, 0xb7,
	0xc3, 0x3f, 0x8e, 0xec, 0x19, 0xf1, 0xb0, 0xf7, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x65, 0xa0,
	0x44, 0x03, 0x86, 0x11, 0x00, 0x00,
}
