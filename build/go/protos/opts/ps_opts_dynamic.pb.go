// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opts/ps_opts_dynamic.proto

package opts

import (
	fmt "fmt"
	args "github.com/batchcorp/plumber-schemas/build/go/protos/args"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DynamicOptions struct {
	// @gotags: kong:"help='API token to use for dynamic destination (create here: https://console.batch.sh/account/security)',required"
	ApiToken string `protobuf:"bytes,1,opt,name=api_token,json=apiToken,proto3" json:"api_token,omitempty" kong:"help='API token to use for dynamic destination (create here: https://console.batch.sh/account/security)',required"`
	// @gotags: kong:"help='Dynamic destination collector address',default='dproxy.batch.sh:443'"
	XGrpcAddress string `protobuf:"bytes,2,opt,name=_grpc_address,json=GrpcAddress,proto3" json:"_grpc_address,omitempty" kong:"help='Dynamic destination collector address',default='dproxy.batch.sh:443'"`
	// @gotags: kong:"help='Dynamic destination collector initial connection timeout',default=5"
	XGrpcTimeoutSeconds uint32 `protobuf:"varint,3,opt,name=_grpc_timeout_seconds,json=GrpcTimeoutSeconds,proto3" json:"_grpc_timeout_seconds,omitempty" kong:"help='Dynamic destination collector initial connection timeout',default=5"`
	// @gotags: kong:"help='Use gRPC insecure mode when talking to Batch'"
	XGrpcInsecure bool `protobuf:"varint,4,opt,name=_grpc_insecure,json=GrpcInsecure,proto3" json:"_grpc_insecure,omitempty" kong:"help='Use gRPC insecure mode when talking to Batch'"`
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *DynamicGroupKafkaOptions `protobuf:"bytes,100,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='Apache ActiveMQ'"
	Activemq *DynamicGroupActiveMQOptions `protobuf:"bytes,101,opt,name=activemq,proto3" json:"activemq,omitempty" kong:"cmd,help='Apache ActiveMQ'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	AwsSqs *DynamicGroupAWSSQSOptions `protobuf:"bytes,102,opt,name=aws_sqs,json=awsSqs,proto3" json:"aws_sqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='AWS Simple Notification System'"
	AwsSns *DynamicGroupAWSSNSOptions `protobuf:"bytes,103,opt,name=aws_sns,json=awsSns,proto3" json:"aws_sns,omitempty" kong:"cmd,help='AWS Simple Notification System'"`
	// @gotags: kong:"cmd,help='NATS'"
	Nats *DynamicGroupNatsOptions `protobuf:"bytes,104,opt,name=nats,proto3" json:"nats,omitempty" kong:"cmd,help='NATS'"`
	// @gotags: kong:"cmd,help='NATS Streaming'"
	NatsStreaming *DynamicGroupNatsStreamingOptions `protobuf:"bytes,105,opt,name=nats_streaming,json=natsStreaming,proto3" json:"nats_streaming,omitempty" kong:"cmd,help='NATS Streaming'"`
	// @gotags: kong:"cmd,help='NSQ'"
	Nsq *DynamicGroupNSQOptions `protobuf:"bytes,106,opt,name=nsq,proto3" json:"nsq,omitempty" kong:"cmd,help='NSQ'"`
	// @gotags: kong:"cmd,help='RabbitMQ'"
	Rabbit *DynamicGroupRabbitOptions `protobuf:"bytes,107,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='RabbitMQ'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Mqtt *DynamicGroupMQTTOptions `protobuf:"bytes,108,opt,name=mqtt,proto3" json:"mqtt,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='Azure Service Bus'"
	AzureServiceBus *DynamicGroupAzureServiceBusOptions `protobuf:"bytes,109,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty" kong:"cmd,help='Azure Service Bus'"`
	// @gotags: kong:"cmd,help='Azure Event Hub'"
	AzureEventHub *DynamicGroupAzureEventHubOptions `protobuf:"bytes,110,opt,name=azure_event_hub,json=azureEventHub,proto3" json:"azure_event_hub,omitempty" kong:"cmd,help='Azure Event Hub'"`
	// @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
	GcpPubsub *DynamicGroupGCPPubSubOptions `protobuf:"bytes,111,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty" kong:"cmd,help='Google Cloud Platform Pub/Sub'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *DynamicGroupKubeMQQueueOptions `protobuf:"bytes,112,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='Redis PubSub'"
	RedisPubsub *DynamicGroupRedisPubSubOptions `protobuf:"bytes,113,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty" kong:"cmd,help='Redis PubSub'"`
	// @gotags: kong:"cmd,help='Redis Streams'"
	RedisStreams *DynamicGroupRedisStreamsOptions `protobuf:"bytes,114,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty" kong:"cmd,help='Redis Streams'"`
	// @gotags: kong:"cmd,help='Apache Pulsar'"
	Pulsar *DynamicGroupPulsarOptions `protobuf:"bytes,115,opt,name=pulsar,proto3" json:"pulsar,omitempty" kong:"cmd,help='Apache Pulsar'"`
	// @gotags: kong:"cmd,help='RabbitMQ Streams'"
	RabbitStreams *DynamicGroupRabbitStreamsOptions `protobuf:"bytes,116,opt,name=rabbit_streams,json=rabbitStreams,proto3" json:"rabbit_streams,omitempty" kong:"cmd,help='RabbitMQ Streams'"`
	// @gotags: kong:"cmd,help='NATS JetStream'"
	NatsJetstream *DynamicGroupNatsJetstreamOptions `protobuf:"bytes,117,opt,name=nats_jetstream,json=natsJetstream,proto3" json:"nats_jetstream,omitempty" kong:"cmd,help='NATS JetStream'"`
	// @gotags: kong:"cmd,help='AWS Kinesis Streams'"
	AwsKinesis           *DynamicGroupAWSKinesisOptions `protobuf:"bytes,118,opt,name=aws_kinesis,json=awsKinesis,proto3" json:"aws_kinesis,omitempty" kong:"cmd,help='AWS Kinesis Streams'"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *DynamicOptions) Reset()         { *m = DynamicOptions{} }
func (m *DynamicOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicOptions) ProtoMessage()    {}
func (*DynamicOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{0}
}

func (m *DynamicOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicOptions.Unmarshal(m, b)
}
func (m *DynamicOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicOptions.Marshal(b, m, deterministic)
}
func (m *DynamicOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicOptions.Merge(m, src)
}
func (m *DynamicOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicOptions.Size(m)
}
func (m *DynamicOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicOptions proto.InternalMessageInfo

func (m *DynamicOptions) GetApiToken() string {
	if m != nil {
		return m.ApiToken
	}
	return ""
}

func (m *DynamicOptions) GetXGrpcAddress() string {
	if m != nil {
		return m.XGrpcAddress
	}
	return ""
}

func (m *DynamicOptions) GetXGrpcTimeoutSeconds() uint32 {
	if m != nil {
		return m.XGrpcTimeoutSeconds
	}
	return 0
}

func (m *DynamicOptions) GetXGrpcInsecure() bool {
	if m != nil {
		return m.XGrpcInsecure
	}
	return false
}

func (m *DynamicOptions) GetKafka() *DynamicGroupKafkaOptions {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *DynamicOptions) GetActivemq() *DynamicGroupActiveMQOptions {
	if m != nil {
		return m.Activemq
	}
	return nil
}

func (m *DynamicOptions) GetAwsSqs() *DynamicGroupAWSSQSOptions {
	if m != nil {
		return m.AwsSqs
	}
	return nil
}

func (m *DynamicOptions) GetAwsSns() *DynamicGroupAWSSNSOptions {
	if m != nil {
		return m.AwsSns
	}
	return nil
}

func (m *DynamicOptions) GetNats() *DynamicGroupNatsOptions {
	if m != nil {
		return m.Nats
	}
	return nil
}

func (m *DynamicOptions) GetNatsStreaming() *DynamicGroupNatsStreamingOptions {
	if m != nil {
		return m.NatsStreaming
	}
	return nil
}

func (m *DynamicOptions) GetNsq() *DynamicGroupNSQOptions {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *DynamicOptions) GetRabbit() *DynamicGroupRabbitOptions {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *DynamicOptions) GetMqtt() *DynamicGroupMQTTOptions {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *DynamicOptions) GetAzureServiceBus() *DynamicGroupAzureServiceBusOptions {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *DynamicOptions) GetAzureEventHub() *DynamicGroupAzureEventHubOptions {
	if m != nil {
		return m.AzureEventHub
	}
	return nil
}

func (m *DynamicOptions) GetGcpPubsub() *DynamicGroupGCPPubSubOptions {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *DynamicOptions) GetKubemqQueue() *DynamicGroupKubeMQQueueOptions {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *DynamicOptions) GetRedisPubsub() *DynamicGroupRedisPubSubOptions {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *DynamicOptions) GetRedisStreams() *DynamicGroupRedisStreamsOptions {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

func (m *DynamicOptions) GetPulsar() *DynamicGroupPulsarOptions {
	if m != nil {
		return m.Pulsar
	}
	return nil
}

func (m *DynamicOptions) GetRabbitStreams() *DynamicGroupRabbitStreamsOptions {
	if m != nil {
		return m.RabbitStreams
	}
	return nil
}

func (m *DynamicOptions) GetNatsJetstream() *DynamicGroupNatsJetstreamOptions {
	if m != nil {
		return m.NatsJetstream
	}
	return nil
}

func (m *DynamicOptions) GetAwsKinesis() *DynamicGroupAWSKinesisOptions {
	if m != nil {
		return m.AwsKinesis
	}
	return nil
}

type DynamicGroupKafkaOptions struct {
	// @gotags: kong:"embed"
	XConn *args.KafkaConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KafkaWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DynamicGroupKafkaOptions) Reset()         { *m = DynamicGroupKafkaOptions{} }
func (m *DynamicGroupKafkaOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupKafkaOptions) ProtoMessage()    {}
func (*DynamicGroupKafkaOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{1}
}

func (m *DynamicGroupKafkaOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupKafkaOptions.Unmarshal(m, b)
}
func (m *DynamicGroupKafkaOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupKafkaOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupKafkaOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupKafkaOptions.Merge(m, src)
}
func (m *DynamicGroupKafkaOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupKafkaOptions.Size(m)
}
func (m *DynamicGroupKafkaOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupKafkaOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupKafkaOptions proto.InternalMessageInfo

func (m *DynamicGroupKafkaOptions) GetXConn() *args.KafkaConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupKafkaOptions) GetArgs() *args.KafkaWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupActiveMQOptions struct {
	// @gotags: kong:"embed"
	XConn *args.ActiveMQConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.ActiveMQWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *DynamicGroupActiveMQOptions) Reset()         { *m = DynamicGroupActiveMQOptions{} }
func (m *DynamicGroupActiveMQOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupActiveMQOptions) ProtoMessage()    {}
func (*DynamicGroupActiveMQOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{2}
}

func (m *DynamicGroupActiveMQOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupActiveMQOptions.Unmarshal(m, b)
}
func (m *DynamicGroupActiveMQOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupActiveMQOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupActiveMQOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupActiveMQOptions.Merge(m, src)
}
func (m *DynamicGroupActiveMQOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupActiveMQOptions.Size(m)
}
func (m *DynamicGroupActiveMQOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupActiveMQOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupActiveMQOptions proto.InternalMessageInfo

func (m *DynamicGroupActiveMQOptions) GetXConn() *args.ActiveMQConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupActiveMQOptions) GetArgs() *args.ActiveMQWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupAWSSQSOptions struct {
	// @gotags: kong:"embed"
	XConn *args.AWSSQSConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AWSSQSWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DynamicGroupAWSSQSOptions) Reset()         { *m = DynamicGroupAWSSQSOptions{} }
func (m *DynamicGroupAWSSQSOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupAWSSQSOptions) ProtoMessage()    {}
func (*DynamicGroupAWSSQSOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{3}
}

func (m *DynamicGroupAWSSQSOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupAWSSQSOptions.Unmarshal(m, b)
}
func (m *DynamicGroupAWSSQSOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupAWSSQSOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupAWSSQSOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupAWSSQSOptions.Merge(m, src)
}
func (m *DynamicGroupAWSSQSOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupAWSSQSOptions.Size(m)
}
func (m *DynamicGroupAWSSQSOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupAWSSQSOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupAWSSQSOptions proto.InternalMessageInfo

func (m *DynamicGroupAWSSQSOptions) GetXConn() *args.AWSSQSConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupAWSSQSOptions) GetArgs() *args.AWSSQSWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupAWSSNSOptions struct {
	// @gotags: kong:"embed"
	XConn *args.AWSSNSConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AWSSNSWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DynamicGroupAWSSNSOptions) Reset()         { *m = DynamicGroupAWSSNSOptions{} }
func (m *DynamicGroupAWSSNSOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupAWSSNSOptions) ProtoMessage()    {}
func (*DynamicGroupAWSSNSOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{4}
}

func (m *DynamicGroupAWSSNSOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupAWSSNSOptions.Unmarshal(m, b)
}
func (m *DynamicGroupAWSSNSOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupAWSSNSOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupAWSSNSOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupAWSSNSOptions.Merge(m, src)
}
func (m *DynamicGroupAWSSNSOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupAWSSNSOptions.Size(m)
}
func (m *DynamicGroupAWSSNSOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupAWSSNSOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupAWSSNSOptions proto.InternalMessageInfo

func (m *DynamicGroupAWSSNSOptions) GetXConn() *args.AWSSNSConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupAWSSNSOptions) GetArgs() *args.AWSSNSWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupNatsOptions struct {
	// @gotags: kong:"embed"
	XConn *args.NatsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NatsWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DynamicGroupNatsOptions) Reset()         { *m = DynamicGroupNatsOptions{} }
func (m *DynamicGroupNatsOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupNatsOptions) ProtoMessage()    {}
func (*DynamicGroupNatsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{5}
}

func (m *DynamicGroupNatsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupNatsOptions.Unmarshal(m, b)
}
func (m *DynamicGroupNatsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupNatsOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupNatsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupNatsOptions.Merge(m, src)
}
func (m *DynamicGroupNatsOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupNatsOptions.Size(m)
}
func (m *DynamicGroupNatsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupNatsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupNatsOptions proto.InternalMessageInfo

func (m *DynamicGroupNatsOptions) GetXConn() *args.NatsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupNatsOptions) GetArgs() *args.NatsWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupNatsJetstreamOptions struct {
	// @gotags: kong:"embed"
	XConn *args.NatsJetstreamConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NatsJetstreamWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DynamicGroupNatsJetstreamOptions) Reset()         { *m = DynamicGroupNatsJetstreamOptions{} }
func (m *DynamicGroupNatsJetstreamOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupNatsJetstreamOptions) ProtoMessage()    {}
func (*DynamicGroupNatsJetstreamOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{6}
}

func (m *DynamicGroupNatsJetstreamOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupNatsJetstreamOptions.Unmarshal(m, b)
}
func (m *DynamicGroupNatsJetstreamOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupNatsJetstreamOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupNatsJetstreamOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupNatsJetstreamOptions.Merge(m, src)
}
func (m *DynamicGroupNatsJetstreamOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupNatsJetstreamOptions.Size(m)
}
func (m *DynamicGroupNatsJetstreamOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupNatsJetstreamOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupNatsJetstreamOptions proto.InternalMessageInfo

func (m *DynamicGroupNatsJetstreamOptions) GetXConn() *args.NatsJetstreamConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupNatsJetstreamOptions) GetArgs() *args.NatsJetstreamWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupNatsStreamingOptions struct {
	// @gotags: kong:"embed"
	XConn *args.NatsStreamingConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NatsStreamingWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DynamicGroupNatsStreamingOptions) Reset()         { *m = DynamicGroupNatsStreamingOptions{} }
func (m *DynamicGroupNatsStreamingOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupNatsStreamingOptions) ProtoMessage()    {}
func (*DynamicGroupNatsStreamingOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{7}
}

func (m *DynamicGroupNatsStreamingOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupNatsStreamingOptions.Unmarshal(m, b)
}
func (m *DynamicGroupNatsStreamingOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupNatsStreamingOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupNatsStreamingOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupNatsStreamingOptions.Merge(m, src)
}
func (m *DynamicGroupNatsStreamingOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupNatsStreamingOptions.Size(m)
}
func (m *DynamicGroupNatsStreamingOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupNatsStreamingOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupNatsStreamingOptions proto.InternalMessageInfo

func (m *DynamicGroupNatsStreamingOptions) GetXConn() *args.NatsStreamingConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupNatsStreamingOptions) GetArgs() *args.NatsStreamingWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupNSQOptions struct {
	// @gotags: kong:"embed"
	XConn *args.NSQConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NSQWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DynamicGroupNSQOptions) Reset()         { *m = DynamicGroupNSQOptions{} }
func (m *DynamicGroupNSQOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupNSQOptions) ProtoMessage()    {}
func (*DynamicGroupNSQOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{8}
}

func (m *DynamicGroupNSQOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupNSQOptions.Unmarshal(m, b)
}
func (m *DynamicGroupNSQOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupNSQOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupNSQOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupNSQOptions.Merge(m, src)
}
func (m *DynamicGroupNSQOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupNSQOptions.Size(m)
}
func (m *DynamicGroupNSQOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupNSQOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupNSQOptions proto.InternalMessageInfo

func (m *DynamicGroupNSQOptions) GetXConn() *args.NSQConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupNSQOptions) GetArgs() *args.NSQWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupRabbitOptions struct {
	// @gotags: kong:"embed"
	XConn *args.RabbitConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RabbitWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DynamicGroupRabbitOptions) Reset()         { *m = DynamicGroupRabbitOptions{} }
func (m *DynamicGroupRabbitOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupRabbitOptions) ProtoMessage()    {}
func (*DynamicGroupRabbitOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{9}
}

func (m *DynamicGroupRabbitOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupRabbitOptions.Unmarshal(m, b)
}
func (m *DynamicGroupRabbitOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupRabbitOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupRabbitOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupRabbitOptions.Merge(m, src)
}
func (m *DynamicGroupRabbitOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupRabbitOptions.Size(m)
}
func (m *DynamicGroupRabbitOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupRabbitOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupRabbitOptions proto.InternalMessageInfo

func (m *DynamicGroupRabbitOptions) GetXConn() *args.RabbitConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupRabbitOptions) GetArgs() *args.RabbitWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupRabbitStreamsOptions struct {
	// @gotags: kong:"embed"
	XConn *args.RabbitStreamsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RabbitStreamsWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DynamicGroupRabbitStreamsOptions) Reset()         { *m = DynamicGroupRabbitStreamsOptions{} }
func (m *DynamicGroupRabbitStreamsOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupRabbitStreamsOptions) ProtoMessage()    {}
func (*DynamicGroupRabbitStreamsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{10}
}

func (m *DynamicGroupRabbitStreamsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupRabbitStreamsOptions.Unmarshal(m, b)
}
func (m *DynamicGroupRabbitStreamsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupRabbitStreamsOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupRabbitStreamsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupRabbitStreamsOptions.Merge(m, src)
}
func (m *DynamicGroupRabbitStreamsOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupRabbitStreamsOptions.Size(m)
}
func (m *DynamicGroupRabbitStreamsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupRabbitStreamsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupRabbitStreamsOptions proto.InternalMessageInfo

func (m *DynamicGroupRabbitStreamsOptions) GetXConn() *args.RabbitStreamsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupRabbitStreamsOptions) GetArgs() *args.RabbitStreamsWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupRedisPubSubOptions struct {
	// @gotags: kong:"embed"
	XConn *args.RedisPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisPubSubWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DynamicGroupRedisPubSubOptions) Reset()         { *m = DynamicGroupRedisPubSubOptions{} }
func (m *DynamicGroupRedisPubSubOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupRedisPubSubOptions) ProtoMessage()    {}
func (*DynamicGroupRedisPubSubOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{11}
}

func (m *DynamicGroupRedisPubSubOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupRedisPubSubOptions.Unmarshal(m, b)
}
func (m *DynamicGroupRedisPubSubOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupRedisPubSubOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupRedisPubSubOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupRedisPubSubOptions.Merge(m, src)
}
func (m *DynamicGroupRedisPubSubOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupRedisPubSubOptions.Size(m)
}
func (m *DynamicGroupRedisPubSubOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupRedisPubSubOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupRedisPubSubOptions proto.InternalMessageInfo

func (m *DynamicGroupRedisPubSubOptions) GetXConn() *args.RedisPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupRedisPubSubOptions) GetArgs() *args.RedisPubSubWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupRedisStreamsOptions struct {
	// @gotags: kong:"embed"
	XConn *args.RedisStreamsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisStreamsWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DynamicGroupRedisStreamsOptions) Reset()         { *m = DynamicGroupRedisStreamsOptions{} }
func (m *DynamicGroupRedisStreamsOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupRedisStreamsOptions) ProtoMessage()    {}
func (*DynamicGroupRedisStreamsOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{12}
}

func (m *DynamicGroupRedisStreamsOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupRedisStreamsOptions.Unmarshal(m, b)
}
func (m *DynamicGroupRedisStreamsOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupRedisStreamsOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupRedisStreamsOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupRedisStreamsOptions.Merge(m, src)
}
func (m *DynamicGroupRedisStreamsOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupRedisStreamsOptions.Size(m)
}
func (m *DynamicGroupRedisStreamsOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupRedisStreamsOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupRedisStreamsOptions proto.InternalMessageInfo

func (m *DynamicGroupRedisStreamsOptions) GetXConn() *args.RedisStreamsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupRedisStreamsOptions) GetArgs() *args.RedisStreamsWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupAzureEventHubOptions struct {
	// @gotags: kong:"embed"
	XConn *args.AzureEventHubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AzureEventHubWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DynamicGroupAzureEventHubOptions) Reset()         { *m = DynamicGroupAzureEventHubOptions{} }
func (m *DynamicGroupAzureEventHubOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupAzureEventHubOptions) ProtoMessage()    {}
func (*DynamicGroupAzureEventHubOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{13}
}

func (m *DynamicGroupAzureEventHubOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupAzureEventHubOptions.Unmarshal(m, b)
}
func (m *DynamicGroupAzureEventHubOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupAzureEventHubOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupAzureEventHubOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupAzureEventHubOptions.Merge(m, src)
}
func (m *DynamicGroupAzureEventHubOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupAzureEventHubOptions.Size(m)
}
func (m *DynamicGroupAzureEventHubOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupAzureEventHubOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupAzureEventHubOptions proto.InternalMessageInfo

func (m *DynamicGroupAzureEventHubOptions) GetXConn() *args.AzureEventHubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupAzureEventHubOptions) GetArgs() *args.AzureEventHubWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupAzureServiceBusOptions struct {
	// @gotags: kong:"embed"{
	XConn *args.AzureServiceBusConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AzureServiceBusWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *DynamicGroupAzureServiceBusOptions) Reset()         { *m = DynamicGroupAzureServiceBusOptions{} }
func (m *DynamicGroupAzureServiceBusOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupAzureServiceBusOptions) ProtoMessage()    {}
func (*DynamicGroupAzureServiceBusOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{14}
}

func (m *DynamicGroupAzureServiceBusOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupAzureServiceBusOptions.Unmarshal(m, b)
}
func (m *DynamicGroupAzureServiceBusOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupAzureServiceBusOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupAzureServiceBusOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupAzureServiceBusOptions.Merge(m, src)
}
func (m *DynamicGroupAzureServiceBusOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupAzureServiceBusOptions.Size(m)
}
func (m *DynamicGroupAzureServiceBusOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupAzureServiceBusOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupAzureServiceBusOptions proto.InternalMessageInfo

func (m *DynamicGroupAzureServiceBusOptions) GetXConn() *args.AzureServiceBusConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupAzureServiceBusOptions) GetArgs() *args.AzureServiceBusWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupMQTTOptions struct {
	// @gotags: kong:"embed"
	XConn *args.MQTTConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.MQTTWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DynamicGroupMQTTOptions) Reset()         { *m = DynamicGroupMQTTOptions{} }
func (m *DynamicGroupMQTTOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupMQTTOptions) ProtoMessage()    {}
func (*DynamicGroupMQTTOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{15}
}

func (m *DynamicGroupMQTTOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupMQTTOptions.Unmarshal(m, b)
}
func (m *DynamicGroupMQTTOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupMQTTOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupMQTTOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupMQTTOptions.Merge(m, src)
}
func (m *DynamicGroupMQTTOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupMQTTOptions.Size(m)
}
func (m *DynamicGroupMQTTOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupMQTTOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupMQTTOptions proto.InternalMessageInfo

func (m *DynamicGroupMQTTOptions) GetXConn() *args.MQTTConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupMQTTOptions) GetArgs() *args.MQTTWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupGCPPubSubOptions struct {
	// @gotags: kong:"embed"
	XConn *args.GCPPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.GCPPubSubWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DynamicGroupGCPPubSubOptions) Reset()         { *m = DynamicGroupGCPPubSubOptions{} }
func (m *DynamicGroupGCPPubSubOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupGCPPubSubOptions) ProtoMessage()    {}
func (*DynamicGroupGCPPubSubOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{16}
}

func (m *DynamicGroupGCPPubSubOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupGCPPubSubOptions.Unmarshal(m, b)
}
func (m *DynamicGroupGCPPubSubOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupGCPPubSubOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupGCPPubSubOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupGCPPubSubOptions.Merge(m, src)
}
func (m *DynamicGroupGCPPubSubOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupGCPPubSubOptions.Size(m)
}
func (m *DynamicGroupGCPPubSubOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupGCPPubSubOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupGCPPubSubOptions proto.InternalMessageInfo

func (m *DynamicGroupGCPPubSubOptions) GetXConn() *args.GCPPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupGCPPubSubOptions) GetArgs() *args.GCPPubSubWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupKubeMQQueueOptions struct {
	// @gotags: kong:"embed"
	XConn *args.KubeMQQueueConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KubeMQQueueWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DynamicGroupKubeMQQueueOptions) Reset()         { *m = DynamicGroupKubeMQQueueOptions{} }
func (m *DynamicGroupKubeMQQueueOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupKubeMQQueueOptions) ProtoMessage()    {}
func (*DynamicGroupKubeMQQueueOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{17}
}

func (m *DynamicGroupKubeMQQueueOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupKubeMQQueueOptions.Unmarshal(m, b)
}
func (m *DynamicGroupKubeMQQueueOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupKubeMQQueueOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupKubeMQQueueOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupKubeMQQueueOptions.Merge(m, src)
}
func (m *DynamicGroupKubeMQQueueOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupKubeMQQueueOptions.Size(m)
}
func (m *DynamicGroupKubeMQQueueOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupKubeMQQueueOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupKubeMQQueueOptions proto.InternalMessageInfo

func (m *DynamicGroupKubeMQQueueOptions) GetXConn() *args.KubeMQQueueConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupKubeMQQueueOptions) GetArgs() *args.KubeMQQueueWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupPulsarOptions struct {
	// @gotags: kong:"embed"
	XConn *args.PulsarConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.PulsarWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DynamicGroupPulsarOptions) Reset()         { *m = DynamicGroupPulsarOptions{} }
func (m *DynamicGroupPulsarOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupPulsarOptions) ProtoMessage()    {}
func (*DynamicGroupPulsarOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{18}
}

func (m *DynamicGroupPulsarOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupPulsarOptions.Unmarshal(m, b)
}
func (m *DynamicGroupPulsarOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupPulsarOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupPulsarOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupPulsarOptions.Merge(m, src)
}
func (m *DynamicGroupPulsarOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupPulsarOptions.Size(m)
}
func (m *DynamicGroupPulsarOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupPulsarOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupPulsarOptions proto.InternalMessageInfo

func (m *DynamicGroupPulsarOptions) GetXConn() *args.PulsarConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupPulsarOptions) GetArgs() *args.PulsarWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type DynamicGroupAWSKinesisOptions struct {
	// @gotags: kong:"embed"
	XConn *args.AWSKinesisConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AWSKinesisWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *DynamicGroupAWSKinesisOptions) Reset()         { *m = DynamicGroupAWSKinesisOptions{} }
func (m *DynamicGroupAWSKinesisOptions) String() string { return proto.CompactTextString(m) }
func (*DynamicGroupAWSKinesisOptions) ProtoMessage()    {}
func (*DynamicGroupAWSKinesisOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_11709e700f0eb834, []int{19}
}

func (m *DynamicGroupAWSKinesisOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicGroupAWSKinesisOptions.Unmarshal(m, b)
}
func (m *DynamicGroupAWSKinesisOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicGroupAWSKinesisOptions.Marshal(b, m, deterministic)
}
func (m *DynamicGroupAWSKinesisOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicGroupAWSKinesisOptions.Merge(m, src)
}
func (m *DynamicGroupAWSKinesisOptions) XXX_Size() int {
	return xxx_messageInfo_DynamicGroupAWSKinesisOptions.Size(m)
}
func (m *DynamicGroupAWSKinesisOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicGroupAWSKinesisOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicGroupAWSKinesisOptions proto.InternalMessageInfo

func (m *DynamicGroupAWSKinesisOptions) GetXConn() *args.AWSKinesisConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *DynamicGroupAWSKinesisOptions) GetArgs() *args.AWSKinesisWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

func init() {
	proto.RegisterType((*DynamicOptions)(nil), "protos.opts.DynamicOptions")
	proto.RegisterType((*DynamicGroupKafkaOptions)(nil), "protos.opts.DynamicGroupKafkaOptions")
	proto.RegisterType((*DynamicGroupActiveMQOptions)(nil), "protos.opts.DynamicGroupActiveMQOptions")
	proto.RegisterType((*DynamicGroupAWSSQSOptions)(nil), "protos.opts.DynamicGroupAWSSQSOptions")
	proto.RegisterType((*DynamicGroupAWSSNSOptions)(nil), "protos.opts.DynamicGroupAWSSNSOptions")
	proto.RegisterType((*DynamicGroupNatsOptions)(nil), "protos.opts.DynamicGroupNatsOptions")
	proto.RegisterType((*DynamicGroupNatsJetstreamOptions)(nil), "protos.opts.DynamicGroupNatsJetstreamOptions")
	proto.RegisterType((*DynamicGroupNatsStreamingOptions)(nil), "protos.opts.DynamicGroupNatsStreamingOptions")
	proto.RegisterType((*DynamicGroupNSQOptions)(nil), "protos.opts.DynamicGroupNSQOptions")
	proto.RegisterType((*DynamicGroupRabbitOptions)(nil), "protos.opts.DynamicGroupRabbitOptions")
	proto.RegisterType((*DynamicGroupRabbitStreamsOptions)(nil), "protos.opts.DynamicGroupRabbitStreamsOptions")
	proto.RegisterType((*DynamicGroupRedisPubSubOptions)(nil), "protos.opts.DynamicGroupRedisPubSubOptions")
	proto.RegisterType((*DynamicGroupRedisStreamsOptions)(nil), "protos.opts.DynamicGroupRedisStreamsOptions")
	proto.RegisterType((*DynamicGroupAzureEventHubOptions)(nil), "protos.opts.DynamicGroupAzureEventHubOptions")
	proto.RegisterType((*DynamicGroupAzureServiceBusOptions)(nil), "protos.opts.DynamicGroupAzureServiceBusOptions")
	proto.RegisterType((*DynamicGroupMQTTOptions)(nil), "protos.opts.DynamicGroupMQTTOptions")
	proto.RegisterType((*DynamicGroupGCPPubSubOptions)(nil), "protos.opts.DynamicGroupGCPPubSubOptions")
	proto.RegisterType((*DynamicGroupKubeMQQueueOptions)(nil), "protos.opts.DynamicGroupKubeMQQueueOptions")
	proto.RegisterType((*DynamicGroupPulsarOptions)(nil), "protos.opts.DynamicGroupPulsarOptions")
	proto.RegisterType((*DynamicGroupAWSKinesisOptions)(nil), "protos.opts.DynamicGroupAWSKinesisOptions")
}

func init() { proto.RegisterFile("opts/ps_opts_dynamic.proto", fileDescriptor_11709e700f0eb834) }

var fileDescriptor_11709e700f0eb834 = []byte{
	// 1213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x5d, 0x4f, 0xdc, 0x46,
	0x14, 0x95, 0x1b, 0x42, 0x61, 0x16, 0x88, 0x3a, 0x6a, 0x60, 0x80, 0x00, 0x9b, 0x0d, 0xa9, 0xc8,
	0x07, 0xbb, 0x09, 0x94, 0xb6, 0x51, 0xa4, 0x56, 0x24, 0xa9, 0x48, 0x8b, 0xd8, 0xb2, 0xbb, 0x54,
	0x91, 0xda, 0x07, 0xcb, 0xf6, 0x4e, 0x16, 0x67, 0x59, 0xdb, 0x3b, 0x63, 0x43, 0x3f, 0x9e, 0x2a,
	0x55, 0xaa, 0x54, 0xa9, 0x52, 0x9f, 0xfa, 0xd0, 0x5f, 0x1b, 0xcd, 0x8c, 0x6d, 0x7c, 0xfd, 0x9d,
	0x17, 0x56, 0xdc, 0x7b, 0xce, 0xb9, 0xc7, 0x33, 0x77, 0xee, 0x0c, 0x5a, 0x73, 0x3d, 0x9f, 0x77,
	0x3c, 0xae, 0x8b, 0x5f, 0x7d, 0xf8, 0xab, 0x63, 0x4c, 0x6c, 0xab, 0xed, 0x31, 0xd7, 0x77, 0x71,
	0x43, 0xfe, 0xf0, 0xb6, 0x48, 0xad, 0xad, 0x1b, 0x6c, 0x24, 0x81, 0xe2, 0x57, 0x37, 0x2c, 0xdf,
	0xbe, 0xa4, 0x93, 0xa9, 0x42, 0xae, 0x6d, 0xc3, 0xe4, 0x6f, 0x01, 0xa3, 0x3a, 0xa7, 0xec, 0xd2,
	0xb6, 0xa8, 0x6e, 0x06, 0x3c, 0x44, 0xb5, 0x72, 0x50, 0xf4, 0x92, 0x3a, 0xbe, 0x7e, 0x1e, 0x98,
	0x21, 0x66, 0x13, 0x62, 0xae, 0xb8, 0x3e, 0xb6, 0x1d, 0xca, 0xed, 0x48, 0x63, 0x2d, 0x93, 0xe7,
	0xd3, 0x92, 0x9c, 0x13, 0xe5, 0x36, 0x40, 0x6e, 0x64, 0x79, 0xba, 0x17, 0x98, 0x3c, 0x2e, 0x4b,
	0x40, 0x7a, 0x6c, 0xbc, 0x1d, 0x1b, 0x61, 0x66, 0x0b, 0x66, 0x02, 0x93, 0x4e, 0xa6, 0xfa, 0x34,
	0xa0, 0x01, 0x0d, 0x01, 0x2b, 0x00, 0x30, 0x99, 0xfa, 0x7e, 0x6e, 0xc2, 0x31, 0xfc, 0xc8, 0xcb,
	0xdd, 0x4c, 0x42, 0x7f, 0x47, 0x7d, 0xee, 0x33, 0x6a, 0x4c, 0x8a, 0x21, 0x2a, 0x6f, 0x3b, 0xa3,
	0x10, 0xb2, 0x0c, 0x21, 0x3c, 0xda, 0x8b, 0x55, 0x10, 0xf7, 0x82, 0x0b, 0x6e, 0xb0, 0xdc, 0x14,
	0x33, 0x4c, 0xd3, 0xf6, 0x73, 0x0b, 0xaa, 0x54, 0x58, 0x92, 0xe7, 0xae, 0x04, 0xa3, 0x43, 0x9b,
	0xc3, 0x45, 0x6c, 0xe6, 0x00, 0x80, 0x44, 0xeb, 0xff, 0x05, 0xb4, 0xf4, 0x4a, 0xf5, 0xd8, 0x0f,
	0x9e, 0x6f, 0xbb, 0x0e, 0xc7, 0xeb, 0x68, 0xde, 0xf0, 0x6c, 0xdd, 0x77, 0xc7, 0xd4, 0x21, 0x5a,
	0x53, 0xdb, 0x99, 0xef, 0xcf, 0x19, 0x9e, 0x7d, 0x26, 0xfe, 0xc7, 0x2d, 0xb4, 0xa8, 0x8f, 0x98,
	0x67, 0xe9, 0xc6, 0x70, 0xc8, 0x28, 0xe7, 0xe4, 0x23, 0x09, 0x68, 0x1c, 0x31, 0xcf, 0x3a, 0x54,
	0x21, 0xfc, 0x14, 0xdd, 0x56, 0x18, 0xdf, 0x9e, 0x50, 0x37, 0xf0, 0x75, 0x4e, 0x2d, 0xd7, 0x19,
	0x72, 0x72, 0xa3, 0xa9, 0xed, 0x2c, 0xf6, 0xb1, 0xc0, 0x9e, 0xa9, 0xd4, 0x40, 0x65, 0xf0, 0x36,
	0x5a, 0x52, 0x14, 0xdb, 0xe1, 0xd4, 0x0a, 0x18, 0x25, 0x33, 0x4d, 0x6d, 0x67, 0xae, 0xbf, 0x20,
	0xb0, 0xdf, 0x85, 0x31, 0xfc, 0x1c, 0xdd, 0x94, 0x8d, 0x40, 0x86, 0x4d, 0x6d, 0xa7, 0xb1, 0x77,
	0xbf, 0x9d, 0x38, 0x0e, 0xed, 0xf0, 0x2b, 0x8e, 0x98, 0x1b, 0x78, 0xc7, 0x02, 0x15, 0x7e, 0x4f,
	0x5f, 0x71, 0xf0, 0x2b, 0x34, 0x17, 0x9d, 0x11, 0x42, 0x25, 0x7f, 0xa7, 0x90, 0x7f, 0x28, 0x81,
	0x27, 0xbd, 0x48, 0x22, 0x66, 0xe2, 0x6f, 0xd0, 0xc7, 0x61, 0x8b, 0x93, 0xb7, 0x52, 0xe4, 0xb3,
	0x62, 0x91, 0x37, 0x83, 0x41, 0x6f, 0x10, 0x49, 0xcc, 0x1a, 0x57, 0x7c, 0x30, 0xe5, 0xb1, 0x80,
	0xc3, 0xc9, 0xa8, 0x86, 0x40, 0x17, 0x0a, 0x38, 0x1c, 0x7f, 0x85, 0x66, 0x44, 0xf7, 0x91, 0x73,
	0xc9, 0xde, 0x2e, 0x64, 0x77, 0x0d, 0x9f, 0x47, 0x5c, 0xc9, 0xc0, 0x67, 0x68, 0x09, 0xf6, 0x2d,
	0xb1, 0xa5, 0xc6, 0x6e, 0xa9, 0xc6, 0x20, 0x42, 0x47, 0x62, 0x8b, 0x4e, 0x32, 0x8a, 0x0f, 0xd0,
	0x0d, 0x87, 0x4f, 0xc9, 0x3b, 0x29, 0x75, 0xaf, 0x58, 0x6a, 0x10, 0xaf, 0xa6, 0xc0, 0xe3, 0xaf,
	0xd1, 0xac, 0xea, 0x69, 0x32, 0xae, 0x58, 0x86, 0xbe, 0x84, 0xc5, 0xcb, 0xa0, 0x58, 0x62, 0x19,
	0xc4, 0xc9, 0x26, 0x17, 0x15, 0xcb, 0x70, 0xd2, 0x3b, 0x3b, 0x8b, 0x97, 0x41, 0x30, 0xf0, 0xcf,
	0xe8, 0x93, 0xcc, 0x3c, 0x24, 0x13, 0x29, 0xd3, 0x29, 0xde, 0x0b, 0xc1, 0x18, 0x28, 0xc2, 0x8b,
	0x20, 0x5e, 0xd8, 0x5b, 0x06, 0x8c, 0xe3, 0x1f, 0xd1, 0xad, 0xd4, 0x18, 0x25, 0x4e, 0xc5, 0x22,
	0x4b, 0xe9, 0x6f, 0x05, 0xfc, 0x75, 0x60, 0xc6, 0x8b, 0x6c, 0x24, 0xa3, 0xf8, 0x35, 0x42, 0xd7,
	0x13, 0x92, 0xb8, 0x52, 0xf1, 0x41, 0xa1, 0xe2, 0xd1, 0xcb, 0xd3, 0xd3, 0xc0, 0x1c, 0x5c, 0xab,
	0xcd, 0x8f, 0x2c, 0xef, 0x54, 0x72, 0x71, 0x17, 0x2d, 0x24, 0x47, 0x26, 0xf1, 0xa4, 0xd6, 0xa3,
	0xe2, 0xa3, 0x14, 0x98, 0xf4, 0xa4, 0xd7, 0x13, 0xd8, 0x48, 0xad, 0xa1, 0x04, 0x64, 0x4c, 0xe8,
	0x25, 0x07, 0x0f, 0x99, 0x56, 0xe8, 0xf5, 0x05, 0x18, 0xba, 0x6b, 0xb0, 0x30, 0x26, 0xfc, 0xf5,
	0xd0, 0x22, 0x98, 0x53, 0x84, 0x49, 0xc1, 0xc7, 0xe5, 0x82, 0xaa, 0x1d, 0xe3, 0x6d, 0x51, 0x96,
	0xc2, 0xa0, 0x68, 0x35, 0x35, 0x74, 0x09, 0xaf, 0x68, 0xb5, 0x53, 0x09, 0x8b, 0x5b, 0x4d, 0xb1,
	0xc4, 0xb9, 0x81, 0xe3, 0x97, 0xf8, 0x15, 0x5b, 0xaa, 0x5a, 0x36, 0x65, 0x6a, 0x91, 0x25, 0xa3,
	0xf1, 0x69, 0x8c, 0x2f, 0x1a, 0x12, 0xd4, 0x38, 0x8d, 0xdf, 0x47, 0x68, 0x70, 0x1a, 0xe3, 0x28,
	0x3e, 0x46, 0x8d, 0xc4, 0x15, 0x4d, 0x2e, 0xa5, 0xe4, 0xc3, 0xb2, 0x11, 0x73, 0xac, 0xa0, 0x91,
	0x1e, 0x32, 0xae, 0x78, 0x18, 0x6a, 0xfd, 0x82, 0x48, 0xd1, 0x54, 0xc5, 0x8f, 0xd0, 0x4d, 0xdd,
	0x72, 0x1d, 0x75, 0x43, 0x34, 0xf6, 0x96, 0xa3, 0x12, 0xe2, 0xa6, 0x69, 0x4b, 0xe4, 0x4b, 0xd7,
	0x71, 0xfa, 0x33, 0xe2, 0x2f, 0xee, 0xa0, 0x19, 0x11, 0x97, 0x97, 0x45, 0x63, 0x6f, 0x3d, 0x8b,
	0x7d, 0xc3, 0x6c, 0x9f, 0x1e, 0xb2, 0x11, 0xef, 0x4b, 0x60, 0xeb, 0x0f, 0x0d, 0xad, 0x97, 0x0c,
	0x64, 0xdc, 0x86, 0xd5, 0x57, 0x81, 0x62, 0x04, 0x4e, 0x18, 0xd8, 0x03, 0x06, 0x36, 0x73, 0xe1,
	0x69, 0x0f, 0xbf, 0xa3, 0xd5, 0xc2, 0x71, 0x8e, 0x1f, 0x43, 0x03, 0x2b, 0x50, 0x51, 0x42, 0x13,
	0xe5, 0x9f, 0x80, 0xf2, 0x77, 0x72, 0xc0, 0x35, 0x8a, 0x77, 0xeb, 0x17, 0xef, 0x7e, 0x48, 0xf1,
	0x6e, 0xa6, 0x78, 0x80, 0x56, 0x0a, 0x6e, 0x12, 0xfc, 0x10, 0x96, 0xbe, 0x0d, 0xd4, 0x04, 0x30,
	0x51, 0xb8, 0x0d, 0x0a, 0xaf, 0x65, 0xa0, 0xe9, 0xb2, 0xff, 0x6a, 0xa8, 0x59, 0xd5, 0xef, 0x78,
	0x1f, 0x1a, 0xd8, 0xcc, 0xa8, 0xc6, 0x8c, 0x84, 0x93, 0x2f, 0x81, 0x93, 0x7b, 0xc5, 0x9c, 0x3a,
	0x96, 0xd2, 0x17, 0x62, 0xb5, 0xa5, 0x98, 0xf1, 0x01, 0x96, 0x62, 0x4e, 0xda, 0x12, 0x43, 0xcb,
	0xf9, 0xf7, 0x2a, 0x7e, 0x00, 0x7d, 0x7c, 0x0a, 0x35, 0x07, 0xc9, 0xf3, 0xb0, 0x0b, 0xaa, 0xaf,
	0xa6, 0x91, 0x15, 0xdd, 0x08, 0x6e, 0xe4, 0xf2, 0x6e, 0x54, 0xd0, 0x9a, 0xdd, 0xa8, 0xc0, 0x55,
	0x7b, 0x90, 0x37, 0x5c, 0xcb, 0xf7, 0x00, 0x30, 0x6a, 0xee, 0x01, 0xe0, 0xa4, 0x2d, 0xfd, 0xad,
	0xa1, 0xcd, 0xf2, 0x4b, 0x0d, 0x3f, 0x85, 0x86, 0x52, 0x1f, 0x7a, 0x8d, 0x4f, 0xd8, 0x39, 0x00,
	0x76, 0xee, 0x16, 0x31, 0xd2, 0x66, 0xfe, 0xd1, 0xd0, 0x56, 0xc5, 0x85, 0x88, 0xf7, 0xa0, 0x9b,
	0x8d, 0xac, 0x76, 0x76, 0x75, 0xbe, 0x00, 0x76, 0x5a, 0x85, 0x94, 0xaa, 0xfd, 0xca, 0x7b, 0xdf,
	0x94, 0xef, 0x17, 0x60, 0xd4, 0xdc, 0x2f, 0xc0, 0x49, 0x5b, 0xfa, 0x4f, 0x43, 0xad, 0xea, 0xd7,
	0x1c, 0x3e, 0x80, 0xa6, 0x9a, 0xd9, 0x02, 0xd7, 0x9c, 0x84, 0xad, 0x67, 0xc0, 0xd6, 0xfd, 0x32,
	0x56, 0xc5, 0xa4, 0x4d, 0x3c, 0x56, 0xcb, 0x27, 0xad, 0x00, 0xd6, 0x9c, 0xb4, 0x02, 0x9a, 0x2e,
	0xfb, 0xa7, 0x86, 0xee, 0x94, 0x3d, 0x18, 0x71, 0x07, 0x16, 0x87, 0x8a, 0x31, 0x3a, 0xe1, 0x60,
	0x1f, 0x38, 0xd8, 0xca, 0xc7, 0x57, 0x1d, 0xa3, 0xec, 0x5b, 0xb3, 0xfc, 0x18, 0x25, 0xf0, 0x35,
	0x8f, 0x51, 0x82, 0x51, 0x31, 0xe3, 0xc0, 0x53, 0xb0, 0x7c, 0xc6, 0x29, 0x68, 0xcd, 0x19, 0xa7,
	0xc0, 0xe9, 0xe2, 0x7f, 0x69, 0x68, 0xa3, 0xf4, 0x5d, 0x86, 0x9f, 0x40, 0x07, 0xeb, 0xe9, 0x6b,
	0x3c, 0x84, 0x27, 0x5c, 0x7c, 0x0e, 0x5c, 0x34, 0x0b, 0x08, 0x29, 0x27, 0x2f, 0x9e, 0xff, 0xf4,
	0x6c, 0x64, 0xfb, 0xe7, 0x81, 0xd9, 0xb6, 0xdc, 0x49, 0xc7, 0x34, 0x7c, 0xeb, 0xdc, 0x72, 0x99,
	0xd7, 0xf1, 0x2e, 0x82, 0x89, 0x49, 0xd9, 0x2e, 0xb7, 0xce, 0xe9, 0xc4, 0xe0, 0x1d, 0x33, 0xb0,
	0x2f, 0x86, 0x9d, 0x91, 0xdb, 0x51, 0xb2, 0x1d, 0xf1, 0xb4, 0x34, 0x67, 0xe5, 0x3f, 0xfb, 0xef,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x9b, 0x20, 0x48, 0xc4, 0x12, 0x00, 0x00,
}
