// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ps_encoding_options.proto

package encoding

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EncodeType int32

const (
	EncodeType_ENCODE_TYPE_UNSET  EncodeType = 0
	EncodeType_ENCODE_TYPE_JSONPB EncodeType = 1
	EncodeType_ENCODE_TYPE_AVRO   EncodeType = 2
)

var EncodeType_name = map[int32]string{
	0: "ENCODE_TYPE_UNSET",
	1: "ENCODE_TYPE_JSONPB",
	2: "ENCODE_TYPE_AVRO",
}

var EncodeType_value = map[string]int32{
	"ENCODE_TYPE_UNSET":  0,
	"ENCODE_TYPE_JSONPB": 1,
	"ENCODE_TYPE_AVRO":   2,
}

func (x EncodeType) String() string {
	return proto.EnumName(EncodeType_name, int32(x))
}

func (EncodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b8f6b0c5cf15b9fa, []int{0}
}

type DecodeType int32

const (
	DecodeType_DECODE_TYPE_UNSET      DecodeType = 0
	DecodeType_DECODE_TYPE_PROTOBUF   DecodeType = 1
	DecodeType_DECODE_TYPE_AVRO       DecodeType = 2
	DecodeType_DECODE_TYPE_THRIFT     DecodeType = 3
	DecodeType_DECODE_TYPE_FLATBUFFER DecodeType = 4
)

var DecodeType_name = map[int32]string{
	0: "DECODE_TYPE_UNSET",
	1: "DECODE_TYPE_PROTOBUF",
	2: "DECODE_TYPE_AVRO",
	3: "DECODE_TYPE_THRIFT",
	4: "DECODE_TYPE_FLATBUFFER",
}

var DecodeType_value = map[string]int32{
	"DECODE_TYPE_UNSET":      0,
	"DECODE_TYPE_PROTOBUF":   1,
	"DECODE_TYPE_AVRO":       2,
	"DECODE_TYPE_THRIFT":     3,
	"DECODE_TYPE_FLATBUFFER": 4,
}

func (x DecodeType) String() string {
	return proto.EnumName(DecodeType_name, int32(x))
}

func (DecodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b8f6b0c5cf15b9fa, []int{1}
}

type ProtobufSettings struct {
	// @gotags: kong:"help='Input message(s) should be encoded with this message envelope'"
	ProtobufRootMessage string `protobuf:"bytes,1,opt,name=protobuf_root_message,json=protobufRootMessage,proto3" json:"protobuf_root_message,omitempty" kong:"help='Input message(s) should be encoded with this message envelope'"`
	// Desktop/server should not use this.
	// @gotags: kong:"help='One or more directories which contains protobuf schemas',existingdir"
	ProtobufDirs []string `protobuf:"bytes,2,rep,name=protobuf_dirs,json=protobufDirs,proto3" json:"protobuf_dirs,omitempty" kong:"help='One or more directories which contains protobuf schemas',existingdir"`
	// Directory where protos are stored (used for github import)
	// @gotags: kong:"-"
	XProtobufRootDir string `protobuf:"bytes,3,opt,name=_protobuf_root_dir,json=ProtobufRootDir,proto3" json:"_protobuf_root_dir,omitempty" kong:"-"`
	// TODO: This should probably be removed since archive should probably be
	// exposed at a higher level than inside each of the settings. ~ds 09.18.21
	// Used by server/desktop
	// @gotags: kong:"-"
	Archive []byte `protobuf:"bytes,4,opt,name=archive,proto3" json:"archive,omitempty" kong:"-"`
	// Used internally by the server
	// @gotags: kong:"-"
	XMessageDescriptor   []byte   `protobuf:"bytes,5,opt,name=_message_descriptor,json=MessageDescriptor,proto3" json:"_message_descriptor,omitempty" kong:"-"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtobufSettings) Reset()         { *m = ProtobufSettings{} }
func (m *ProtobufSettings) String() string { return proto.CompactTextString(m) }
func (*ProtobufSettings) ProtoMessage()    {}
func (*ProtobufSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8f6b0c5cf15b9fa, []int{0}
}

func (m *ProtobufSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtobufSettings.Unmarshal(m, b)
}
func (m *ProtobufSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtobufSettings.Marshal(b, m, deterministic)
}
func (m *ProtobufSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtobufSettings.Merge(m, src)
}
func (m *ProtobufSettings) XXX_Size() int {
	return xxx_messageInfo_ProtobufSettings.Size(m)
}
func (m *ProtobufSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtobufSettings.DiscardUnknown(m)
}

var xxx_messageInfo_ProtobufSettings proto.InternalMessageInfo

func (m *ProtobufSettings) GetProtobufRootMessage() string {
	if m != nil {
		return m.ProtobufRootMessage
	}
	return ""
}

func (m *ProtobufSettings) GetProtobufDirs() []string {
	if m != nil {
		return m.ProtobufDirs
	}
	return nil
}

func (m *ProtobufSettings) GetXProtobufRootDir() string {
	if m != nil {
		return m.XProtobufRootDir
	}
	return ""
}

func (m *ProtobufSettings) GetArchive() []byte {
	if m != nil {
		return m.Archive
	}
	return nil
}

func (m *ProtobufSettings) GetXMessageDescriptor() []byte {
	if m != nil {
		return m.XMessageDescriptor
	}
	return nil
}

type AvroSettings struct {
	// Used by CLI; desktop should not set/use this.
	// @gotags: kong:"help='If encode-type is set to avro, must specify avro schema file',existingfile"
	AvroSchemaFile string `protobuf:"bytes,1,opt,name=avro_schema_file,json=avroSchemaFile,proto3" json:"avro_schema_file,omitempty" kong:"help='If encode-type is set to avro, must specify avro schema file',existingfile"`
	// Used by desktop; CLI should not set/use this.
	// @gotags: kong:"-"
	Schema               []byte   `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty" kong:"-"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvroSettings) Reset()         { *m = AvroSettings{} }
func (m *AvroSettings) String() string { return proto.CompactTextString(m) }
func (*AvroSettings) ProtoMessage()    {}
func (*AvroSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8f6b0c5cf15b9fa, []int{1}
}

func (m *AvroSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvroSettings.Unmarshal(m, b)
}
func (m *AvroSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvroSettings.Marshal(b, m, deterministic)
}
func (m *AvroSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvroSettings.Merge(m, src)
}
func (m *AvroSettings) XXX_Size() int {
	return xxx_messageInfo_AvroSettings.Size(m)
}
func (m *AvroSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_AvroSettings.DiscardUnknown(m)
}

var xxx_messageInfo_AvroSettings proto.InternalMessageInfo

func (m *AvroSettings) GetAvroSchemaFile() string {
	if m != nil {
		return m.AvroSchemaFile
	}
	return ""
}

func (m *AvroSettings) GetSchema() []byte {
	if m != nil {
		return m.Schema
	}
	return nil
}

type EncodeOptions struct {
	// Use an existing schema for encoding (and ignore all other encode settings)
	// @gotags: kong:"-"
	SchemaId string `protobuf:"bytes,1,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty" kong:"-"`
	// TODO: Update kong to be able to use proto/smart enums
	// @gotags: kong:"help='Encode type (0: Unset, 1: JSONPB, 2: Avro)',default=0"
	EncodeType EncodeType `protobuf:"varint,2,opt,name=encode_type,json=encodeType,proto3,enum=protos.encoding.EncodeType" json:"encode_type,omitempty" kong:"help='Encode type (0: Unset, 1: JSONPB, 2: Avro)',default=0"`
	// @gotags: kong:"embed,group=protobuf"
	ProtobufSettings *ProtobufSettings `protobuf:"bytes,3,opt,name=protobuf_settings,json=protobufSettings,proto3" json:"protobuf_settings,omitempty" kong:"embed,group=protobuf"`
	// @gotags: kong:"embed,group=avro"
	AvroSettings         *AvroSettings `protobuf:"bytes,4,opt,name=avro_settings,json=avroSettings,proto3" json:"avro_settings,omitempty" kong:"embed,group=avro"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EncodeOptions) Reset()         { *m = EncodeOptions{} }
func (m *EncodeOptions) String() string { return proto.CompactTextString(m) }
func (*EncodeOptions) ProtoMessage()    {}
func (*EncodeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8f6b0c5cf15b9fa, []int{2}
}

func (m *EncodeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncodeOptions.Unmarshal(m, b)
}
func (m *EncodeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncodeOptions.Marshal(b, m, deterministic)
}
func (m *EncodeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncodeOptions.Merge(m, src)
}
func (m *EncodeOptions) XXX_Size() int {
	return xxx_messageInfo_EncodeOptions.Size(m)
}
func (m *EncodeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_EncodeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_EncodeOptions proto.InternalMessageInfo

func (m *EncodeOptions) GetSchemaId() string {
	if m != nil {
		return m.SchemaId
	}
	return ""
}

func (m *EncodeOptions) GetEncodeType() EncodeType {
	if m != nil {
		return m.EncodeType
	}
	return EncodeType_ENCODE_TYPE_UNSET
}

func (m *EncodeOptions) GetProtobufSettings() *ProtobufSettings {
	if m != nil {
		return m.ProtobufSettings
	}
	return nil
}

func (m *EncodeOptions) GetAvroSettings() *AvroSettings {
	if m != nil {
		return m.AvroSettings
	}
	return nil
}

type DecodeOptions struct {
	// Use an existing schema for decoding (and ignore all other decode settings)
	// @gotags: kong:"-"
	SchemaId string `protobuf:"bytes,1,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty" kong:"-"`
	// @gotags: kong:"help='Decode type (0: Unset, 1: Protobuf, 2: Avro, 3: Thrift, 4: Flatbuffer)',default=0"
	DecodeType DecodeType `protobuf:"varint,2,opt,name=decode_type,json=decodeType,proto3,enum=protos.encoding.DecodeType" json:"decode_type,omitempty" kong:"help='Decode type (0: Unset, 1: Protobuf, 2: Avro, 3: Thrift, 4: Flatbuffer)',default=0"`
	// @gotags: kong:"embed,group=protobuf"
	ProtobufSettings *ProtobufSettings `protobuf:"bytes,3,opt,name=protobuf_settings,json=protobufSettings,proto3" json:"protobuf_settings,omitempty" kong:"embed,group=protobuf"`
	// @gotags: kong:"embed,group=avro"
	AvroSettings         *AvroSettings `protobuf:"bytes,4,opt,name=avro_settings,json=avroSettings,proto3" json:"avro_settings,omitempty" kong:"embed,group=avro"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *DecodeOptions) Reset()         { *m = DecodeOptions{} }
func (m *DecodeOptions) String() string { return proto.CompactTextString(m) }
func (*DecodeOptions) ProtoMessage()    {}
func (*DecodeOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_b8f6b0c5cf15b9fa, []int{3}
}

func (m *DecodeOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecodeOptions.Unmarshal(m, b)
}
func (m *DecodeOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecodeOptions.Marshal(b, m, deterministic)
}
func (m *DecodeOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecodeOptions.Merge(m, src)
}
func (m *DecodeOptions) XXX_Size() int {
	return xxx_messageInfo_DecodeOptions.Size(m)
}
func (m *DecodeOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DecodeOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DecodeOptions proto.InternalMessageInfo

func (m *DecodeOptions) GetSchemaId() string {
	if m != nil {
		return m.SchemaId
	}
	return ""
}

func (m *DecodeOptions) GetDecodeType() DecodeType {
	if m != nil {
		return m.DecodeType
	}
	return DecodeType_DECODE_TYPE_UNSET
}

func (m *DecodeOptions) GetProtobufSettings() *ProtobufSettings {
	if m != nil {
		return m.ProtobufSettings
	}
	return nil
}

func (m *DecodeOptions) GetAvroSettings() *AvroSettings {
	if m != nil {
		return m.AvroSettings
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.encoding.EncodeType", EncodeType_name, EncodeType_value)
	proto.RegisterEnum("protos.encoding.DecodeType", DecodeType_name, DecodeType_value)
	proto.RegisterType((*ProtobufSettings)(nil), "protos.encoding.ProtobufSettings")
	proto.RegisterType((*AvroSettings)(nil), "protos.encoding.AvroSettings")
	proto.RegisterType((*EncodeOptions)(nil), "protos.encoding.EncodeOptions")
	proto.RegisterType((*DecodeOptions)(nil), "protos.encoding.DecodeOptions")
}

func init() { proto.RegisterFile("ps_encoding_options.proto", fileDescriptor_b8f6b0c5cf15b9fa) }

var fileDescriptor_b8f6b0c5cf15b9fa = []byte{
	// 519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x91, 0xdf, 0x8e, 0xd2, 0x40,
	0x14, 0x87, 0xed, 0x82, 0xab, 0x9c, 0x85, 0xdd, 0x32, 0xbb, 0x4b, 0xaa, 0x1b, 0x13, 0xc4, 0x1b,
	0xb2, 0xc6, 0x36, 0xc1, 0x5b, 0x8d, 0x01, 0xdb, 0xc6, 0x35, 0x4a, 0x6b, 0x29, 0x26, 0x7a, 0x33,
	0xe9, 0x9f, 0x59, 0x98, 0x04, 0x98, 0x66, 0xa6, 0x90, 0xec, 0x13, 0xf8, 0x9e, 0x3e, 0x88, 0x31,
	0xcc, 0xb4, 0x6c, 0x85, 0x0b, 0xe3, 0x9d, 0x57, 0x70, 0x7e, 0x67, 0xfa, 0xe5, 0x9c, 0xef, 0xc0,
	0x93, 0x4c, 0x60, 0xb2, 0x4a, 0x58, 0x4a, 0x57, 0x33, 0xcc, 0xb2, 0x9c, 0xb2, 0x95, 0x30, 0x33,
	0xce, 0x72, 0x86, 0xce, 0xe4, 0x8f, 0x30, 0xcb, 0x76, 0xef, 0xa7, 0x06, 0xba, 0xbf, 0xcd, 0xe2,
	0xf5, 0xed, 0x84, 0xe4, 0x39, 0x5d, 0xcd, 0x04, 0x1a, 0xc0, 0x65, 0x56, 0x64, 0x98, 0x33, 0x96,
	0xe3, 0x25, 0x11, 0x22, 0x9a, 0x11, 0x43, 0xeb, 0x6a, 0xfd, 0x46, 0x70, 0x5e, 0x36, 0x03, 0xc6,
	0xf2, 0xcf, 0xaa, 0x85, 0x5e, 0x40, 0x6b, 0xf7, 0x4d, 0x4a, 0xb9, 0x30, 0x8e, 0xba, 0xb5, 0x7e,
	0x23, 0x68, 0x96, 0xa1, 0x4d, 0xb9, 0x40, 0x2f, 0x01, 0xe1, 0x3f, 0xc9, 0x29, 0xe5, 0x46, 0x4d,
	0x52, 0xcf, 0xfc, 0x0a, 0xd5, 0xa6, 0x1c, 0x19, 0xf0, 0x28, 0xe2, 0xc9, 0x9c, 0x6e, 0x88, 0x51,
	0xef, 0x6a, 0xfd, 0x66, 0x50, 0x96, 0xc8, 0x84, 0xf3, 0x72, 0x24, 0x9c, 0x12, 0x91, 0x70, 0x9a,
	0xe5, 0x8c, 0x1b, 0x0f, 0xe5, 0xab, 0x76, 0x31, 0x91, 0xbd, 0x6b, 0xf4, 0x7c, 0x68, 0x0e, 0x37,
	0x9c, 0xed, 0xf6, 0xeb, 0x83, 0x1e, 0x6d, 0x38, 0xc3, 0x22, 0x99, 0x93, 0x65, 0x84, 0x6f, 0xe9,
	0xa2, 0x5c, 0xed, 0x74, 0x9b, 0x4f, 0x64, 0xec, 0xd2, 0x05, 0x41, 0x1d, 0x38, 0x56, 0x8f, 0x8c,
	0x23, 0x09, 0x2f, 0xaa, 0xde, 0x2f, 0x0d, 0x5a, 0xce, 0xd6, 0x21, 0xf1, 0x94, 0x5f, 0x74, 0x05,
	0x8d, 0x02, 0x47, 0xd3, 0x02, 0xf6, 0x58, 0x05, 0x37, 0x29, 0x7a, 0x03, 0x27, 0xd2, 0x38, 0xc1,
	0xf9, 0x5d, 0x46, 0x24, 0xeb, 0x74, 0x70, 0x65, 0xee, 0x1d, 0xc3, 0x54, 0xc4, 0xf0, 0x2e, 0x23,
	0x01, 0x90, 0xdd, 0x7f, 0x34, 0x86, 0xf6, 0x4e, 0x9a, 0x28, 0x76, 0x90, 0xd2, 0x4e, 0x06, 0xcf,
	0x0f, 0x18, 0xfb, 0xc7, 0x0c, 0xf4, 0x6c, 0xff, 0xbc, 0x23, 0x68, 0xa9, 0xf5, 0x4b, 0x56, 0x5d,
	0xb2, 0x9e, 0x1d, 0xb0, 0xaa, 0xd2, 0x82, 0x66, 0x54, 0xa9, 0xa4, 0x00, 0x9b, 0xfc, 0x8b, 0x80,
	0x94, 0xfc, 0x5d, 0x80, 0x22, 0x2a, 0x01, 0x29, 0xf9, 0x9f, 0x05, 0x5c, 0x7f, 0x01, 0xb8, 0x3f,
	0x17, 0xba, 0x84, 0xb6, 0x33, 0x7e, 0xef, 0xd9, 0x0e, 0x0e, 0xbf, 0xf9, 0x0e, 0x9e, 0x8e, 0x27,
	0x4e, 0xa8, 0x3f, 0x40, 0x1d, 0x40, 0xd5, 0xf8, 0xe3, 0xc4, 0x1b, 0xfb, 0x23, 0x5d, 0x43, 0x17,
	0xa0, 0x57, 0xf3, 0xe1, 0xd7, 0xc0, 0xd3, 0x8f, 0xae, 0x7f, 0x68, 0x00, 0xf7, 0x06, 0xb6, 0x4c,
	0xdb, 0x39, 0x64, 0x1a, 0x70, 0x51, 0x8d, 0xfd, 0xc0, 0x0b, 0xbd, 0xd1, 0xd4, 0x55, 0xd4, 0x6a,
	0x47, 0x51, 0xb7, 0x33, 0x54, 0xd3, 0xf0, 0x43, 0x70, 0xe3, 0x86, 0x7a, 0x0d, 0x3d, 0x85, 0x4e,
	0x35, 0x77, 0x3f, 0x0d, 0xc3, 0xd1, 0xd4, 0x75, 0x9d, 0x40, 0xaf, 0x8f, 0xde, 0x7d, 0x7f, 0x3b,
	0xa3, 0xf9, 0x7c, 0x1d, 0x9b, 0x09, 0x5b, 0x5a, 0x71, 0x94, 0x27, 0xf3, 0x84, 0xf1, 0xcc, 0xca,
	0x16, 0xeb, 0x65, 0x4c, 0xf8, 0x2b, 0x75, 0x57, 0x61, 0xc5, 0x6b, 0xba, 0x48, 0xad, 0x19, 0xb3,
	0x94, 0x38, 0xab, 0x14, 0x17, 0x1f, 0xcb, 0xe0, 0xf5, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x22,
	0x8b, 0x7e, 0x9c, 0x8b, 0x04, 0x00, 0x00,
}
