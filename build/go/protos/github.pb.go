// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.proto

package protos

import (
	fmt "fmt"
	common "github.com/batchcorp/plumber-schemas/build/go/protos/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PollGithubAuthResponse_Status int32

const (
	PollGithubAuthResponse_PENDING PollGithubAuthResponse_Status = 0
	PollGithubAuthResponse_SUCCESS PollGithubAuthResponse_Status = 1
	PollGithubAuthResponse_FAILED  PollGithubAuthResponse_Status = 2
)

var PollGithubAuthResponse_Status_name = map[int32]string{
	0: "PENDING",
	1: "SUCCESS",
	2: "FAILED",
}

var PollGithubAuthResponse_Status_value = map[string]int32{
	"PENDING": 0,
	"SUCCESS": 1,
	"FAILED":  2,
}

func (x PollGithubAuthResponse_Status) String() string {
	return proto.EnumName(PollGithubAuthResponse_Status_name, int32(x))
}

func (PollGithubAuthResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7664b366d7fb87ed, []int{3, 0}
}

type StartGithubAuthRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StartGithubAuthRequest) Reset()         { *m = StartGithubAuthRequest{} }
func (m *StartGithubAuthRequest) String() string { return proto.CompactTextString(m) }
func (*StartGithubAuthRequest) ProtoMessage()    {}
func (*StartGithubAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7664b366d7fb87ed, []int{0}
}

func (m *StartGithubAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartGithubAuthRequest.Unmarshal(m, b)
}
func (m *StartGithubAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartGithubAuthRequest.Marshal(b, m, deterministic)
}
func (m *StartGithubAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartGithubAuthRequest.Merge(m, src)
}
func (m *StartGithubAuthRequest) XXX_Size() int {
	return xxx_messageInfo_StartGithubAuthRequest.Size(m)
}
func (m *StartGithubAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartGithubAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartGithubAuthRequest proto.InternalMessageInfo

func (m *StartGithubAuthRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type StartGithubAuthResponse struct {
	// Authorization code that the user needs to enter on github's website
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// URL that the user needs to visit to enter the code
	VerificationUrl string `protobuf:"bytes,2,opt,name=verification_url,json=verificationUrl,proto3" json:"verification_url,omitempty"`
	// Time deadline by which the user must enter the code before a new one must
	// be generated
	EnterBefore          string   `protobuf:"bytes,3,opt,name=enter_before,json=enterBefore,proto3" json:"enter_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartGithubAuthResponse) Reset()         { *m = StartGithubAuthResponse{} }
func (m *StartGithubAuthResponse) String() string { return proto.CompactTextString(m) }
func (*StartGithubAuthResponse) ProtoMessage()    {}
func (*StartGithubAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7664b366d7fb87ed, []int{1}
}

func (m *StartGithubAuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartGithubAuthResponse.Unmarshal(m, b)
}
func (m *StartGithubAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartGithubAuthResponse.Marshal(b, m, deterministic)
}
func (m *StartGithubAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartGithubAuthResponse.Merge(m, src)
}
func (m *StartGithubAuthResponse) XXX_Size() int {
	return xxx_messageInfo_StartGithubAuthResponse.Size(m)
}
func (m *StartGithubAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartGithubAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartGithubAuthResponse proto.InternalMessageInfo

func (m *StartGithubAuthResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *StartGithubAuthResponse) GetVerificationUrl() string {
	if m != nil {
		return m.VerificationUrl
	}
	return ""
}

func (m *StartGithubAuthResponse) GetEnterBefore() string {
	if m != nil {
		return m.EnterBefore
	}
	return ""
}

type PollGithubAuthRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PollGithubAuthRequest) Reset()         { *m = PollGithubAuthRequest{} }
func (m *PollGithubAuthRequest) String() string { return proto.CompactTextString(m) }
func (*PollGithubAuthRequest) ProtoMessage()    {}
func (*PollGithubAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7664b366d7fb87ed, []int{2}
}

func (m *PollGithubAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollGithubAuthRequest.Unmarshal(m, b)
}
func (m *PollGithubAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollGithubAuthRequest.Marshal(b, m, deterministic)
}
func (m *PollGithubAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollGithubAuthRequest.Merge(m, src)
}
func (m *PollGithubAuthRequest) XXX_Size() int {
	return xxx_messageInfo_PollGithubAuthRequest.Size(m)
}
func (m *PollGithubAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PollGithubAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PollGithubAuthRequest proto.InternalMessageInfo

func (m *PollGithubAuthRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type PollGithubAuthResponse struct {
	Status               PollGithubAuthResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=protos.PollGithubAuthResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *PollGithubAuthResponse) Reset()         { *m = PollGithubAuthResponse{} }
func (m *PollGithubAuthResponse) String() string { return proto.CompactTextString(m) }
func (*PollGithubAuthResponse) ProtoMessage()    {}
func (*PollGithubAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7664b366d7fb87ed, []int{3}
}

func (m *PollGithubAuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollGithubAuthResponse.Unmarshal(m, b)
}
func (m *PollGithubAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollGithubAuthResponse.Marshal(b, m, deterministic)
}
func (m *PollGithubAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollGithubAuthResponse.Merge(m, src)
}
func (m *PollGithubAuthResponse) XXX_Size() int {
	return xxx_messageInfo_PollGithubAuthResponse.Size(m)
}
func (m *PollGithubAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PollGithubAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PollGithubAuthResponse proto.InternalMessageInfo

func (m *PollGithubAuthResponse) GetStatus() PollGithubAuthResponse_Status {
	if m != nil {
		return m.Status
	}
	return PollGithubAuthResponse_PENDING
}

type IsGithubAuthRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *IsGithubAuthRequest) Reset()         { *m = IsGithubAuthRequest{} }
func (m *IsGithubAuthRequest) String() string { return proto.CompactTextString(m) }
func (*IsGithubAuthRequest) ProtoMessage()    {}
func (*IsGithubAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7664b366d7fb87ed, []int{4}
}

func (m *IsGithubAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsGithubAuthRequest.Unmarshal(m, b)
}
func (m *IsGithubAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsGithubAuthRequest.Marshal(b, m, deterministic)
}
func (m *IsGithubAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsGithubAuthRequest.Merge(m, src)
}
func (m *IsGithubAuthRequest) XXX_Size() int {
	return xxx_messageInfo_IsGithubAuthRequest.Size(m)
}
func (m *IsGithubAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IsGithubAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IsGithubAuthRequest proto.InternalMessageInfo

func (m *IsGithubAuthRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type IsGithubAuthResponse struct {
	Authorized           bool     `protobuf:"varint,1,opt,name=authorized,proto3" json:"authorized,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsGithubAuthResponse) Reset()         { *m = IsGithubAuthResponse{} }
func (m *IsGithubAuthResponse) String() string { return proto.CompactTextString(m) }
func (*IsGithubAuthResponse) ProtoMessage()    {}
func (*IsGithubAuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7664b366d7fb87ed, []int{5}
}

func (m *IsGithubAuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsGithubAuthResponse.Unmarshal(m, b)
}
func (m *IsGithubAuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsGithubAuthResponse.Marshal(b, m, deterministic)
}
func (m *IsGithubAuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsGithubAuthResponse.Merge(m, src)
}
func (m *IsGithubAuthResponse) XXX_Size() int {
	return xxx_messageInfo_IsGithubAuthResponse.Size(m)
}
func (m *IsGithubAuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsGithubAuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsGithubAuthResponse proto.InternalMessageInfo

func (m *IsGithubAuthResponse) GetAuthorized() bool {
	if m != nil {
		return m.Authorized
	}
	return false
}

func init() {
	proto.RegisterEnum("protos.PollGithubAuthResponse_Status", PollGithubAuthResponse_Status_name, PollGithubAuthResponse_Status_value)
	proto.RegisterType((*StartGithubAuthRequest)(nil), "protos.StartGithubAuthRequest")
	proto.RegisterType((*StartGithubAuthResponse)(nil), "protos.StartGithubAuthResponse")
	proto.RegisterType((*PollGithubAuthRequest)(nil), "protos.PollGithubAuthRequest")
	proto.RegisterType((*PollGithubAuthResponse)(nil), "protos.PollGithubAuthResponse")
	proto.RegisterType((*IsGithubAuthRequest)(nil), "protos.IsGithubAuthRequest")
	proto.RegisterType((*IsGithubAuthResponse)(nil), "protos.IsGithubAuthResponse")
}

func init() { proto.RegisterFile("github.proto", fileDescriptor_7664b366d7fb87ed) }

var fileDescriptor_7664b366d7fb87ed = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x4b, 0x4b, 0xc3, 0x40,
	0x14, 0x85, 0x4d, 0x2d, 0x51, 0x6f, 0x8b, 0xc6, 0xa9, 0xd6, 0xe0, 0x42, 0x6a, 0x40, 0xa8, 0x0b,
	0x13, 0xa8, 0xd2, 0x9d, 0x48, 0x5f, 0x96, 0x82, 0x94, 0x92, 0xd0, 0x8d, 0x9b, 0x92, 0x4c, 0xa7,
	0x4d, 0x20, 0xc9, 0xc4, 0x79, 0xb8, 0xd0, 0x1f, 0xe0, 0xd2, 0xbf, 0x2c, 0x99, 0x44, 0xa8, 0x8f,
	0x5d, 0x57, 0xc9, 0x9c, 0xfb, 0xdd, 0xc3, 0x39, 0x70, 0xa1, 0xbe, 0x8e, 0x44, 0x28, 0x03, 0x3b,
	0x63, 0x54, 0x50, 0xa4, 0xab, 0x0f, 0x3f, 0x3f, 0xc6, 0x34, 0x49, 0x68, 0xea, 0xf8, 0x52, 0x84,
	0xc5, 0xc8, 0xea, 0x43, 0xd3, 0x13, 0x3e, 0x13, 0x63, 0xc5, 0xf7, 0xa4, 0x08, 0x5d, 0xf2, 0x22,
	0x09, 0x17, 0xa8, 0x0d, 0xd5, 0x9c, 0x33, 0x3f, 0xa7, 0x2d, 0xad, 0x5d, 0xeb, 0x34, 0x8a, 0x05,
	0x6e, 0x17, 0x1e, 0xb6, 0x42, 0x15, 0x61, 0xbd, 0xc3, 0xd9, 0x1f, 0x0f, 0x9e, 0xd1, 0x94, 0x13,
	0x84, 0xa0, 0x8a, 0xe9, 0x92, 0x98, 0x5a, 0x4b, 0x6b, 0x1f, 0xb8, 0xea, 0x1f, 0x5d, 0x83, 0xf1,
	0x4a, 0x58, 0xb4, 0x8a, 0xb0, 0x2f, 0x22, 0x9a, 0x2e, 0x24, 0x8b, 0xcd, 0x8a, 0x9a, 0x1f, 0x6d,
	0xea, 0x73, 0x16, 0xa3, 0x4b, 0xa8, 0x93, 0x54, 0x10, 0xb6, 0x08, 0xc8, 0x8a, 0x32, 0x62, 0xee,
	0x2a, 0xac, 0xa6, 0xb4, 0xbe, 0x92, 0xac, 0x1e, 0x9c, 0xce, 0x68, 0x1c, 0x6f, 0x93, 0xff, 0x43,
	0x83, 0xe6, 0x6f, 0x8f, 0x32, 0xff, 0x3d, 0xe8, 0x5c, 0xf8, 0x42, 0x72, 0xd5, 0xe0, 0xb0, 0x73,
	0xf5, 0xed, 0xf2, 0x3f, 0x6f, 0x7b, 0x0a, 0x76, 0xcb, 0x25, 0xcb, 0x06, 0xbd, 0x50, 0x50, 0x0d,
	0xf6, 0x66, 0xa3, 0xe9, 0x70, 0x32, 0x1d, 0x1b, 0x3b, 0xf9, 0xc3, 0x9b, 0x0f, 0x06, 0x23, 0xcf,
	0x33, 0x34, 0x04, 0xa0, 0x3f, 0xf6, 0x26, 0x4f, 0xa3, 0xa1, 0x51, 0xb1, 0x1e, 0xa0, 0x31, 0xe1,
	0xdb, 0x54, 0xe9, 0xc2, 0xc9, 0x4f, 0x83, 0xb2, 0xc7, 0x05, 0x40, 0x3e, 0xa7, 0x2c, 0x7a, 0x23,
	0x4b, 0xd5, 0x65, 0xdf, 0xdd, 0x50, 0xfa, 0xdd, 0xe7, 0xbb, 0xf2, 0x62, 0x30, 0x4d, 0x9c, 0xc0,
	0x17, 0x38, 0xc4, 0x94, 0x65, 0x4e, 0x16, 0xcb, 0x24, 0x20, 0xec, 0x86, 0xe3, 0x90, 0x24, 0x3e,
	0x77, 0x02, 0x19, 0xc5, 0x4b, 0x67, 0x4d, 0x9d, 0x22, 0x41, 0x50, 0x5c, 0xd6, 0xed, 0x57, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x87, 0xf9, 0xfb, 0xb0, 0x70, 0x02, 0x00, 0x00,
}
