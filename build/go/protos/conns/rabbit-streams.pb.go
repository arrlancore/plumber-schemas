// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rabbit-streams.proto

package conns

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RabbitStreams struct {
	// Required
	// DSN used to connect to rabbitmq. Ex: rabbitmq-stream://localhost:5552
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Connect over TLS
	UseTls bool `protobuf:"varint,2,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	// Specify to not verify server's TLS certificate
	InsecureTls bool `protobuf:"varint,3,opt,name=insecure_tls,json=insecureTls,proto3" json:"insecure_tls,omitempty"`
	// Required
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	// Required
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	// Required
	ClientName           string   `protobuf:"bytes,6,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RabbitStreams) Reset()         { *m = RabbitStreams{} }
func (m *RabbitStreams) String() string { return proto.CompactTextString(m) }
func (*RabbitStreams) ProtoMessage()    {}
func (*RabbitStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f92fc7a2c25d9d7, []int{0}
}

func (m *RabbitStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RabbitStreams.Unmarshal(m, b)
}
func (m *RabbitStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RabbitStreams.Marshal(b, m, deterministic)
}
func (m *RabbitStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RabbitStreams.Merge(m, src)
}
func (m *RabbitStreams) XXX_Size() int {
	return xxx_messageInfo_RabbitStreams.Size(m)
}
func (m *RabbitStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_RabbitStreams.DiscardUnknown(m)
}

var xxx_messageInfo_RabbitStreams proto.InternalMessageInfo

func (m *RabbitStreams) GetDsn() string {
	if m != nil {
		return m.Dsn
	}
	return ""
}

func (m *RabbitStreams) GetUseTls() bool {
	if m != nil {
		return m.UseTls
	}
	return false
}

func (m *RabbitStreams) GetInsecureTls() bool {
	if m != nil {
		return m.InsecureTls
	}
	return false
}

func (m *RabbitStreams) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RabbitStreams) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RabbitStreams) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func init() {
	proto.RegisterType((*RabbitStreams)(nil), "protos.conns.RabbitStreams")
}

func init() { proto.RegisterFile("rabbit-streams.proto", fileDescriptor_1f92fc7a2c25d9d7) }

var fileDescriptor_1f92fc7a2c25d9d7 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0x3f, 0x4b, 0x04, 0x31,
	0x10, 0xc5, 0x59, 0x4f, 0xd7, 0x33, 0x77, 0x82, 0x04, 0xc1, 0xc5, 0xc6, 0xd3, 0xea, 0x9a, 0xdb,
	0x14, 0x76, 0x62, 0xe5, 0x07, 0xb0, 0x58, 0xad, 0x6c, 0x8e, 0x24, 0x3b, 0xdc, 0x06, 0xf2, 0x8f,
	0x4c, 0x82, 0xdf, 0xcc, 0xcf, 0x27, 0x3b, 0x61, 0xaf, 0x9a, 0x79, 0xef, 0xf7, 0x66, 0xe0, 0xb1,
	0xfb, 0x24, 0x95, 0x32, 0xf9, 0x80, 0x39, 0x81, 0x74, 0xd8, 0xc7, 0x14, 0x72, 0xe0, 0x5b, 0x1a,
	0xd8, 0xeb, 0xe0, 0x3d, 0xbe, 0xfc, 0x35, 0xec, 0x76, 0xa0, 0xd8, 0x57, 0x4d, 0xf1, 0x3b, 0xb6,
	0x1a, 0xd1, 0x77, 0xcd, 0xae, 0xd9, 0xdf, 0x0c, 0xf3, 0xca, 0x1f, 0xd8, 0x75, 0x41, 0x38, 0x66,
	0x8b, 0xdd, 0xc5, 0xae, 0xd9, 0xaf, 0x87, 0xb6, 0x20, 0x7c, 0x5b, 0xe4, 0xcf, 0x6c, 0x6b, 0x3c,
	0x82, 0x2e, 0xa9, 0xd2, 0x15, 0xd1, 0xcd, 0xe2, 0xcd, 0x91, 0x47, 0xb6, 0x2e, 0x08, 0xc9, 0x4b,
	0x07, 0xdd, 0x25, 0xbd, 0x3c, 0xeb, 0x99, 0x45, 0x89, 0xf8, 0x1b, 0xd2, 0xd8, 0x5d, 0x55, 0xb6,
	0x68, 0xfe, 0xc4, 0x36, 0xda, 0x1a, 0xf0, 0xf9, 0x48, 0xa7, 0x2d, 0x61, 0x56, 0xad, 0x4f, 0xe9,
	0xe0, 0xe3, 0xfd, 0xe7, 0xed, 0x64, 0xf2, 0x54, 0x54, 0xaf, 0x83, 0x13, 0x4a, 0x66, 0x3d, 0xe9,
	0x90, 0xa2, 0x88, 0xb6, 0x38, 0x05, 0xe9, 0x80, 0x7a, 0x02, 0x27, 0x51, 0xa8, 0x62, 0xec, 0x28,
	0x4e, 0x41, 0xd4, 0xda, 0x82, 0x6a, 0xab, 0x96, 0xd4, 0xeb, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xbd, 0xfd, 0x92, 0x9a, 0x23, 0x01, 0x00, 0x00,
}
