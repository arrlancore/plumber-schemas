// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pulsar.proto

package conns

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Pulsar struct {
	// Required
	// Full DSN to connect to Pulsar. Ex: pulsar://localhost:6650
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Optional
	// Default: 10s
	ConnectTimeout string `protobuf:"bytes,2,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	// Specify to not verify server's TLS certificate
	InsecureTls bool `protobuf:"varint,3,opt,name=insecure_tls,json=insecureTls,proto3" json:"insecure_tls,omitempty"`
	// Optional
	TlsClientCert []byte `protobuf:"bytes,4,opt,name=tls_client_cert,json=tlsClientCert,proto3" json:"tls_client_cert,omitempty"`
	// Optional
	TlsClientKey         []byte   `protobuf:"bytes,5,opt,name=tls_client_key,json=tlsClientKey,proto3" json:"tls_client_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pulsar) Reset()         { *m = Pulsar{} }
func (m *Pulsar) String() string { return proto.CompactTextString(m) }
func (*Pulsar) ProtoMessage()    {}
func (*Pulsar) Descriptor() ([]byte, []int) {
	return fileDescriptor_ffc7a491d9398c1a, []int{0}
}

func (m *Pulsar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pulsar.Unmarshal(m, b)
}
func (m *Pulsar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pulsar.Marshal(b, m, deterministic)
}
func (m *Pulsar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pulsar.Merge(m, src)
}
func (m *Pulsar) XXX_Size() int {
	return xxx_messageInfo_Pulsar.Size(m)
}
func (m *Pulsar) XXX_DiscardUnknown() {
	xxx_messageInfo_Pulsar.DiscardUnknown(m)
}

var xxx_messageInfo_Pulsar proto.InternalMessageInfo

func (m *Pulsar) GetDsn() string {
	if m != nil {
		return m.Dsn
	}
	return ""
}

func (m *Pulsar) GetConnectTimeout() string {
	if m != nil {
		return m.ConnectTimeout
	}
	return ""
}

func (m *Pulsar) GetInsecureTls() bool {
	if m != nil {
		return m.InsecureTls
	}
	return false
}

func (m *Pulsar) GetTlsClientCert() []byte {
	if m != nil {
		return m.TlsClientCert
	}
	return nil
}

func (m *Pulsar) GetTlsClientKey() []byte {
	if m != nil {
		return m.TlsClientKey
	}
	return nil
}

func init() {
	proto.RegisterType((*Pulsar)(nil), "protos.conns.Pulsar")
}

func init() { proto.RegisterFile("pulsar.proto", fileDescriptor_ffc7a491d9398c1a) }

var fileDescriptor_ffc7a491d9398c1a = []byte{
	// 231 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x65, 0x0a, 0x15, 0x18, 0xd3, 0x22, 0x4f, 0x1e, 0x03, 0x42, 0x90, 0x85, 0x78, 0x60,
	0x43, 0x4c, 0x74, 0x64, 0x41, 0x51, 0x27, 0x96, 0x28, 0x76, 0x4f, 0x8d, 0x85, 0x63, 0x47, 0xbe,
	0xf3, 0xd0, 0xff, 0xc5, 0x0f, 0x44, 0x75, 0x00, 0x31, 0xdd, 0xbd, 0xef, 0x7d, 0xcb, 0xe3, 0x62,
	0xca, 0x1e, 0xfb, 0xd4, 0x4c, 0x29, 0x52, 0x94, 0xa2, 0x1c, 0x6c, 0x6c, 0x0c, 0x01, 0x6f, 0xbf,
	0x18, 0x5f, 0xbe, 0x97, 0x5a, 0x5e, 0xf3, 0xc5, 0x0e, 0x83, 0x62, 0x15, 0xab, 0x2f, 0xda, 0xe3,
	0x2b, 0x1f, 0xf8, 0xfa, 0x68, 0x81, 0xa5, 0x8e, 0xdc, 0x08, 0x31, 0x93, 0x3a, 0x29, 0xed, 0xea,
	0x07, 0x6f, 0x67, 0x2a, 0x6f, 0xb8, 0x70, 0x01, 0xc1, 0xe6, 0x04, 0x1d, 0x79, 0x54, 0x8b, 0x8a,
	0xd5, 0xe7, 0xed, 0xe5, 0x2f, 0xdb, 0x7a, 0x94, 0xf7, 0x7c, 0x4d, 0x1e, 0x3b, 0xeb, 0x1d, 0x04,
	0xea, 0x2c, 0x24, 0x52, 0xa7, 0x15, 0xab, 0x45, 0x7b, 0x45, 0x1e, 0x37, 0x85, 0x6e, 0x20, 0x91,
	0xbc, 0xe3, 0xab, 0x7f, 0xde, 0x27, 0x1c, 0xd4, 0x59, 0xd1, 0xc4, 0x9f, 0xf6, 0x06, 0x87, 0xd7,
	0x97, 0x8f, 0xe7, 0xbd, 0xa3, 0x21, 0x9b, 0xc6, 0xc6, 0x51, 0x9b, 0x9e, 0xec, 0x60, 0x63, 0x9a,
	0xf4, 0xe4, 0xf3, 0x68, 0x20, 0x3d, 0xa2, 0x1d, 0x60, 0xec, 0x51, 0x9b, 0xec, 0xfc, 0x4e, 0xef,
	0xa3, 0x9e, 0x47, 0xeb, 0x32, 0xda, 0x2c, 0x4b, 0x7a, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xa3,
	0xf3, 0x16, 0x8d, 0x19, 0x01, 0x00, 0x00,
}
