// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nats.proto

package conns

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Nats struct {
	// Required
	// Full DNS to connect to NATS. Ex: tls://localhost:4222
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Specify to not verify server's TLS certificate
	InsecureTls bool `protobuf:"varint,2,opt,name=insecure_tls,json=insecureTls,proto3" json:"insecure_tls,omitempty"`
	// Optional
	TlsCaCert []byte `protobuf:"bytes,3,opt,name=tls_ca_cert,json=tlsCaCert,proto3" json:"tls_ca_cert,omitempty"`
	// Optional
	TlsClientCert []byte `protobuf:"bytes,4,opt,name=tls_client_cert,json=tlsClientCert,proto3" json:"tls_client_cert,omitempty"`
	// Optional
	TlsClientKey []byte `protobuf:"bytes,5,opt,name=tls_client_key,json=tlsClientKey,proto3" json:"tls_client_key,omitempty"`
	// Optional
	UserCredentials      []byte   `protobuf:"bytes,6,opt,name=user_credentials,json=userCredentials,proto3" json:"user_credentials,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nats) Reset()         { *m = Nats{} }
func (m *Nats) String() string { return proto.CompactTextString(m) }
func (*Nats) ProtoMessage()    {}
func (*Nats) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cc83ab78dc78ae1, []int{0}
}

func (m *Nats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nats.Unmarshal(m, b)
}
func (m *Nats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nats.Marshal(b, m, deterministic)
}
func (m *Nats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nats.Merge(m, src)
}
func (m *Nats) XXX_Size() int {
	return xxx_messageInfo_Nats.Size(m)
}
func (m *Nats) XXX_DiscardUnknown() {
	xxx_messageInfo_Nats.DiscardUnknown(m)
}

var xxx_messageInfo_Nats proto.InternalMessageInfo

func (m *Nats) GetDsn() string {
	if m != nil {
		return m.Dsn
	}
	return ""
}

func (m *Nats) GetInsecureTls() bool {
	if m != nil {
		return m.InsecureTls
	}
	return false
}

func (m *Nats) GetTlsCaCert() []byte {
	if m != nil {
		return m.TlsCaCert
	}
	return nil
}

func (m *Nats) GetTlsClientCert() []byte {
	if m != nil {
		return m.TlsClientCert
	}
	return nil
}

func (m *Nats) GetTlsClientKey() []byte {
	if m != nil {
		return m.TlsClientKey
	}
	return nil
}

func (m *Nats) GetUserCredentials() []byte {
	if m != nil {
		return m.UserCredentials
	}
	return nil
}

func init() {
	proto.RegisterType((*Nats)(nil), "protos.conns.Nats")
}

func init() { proto.RegisterFile("nats.proto", fileDescriptor_5cc83ab78dc78ae1) }

var fileDescriptor_5cc83ab78dc78ae1 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xd0, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0xc6, 0x71, 0x85, 0x96, 0x8a, 0xba, 0x81, 0x56, 0x9e, 0x32, 0xa1, 0x80, 0x10, 0x0a, 0x03,
	0xf1, 0xc0, 0x86, 0x98, 0xc8, 0x88, 0xc4, 0x10, 0x31, 0xb1, 0x44, 0xb6, 0x73, 0x6a, 0x2c, 0x1c,
	0x3b, 0xf2, 0x9d, 0x87, 0xbe, 0x27, 0x0f, 0x84, 0xe2, 0x0a, 0xe8, 0x64, 0xfb, 0xef, 0xdf, 0xf4,
	0x31, 0xe6, 0x24, 0x61, 0x3d, 0x05, 0x4f, 0x9e, 0xe7, 0xe9, 0xc0, 0x5a, 0x7b, 0xe7, 0xf0, 0xf6,
	0x3b, 0x63, 0xcb, 0x77, 0x49, 0xc8, 0x77, 0x6c, 0xd1, 0xa3, 0x2b, 0xb2, 0x32, 0xab, 0xd6, 0xed,
	0x7c, 0xe5, 0x37, 0x2c, 0x37, 0x0e, 0x41, 0xc7, 0x00, 0x1d, 0x59, 0x2c, 0xce, 0xca, 0xac, 0xba,
	0x68, 0x37, 0xbf, 0xed, 0xc3, 0x22, 0xbf, 0x66, 0x1b, 0xb2, 0xd8, 0x69, 0xd9, 0x69, 0x08, 0x54,
	0x2c, 0xca, 0xac, 0xca, 0xdb, 0x35, 0x59, 0x6c, 0x64, 0x03, 0x81, 0xf8, 0x3d, 0xdb, 0xa6, 0x7f,
	0x6b, 0xc0, 0xd1, 0xd1, 0x2c, 0x93, 0xb9, 0x9c, 0x4d, 0xaa, 0xc9, 0xdd, 0xb1, 0xab, 0x13, 0xf7,
	0x05, 0x87, 0xe2, 0x3c, 0xb1, 0xfc, 0x8f, 0xbd, 0xc1, 0x81, 0x3f, 0xb0, 0x5d, 0x44, 0x08, 0x9d,
	0x0e, 0xd0, 0x83, 0x23, 0x23, 0x2d, 0x16, 0xab, 0xe4, 0xb6, 0x73, 0x6f, 0xfe, 0xf3, 0xeb, 0xcb,
	0xe7, 0xf3, 0xde, 0xd0, 0x10, 0x55, 0xad, 0xfd, 0x28, 0x94, 0x24, 0x3d, 0x68, 0x1f, 0x26, 0x31,
	0xd9, 0x38, 0x2a, 0x08, 0x8f, 0xa8, 0x07, 0x18, 0x25, 0x0a, 0x15, 0x8d, 0xed, 0xc5, 0xde, 0x8b,
	0xe3, 0x28, 0x22, 0x8d, 0xa2, 0x56, 0xe9, 0xf5, 0xf4, 0x13, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x01,
	0xb2, 0x29, 0x37, 0x01, 0x00, 0x00,
}
