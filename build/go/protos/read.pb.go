// Code generated by protoc-gen-go. DO NOT EDIT.
// source: read.proto

package protos

import (
	fmt "fmt"
	common "github.com/batchcorp/plumber-schemas/build/go/protos/common"
	encoding "github.com/batchcorp/plumber-schemas/build/go/protos/encoding"
	opts "github.com/batchcorp/plumber-schemas/build/go/protos/opts"
	records "github.com/batchcorp/plumber-schemas/build/go/protos/records"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConvertOption int32

const (
	ConvertOption_CONVERT_OPTION_UNSET  ConvertOption = 0
	ConvertOption_CONVERT_OPTION_BASE64 ConvertOption = 1
	ConvertOption_CONVERT_OPTION_GZIP   ConvertOption = 2
)

var ConvertOption_name = map[int32]string{
	0: "CONVERT_OPTION_UNSET",
	1: "CONVERT_OPTION_BASE64",
	2: "CONVERT_OPTION_GZIP",
}

var ConvertOption_value = map[string]int32{
	"CONVERT_OPTION_UNSET":  0,
	"CONVERT_OPTION_BASE64": 1,
	"CONVERT_OPTION_GZIP":   2,
}

func (x ConvertOption) String() string {
	return proto.EnumName(ConvertOption_name, int32(x))
}

func (ConvertOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{0}
}

type ReadSampleOptions struct {
	// @gotags: kong:"help='How many events to fetch during a sample interval',default=100"
	SampleRate uint32 `protobuf:"varint,1,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty" kong:"help='How many events to fetch during a sample interval',default=100"`
	// @gotags: kong:"help='Sample interval seconds',enum:'1,60',default=60"
	SampleIntervalSeconds uint32   `protobuf:"varint,2,opt,name=sample_interval_seconds,json=sampleIntervalSeconds,proto3" json:"sample_interval_seconds,omitempty" kong:"help='Sample interval seconds',enum:'1,60',default=60"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ReadSampleOptions) Reset()         { *m = ReadSampleOptions{} }
func (m *ReadSampleOptions) String() string { return proto.CompactTextString(m) }
func (*ReadSampleOptions) ProtoMessage()    {}
func (*ReadSampleOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{0}
}

func (m *ReadSampleOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadSampleOptions.Unmarshal(m, b)
}
func (m *ReadSampleOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadSampleOptions.Marshal(b, m, deterministic)
}
func (m *ReadSampleOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadSampleOptions.Merge(m, src)
}
func (m *ReadSampleOptions) XXX_Size() int {
	return xxx_messageInfo_ReadSampleOptions.Size(m)
}
func (m *ReadSampleOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadSampleOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ReadSampleOptions proto.InternalMessageInfo

func (m *ReadSampleOptions) GetSampleRate() uint32 {
	if m != nil {
		return m.SampleRate
	}
	return 0
}

func (m *ReadSampleOptions) GetSampleIntervalSeconds() uint32 {
	if m != nil {
		return m.SampleIntervalSeconds
	}
	return 0
}

type ReadCLIConfig struct {
	// @gotags: kong:"help='Display consumer offset stats during read'"
	DisplayOffsetStats bool `protobuf:"varint,1,opt,name=display_offset_stats,json=displayOffsetStats,proto3" json:"display_offset_stats,omitempty" kong:"help='Display consumer offset stats during read'"`
	// @gotags: kong:"help='Convert output before it is printed to STDOUT (1 = base64, 2 = gzip)',enum"
	ConvertOutput []ConvertOption `protobuf:"varint,2,rep,packed,name=convert_output,json=convertOutput,proto3,enum=protos.ConvertOption" json:"convert_output,omitempty" kong:"help='Convert output before it is printed to STDOUT (1 = base64, 2 = gzip)',enum"`
	// @gotags: kong:"help='Display more verbose information during reads (varies by backend)'"
	VerboseOutput bool `protobuf:"varint,3,opt,name=verbose_output,json=verboseOutput,proto3" json:"verbose_output,omitempty" kong:"help='Display more verbose information during reads (varies by backend)'"`
	// @gotags: kong:"group=stats,help='Display periodic read stats'"
	StatsEnable bool `protobuf:"varint,4,opt,name=stats_enable,json=statsEnable,proto3" json:"stats_enable,omitempty" kong:"group=stats,help='Display periodic read stats'"`
	// @gotags: kong:"group=stats,help='How often to print stats',default=5"
	StatsReportIntervalSec int32    `protobuf:"varint,5,opt,name=stats_report_interval_sec,json=statsReportIntervalSec,proto3" json:"stats_report_interval_sec,omitempty" kong:"group=stats,help='How often to print stats',default=5"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *ReadCLIConfig) Reset()         { *m = ReadCLIConfig{} }
func (m *ReadCLIConfig) String() string { return proto.CompactTextString(m) }
func (*ReadCLIConfig) ProtoMessage()    {}
func (*ReadCLIConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{1}
}

func (m *ReadCLIConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadCLIConfig.Unmarshal(m, b)
}
func (m *ReadCLIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadCLIConfig.Marshal(b, m, deterministic)
}
func (m *ReadCLIConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadCLIConfig.Merge(m, src)
}
func (m *ReadCLIConfig) XXX_Size() int {
	return xxx_messageInfo_ReadCLIConfig.Size(m)
}
func (m *ReadCLIConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadCLIConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReadCLIConfig proto.InternalMessageInfo

func (m *ReadCLIConfig) GetDisplayOffsetStats() bool {
	if m != nil {
		return m.DisplayOffsetStats
	}
	return false
}

func (m *ReadCLIConfig) GetConvertOutput() []ConvertOption {
	if m != nil {
		return m.ConvertOutput
	}
	return nil
}

func (m *ReadCLIConfig) GetVerboseOutput() bool {
	if m != nil {
		return m.VerboseOutput
	}
	return false
}

func (m *ReadCLIConfig) GetStatsEnable() bool {
	if m != nil {
		return m.StatsEnable
	}
	return false
}

func (m *ReadCLIConfig) GetStatsReportIntervalSec() int32 {
	if m != nil {
		return m.StatsReportIntervalSec
	}
	return 0
}

type ReadConfig struct {
	// Required; friendly name for the read
	// @gotags: kong:"-"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" kong:"-"`
	// Required for desktop; ignored in CLI.
	// @gotags: kong:"-"
	ConnectionId string `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty" kong:"-"`
	// Required; specify if a read is continuous or not (default: false)
	// @gotags: short:"f" default: "false"
	Continuous bool `protobuf:"varint,3,opt,name=continuous,proto3" json:"continuous,omitempty" short:"f"`
	// Optional; specify if reading should utilize sampling
	// @gotags: kong:"embed,group=sampling"
	SampleOptions *ReadSampleOptions `protobuf:"bytes,4,opt,name=sample_options,json=sampleOptions,proto3" json:"sample_options,omitempty" kong:"embed,group=sampling"`
	// Optional; decode_options specify how to decode the _value_ in a message.
	// If left unset, plumber will still populate records.ReadRecord.Decoded
	// with the (untouched) value.
	// @gotags: kong:"embed,group=decode"
	DecodeOptions *encoding.DecodeOptions `protobuf:"bytes,5,opt,name=decode_options,json=decodeOptions,proto3" json:"decode_options,omitempty" kong:"embed,group=decode"`
	// Any extra opts that can differ between reads (topics, read offset, etc.).
	// NOTE: Desktop can leave conn unset - an existing connection will be used
	// by looking up connection_id.
	// @gotags: kong:"embed"
	ReadOpts *opts.Read `protobuf:"bytes,6,opt,name=read_opts,json=readOpts,proto3" json:"read_opts,omitempty" kong:"embed"`
	// Automatically set by plumber when a new read is created
	// @gotags: kong:"-"
	XId string `protobuf:"bytes,1000,opt,name=_id,json=Id,proto3" json:"_id,omitempty" kong:"-"`
	// Used by plumber to set read state
	// @gotags: kong:"-"
	XActive bool `protobuf:"varint,1001,opt,name=_active,json=Active,proto3" json:"_active,omitempty" kong:"-"`
	// Contains options/fields specific to the CLI
	// @gotags: kong:"embed"
	XCliConfig           *ReadCLIConfig `protobuf:"bytes,1002,opt,name=_cli_config,json=CliConfig,proto3" json:"_cli_config,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ReadConfig) Reset()         { *m = ReadConfig{} }
func (m *ReadConfig) String() string { return proto.CompactTextString(m) }
func (*ReadConfig) ProtoMessage()    {}
func (*ReadConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{2}
}

func (m *ReadConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadConfig.Unmarshal(m, b)
}
func (m *ReadConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadConfig.Marshal(b, m, deterministic)
}
func (m *ReadConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadConfig.Merge(m, src)
}
func (m *ReadConfig) XXX_Size() int {
	return xxx_messageInfo_ReadConfig.Size(m)
}
func (m *ReadConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReadConfig proto.InternalMessageInfo

func (m *ReadConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReadConfig) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *ReadConfig) GetContinuous() bool {
	if m != nil {
		return m.Continuous
	}
	return false
}

func (m *ReadConfig) GetSampleOptions() *ReadSampleOptions {
	if m != nil {
		return m.SampleOptions
	}
	return nil
}

func (m *ReadConfig) GetDecodeOptions() *encoding.DecodeOptions {
	if m != nil {
		return m.DecodeOptions
	}
	return nil
}

func (m *ReadConfig) GetReadOpts() *opts.Read {
	if m != nil {
		return m.ReadOpts
	}
	return nil
}

func (m *ReadConfig) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *ReadConfig) GetXActive() bool {
	if m != nil {
		return m.XActive
	}
	return false
}

func (m *ReadConfig) GetXCliConfig() *ReadCLIConfig {
	if m != nil {
		return m.XCliConfig
	}
	return nil
}

type CreateReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Config               *ReadConfig  `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateReadRequest) Reset()         { *m = CreateReadRequest{} }
func (m *CreateReadRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReadRequest) ProtoMessage()    {}
func (*CreateReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{3}
}

func (m *CreateReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReadRequest.Unmarshal(m, b)
}
func (m *CreateReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReadRequest.Marshal(b, m, deterministic)
}
func (m *CreateReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReadRequest.Merge(m, src)
}
func (m *CreateReadRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReadRequest.Size(m)
}
func (m *CreateReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReadRequest proto.InternalMessageInfo

func (m *CreateReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *CreateReadRequest) GetConfig() *ReadConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type CreateReadResponse struct {
	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	// Assigned and returned by plumber-server to identify a successful read request
	ReadId               string   `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReadResponse) Reset()         { *m = CreateReadResponse{} }
func (m *CreateReadResponse) String() string { return proto.CompactTextString(m) }
func (*CreateReadResponse) ProtoMessage()    {}
func (*CreateReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{4}
}

func (m *CreateReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReadResponse.Unmarshal(m, b)
}
func (m *CreateReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReadResponse.Marshal(b, m, deterministic)
}
func (m *CreateReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReadResponse.Merge(m, src)
}
func (m *CreateReadResponse) XXX_Size() int {
	return xxx_messageInfo_CreateReadResponse.Size(m)
}
func (m *CreateReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReadResponse proto.InternalMessageInfo

func (m *CreateReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateReadResponse) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type StopReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	ReadId               string       `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StopReadRequest) Reset()         { *m = StopReadRequest{} }
func (m *StopReadRequest) String() string { return proto.CompactTextString(m) }
func (*StopReadRequest) ProtoMessage()    {}
func (*StopReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{5}
}

func (m *StopReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopReadRequest.Unmarshal(m, b)
}
func (m *StopReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopReadRequest.Marshal(b, m, deterministic)
}
func (m *StopReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopReadRequest.Merge(m, src)
}
func (m *StopReadRequest) XXX_Size() int {
	return xxx_messageInfo_StopReadRequest.Size(m)
}
func (m *StopReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopReadRequest proto.InternalMessageInfo

func (m *StopReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *StopReadRequest) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type StopReadResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StopReadResponse) Reset()         { *m = StopReadResponse{} }
func (m *StopReadResponse) String() string { return proto.CompactTextString(m) }
func (*StopReadResponse) ProtoMessage()    {}
func (*StopReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{6}
}

func (m *StopReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopReadResponse.Unmarshal(m, b)
}
func (m *StopReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopReadResponse.Marshal(b, m, deterministic)
}
func (m *StopReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopReadResponse.Merge(m, src)
}
func (m *StopReadResponse) XXX_Size() int {
	return xxx_messageInfo_StopReadResponse.Size(m)
}
func (m *StopReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopReadResponse proto.InternalMessageInfo

func (m *StopReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ResumeReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	ReadId               string       `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResumeReadRequest) Reset()         { *m = ResumeReadRequest{} }
func (m *ResumeReadRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeReadRequest) ProtoMessage()    {}
func (*ResumeReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{7}
}

func (m *ResumeReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeReadRequest.Unmarshal(m, b)
}
func (m *ResumeReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeReadRequest.Marshal(b, m, deterministic)
}
func (m *ResumeReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeReadRequest.Merge(m, src)
}
func (m *ResumeReadRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeReadRequest.Size(m)
}
func (m *ResumeReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeReadRequest proto.InternalMessageInfo

func (m *ResumeReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *ResumeReadRequest) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type ResumeReadResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResumeReadResponse) Reset()         { *m = ResumeReadResponse{} }
func (m *ResumeReadResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeReadResponse) ProtoMessage()    {}
func (*ResumeReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{8}
}

func (m *ResumeReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeReadResponse.Unmarshal(m, b)
}
func (m *ResumeReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeReadResponse.Marshal(b, m, deterministic)
}
func (m *ResumeReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeReadResponse.Merge(m, src)
}
func (m *ResumeReadResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeReadResponse.Size(m)
}
func (m *ResumeReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeReadResponse proto.InternalMessageInfo

func (m *ResumeReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type DeleteReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	ReadId               string       `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteReadRequest) Reset()         { *m = DeleteReadRequest{} }
func (m *DeleteReadRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteReadRequest) ProtoMessage()    {}
func (*DeleteReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{9}
}

func (m *DeleteReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReadRequest.Unmarshal(m, b)
}
func (m *DeleteReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReadRequest.Marshal(b, m, deterministic)
}
func (m *DeleteReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReadRequest.Merge(m, src)
}
func (m *DeleteReadRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteReadRequest.Size(m)
}
func (m *DeleteReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReadRequest proto.InternalMessageInfo

func (m *DeleteReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *DeleteReadRequest) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type DeleteReadResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeleteReadResponse) Reset()         { *m = DeleteReadResponse{} }
func (m *DeleteReadResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteReadResponse) ProtoMessage()    {}
func (*DeleteReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{10}
}

func (m *DeleteReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReadResponse.Unmarshal(m, b)
}
func (m *DeleteReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReadResponse.Marshal(b, m, deterministic)
}
func (m *DeleteReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReadResponse.Merge(m, src)
}
func (m *DeleteReadResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteReadResponse.Size(m)
}
func (m *DeleteReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReadResponse proto.InternalMessageInfo

func (m *DeleteReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type StartReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	ReadId               string       `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StartReadRequest) Reset()         { *m = StartReadRequest{} }
func (m *StartReadRequest) String() string { return proto.CompactTextString(m) }
func (*StartReadRequest) ProtoMessage()    {}
func (*StartReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{11}
}

func (m *StartReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartReadRequest.Unmarshal(m, b)
}
func (m *StartReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartReadRequest.Marshal(b, m, deterministic)
}
func (m *StartReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartReadRequest.Merge(m, src)
}
func (m *StartReadRequest) XXX_Size() int {
	return xxx_messageInfo_StartReadRequest.Size(m)
}
func (m *StartReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartReadRequest proto.InternalMessageInfo

func (m *StartReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *StartReadRequest) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type StartReadResponse struct {
	Records              []*records.ReadRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Status               *common.Status        `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StartReadResponse) Reset()         { *m = StartReadResponse{} }
func (m *StartReadResponse) String() string { return proto.CompactTextString(m) }
func (*StartReadResponse) ProtoMessage()    {}
func (*StartReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{12}
}

func (m *StartReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartReadResponse.Unmarshal(m, b)
}
func (m *StartReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartReadResponse.Marshal(b, m, deterministic)
}
func (m *StartReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartReadResponse.Merge(m, src)
}
func (m *StartReadResponse) XXX_Size() int {
	return xxx_messageInfo_StartReadResponse.Size(m)
}
func (m *StartReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartReadResponse proto.InternalMessageInfo

func (m *StartReadResponse) GetRecords() []*records.ReadRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *StartReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetAllReadsRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetAllReadsRequest) Reset()         { *m = GetAllReadsRequest{} }
func (m *GetAllReadsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllReadsRequest) ProtoMessage()    {}
func (*GetAllReadsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{13}
}

func (m *GetAllReadsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllReadsRequest.Unmarshal(m, b)
}
func (m *GetAllReadsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllReadsRequest.Marshal(b, m, deterministic)
}
func (m *GetAllReadsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllReadsRequest.Merge(m, src)
}
func (m *GetAllReadsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllReadsRequest.Size(m)
}
func (m *GetAllReadsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllReadsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllReadsRequest proto.InternalMessageInfo

func (m *GetAllReadsRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type GetAllReadsResponse struct {
	Read                 []*ReadConfig  `protobuf:"bytes,1,rep,name=read,proto3" json:"read,omitempty"`
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAllReadsResponse) Reset()         { *m = GetAllReadsResponse{} }
func (m *GetAllReadsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllReadsResponse) ProtoMessage()    {}
func (*GetAllReadsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{14}
}

func (m *GetAllReadsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllReadsResponse.Unmarshal(m, b)
}
func (m *GetAllReadsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllReadsResponse.Marshal(b, m, deterministic)
}
func (m *GetAllReadsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllReadsResponse.Merge(m, src)
}
func (m *GetAllReadsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllReadsResponse.Size(m)
}
func (m *GetAllReadsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllReadsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllReadsResponse proto.InternalMessageInfo

func (m *GetAllReadsResponse) GetRead() []*ReadConfig {
	if m != nil {
		return m.Read
	}
	return nil
}

func (m *GetAllReadsResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.ConvertOption", ConvertOption_name, ConvertOption_value)
	proto.RegisterType((*ReadSampleOptions)(nil), "protos.ReadSampleOptions")
	proto.RegisterType((*ReadCLIConfig)(nil), "protos.ReadCLIConfig")
	proto.RegisterType((*ReadConfig)(nil), "protos.ReadConfig")
	proto.RegisterType((*CreateReadRequest)(nil), "protos.CreateReadRequest")
	proto.RegisterType((*CreateReadResponse)(nil), "protos.CreateReadResponse")
	proto.RegisterType((*StopReadRequest)(nil), "protos.StopReadRequest")
	proto.RegisterType((*StopReadResponse)(nil), "protos.StopReadResponse")
	proto.RegisterType((*ResumeReadRequest)(nil), "protos.ResumeReadRequest")
	proto.RegisterType((*ResumeReadResponse)(nil), "protos.ResumeReadResponse")
	proto.RegisterType((*DeleteReadRequest)(nil), "protos.DeleteReadRequest")
	proto.RegisterType((*DeleteReadResponse)(nil), "protos.DeleteReadResponse")
	proto.RegisterType((*StartReadRequest)(nil), "protos.StartReadRequest")
	proto.RegisterType((*StartReadResponse)(nil), "protos.StartReadResponse")
	proto.RegisterType((*GetAllReadsRequest)(nil), "protos.GetAllReadsRequest")
	proto.RegisterType((*GetAllReadsResponse)(nil), "protos.GetAllReadsResponse")
}

func init() { proto.RegisterFile("read.proto", fileDescriptor_7b10ec61df6818dd) }

var fileDescriptor_7b10ec61df6818dd = []byte{
	// 818 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xd1, 0x6a, 0xe3, 0x46,
	0x14, 0xad, 0xed, 0xc4, 0xde, 0x5c, 0xaf, 0xbd, 0xf6, 0x64, 0xb3, 0x51, 0xf2, 0xb0, 0x4d, 0x55,
	0x5a, 0xcc, 0x42, 0xad, 0x92, 0x86, 0x40, 0xa1, 0x94, 0x26, 0x8e, 0x59, 0x0c, 0x25, 0x5e, 0xc6,
	0xd9, 0x7d, 0x58, 0x58, 0xc4, 0x48, 0x9a, 0xd8, 0x02, 0x49, 0xa3, 0x6a, 0x46, 0x86, 0x7d, 0x2d,
	0x7d, 0xef, 0x6f, 0xb6, 0xfd, 0x8a, 0x32, 0x77, 0x46, 0x6b, 0x79, 0xdb, 0x3e, 0xc4, 0x6c, 0x9f,
	0x22, 0xdd, 0x73, 0x74, 0xee, 0x39, 0x57, 0x77, 0x22, 0x03, 0x14, 0x9c, 0x45, 0xe3, 0xbc, 0x10,
	0x4a, 0x90, 0x36, 0xfe, 0x91, 0xa7, 0xc3, 0x50, 0xa4, 0xa9, 0xc8, 0x3c, 0x56, 0xaa, 0x95, 0x81,
	0x4e, 0x0f, 0x6d, 0x49, 0x2a, 0xa6, 0x4a, 0x69, 0x8b, 0xcf, 0x78, 0x16, 0x8a, 0x28, 0xce, 0x96,
	0x9e, 0xc8, 0x55, 0x2c, 0xb2, 0xaa, 0x4e, 0x0a, 0x1e, 0x8a, 0x22, 0x92, 0x5e, 0xc0, 0x24, 0xb7,
	0xb5, 0x27, 0x22, 0x57, 0xd2, 0xdb, 0x34, 0x73, 0x13, 0x18, 0x52, 0xce, 0xa2, 0x05, 0x4b, 0xf3,
	0x84, 0xcf, 0xcd, 0xf3, 0xe4, 0x73, 0xe8, 0x4a, 0x2c, 0xf8, 0x05, 0x53, 0xdc, 0x69, 0x9c, 0x35,
	0x46, 0x3d, 0x0a, 0xa6, 0x44, 0x99, 0xe2, 0xe4, 0x12, 0x8e, 0x2d, 0x21, 0xce, 0x14, 0x2f, 0xd6,
	0x2c, 0xf1, 0x25, 0x0f, 0x45, 0x16, 0x49, 0xa7, 0x89, 0xe4, 0x23, 0x03, 0xcf, 0x2c, 0xba, 0x30,
	0xa0, 0xfb, 0x5b, 0x13, 0x7a, 0xba, 0xdd, 0xe4, 0xe7, 0xd9, 0x44, 0x64, 0xf7, 0xf1, 0x92, 0x7c,
	0x0b, 0x4f, 0xa3, 0x58, 0xe6, 0x09, 0x7b, 0xef, 0x8b, 0xfb, 0x7b, 0xc9, 0x95, 0xaf, 0xb3, 0x49,
	0xec, 0xf9, 0x88, 0x12, 0x8b, 0xcd, 0x11, 0x5a, 0x68, 0x84, 0xfc, 0x00, 0xfd, 0x50, 0x64, 0x6b,
	0x5e, 0x28, 0x5f, 0x94, 0x2a, 0x2f, 0x95, 0xd3, 0x3c, 0x6b, 0x8d, 0xfa, 0xe7, 0x47, 0x26, 0x91,
	0x1c, 0x4f, 0x0c, 0x6a, 0xc2, 0xd0, 0x9e, 0x25, 0xcf, 0x91, 0x4b, 0xbe, 0x82, 0xfe, 0x9a, 0x17,
	0x81, 0x90, 0xbc, 0x7a, 0xba, 0x85, 0x9d, 0x7a, 0xb6, 0x6a, 0x69, 0x5f, 0xc0, 0x63, 0xf4, 0xe1,
	0xf3, 0x8c, 0x05, 0x09, 0x77, 0xf6, 0x90, 0xd4, 0xc5, 0xda, 0x14, 0x4b, 0xe4, 0x7b, 0x38, 0x31,
	0x94, 0x82, 0xe7, 0xa2, 0x50, 0x5b, 0x93, 0x70, 0xf6, 0xcf, 0x1a, 0xa3, 0x7d, 0xfa, 0x0c, 0x09,
	0x14, 0xf1, 0xda, 0x28, 0xdc, 0x5f, 0x5b, 0x00, 0x38, 0x06, 0x33, 0x03, 0x02, 0x7b, 0x19, 0x4b,
	0xcd, 0x9c, 0x0f, 0x28, 0x5e, 0x93, 0x2f, 0x41, 0x1b, 0xcf, 0x78, 0xa8, 0x43, 0xf8, 0x71, 0x84,
	0x73, 0x3d, 0xa0, 0x8f, 0x37, 0xc5, 0x59, 0x44, 0x9e, 0x03, 0x84, 0x22, 0x53, 0x71, 0x56, 0x8a,
	0x52, 0xda, 0x20, 0xb5, 0x0a, 0xf9, 0x09, 0xfa, 0xf6, 0x35, 0xd9, 0xcd, 0xc0, 0x1c, 0xdd, 0xf3,
	0x93, 0x6a, 0x54, 0xff, 0x78, 0xf5, 0xb4, 0x27, 0xb7, 0x36, 0x61, 0x0a, 0xfd, 0x88, 0x87, 0x22,
	0xda, 0x28, 0xec, 0xa3, 0xc2, 0xf3, 0x4a, 0xa1, 0xda, 0xbd, 0xf1, 0x0d, 0xd2, 0x3e, 0xc8, 0x44,
	0xf5, 0x5b, 0x32, 0x86, 0x03, 0xbd, 0x73, 0x5a, 0x44, 0x3a, 0x6d, 0x54, 0x18, 0x56, 0x0a, 0xba,
	0x86, 0x46, 0xe8, 0x23, 0xcd, 0x99, 0xe7, 0x4a, 0x92, 0x01, 0xb4, 0x74, 0xe6, 0x3f, 0x3a, 0x18,
	0xba, 0x39, 0x8b, 0x88, 0x03, 0x1d, 0x9f, 0x85, 0x2a, 0x5e, 0x73, 0xe7, 0xcf, 0x0e, 0x06, 0x6d,
	0x5f, 0xe1, 0x2d, 0xb9, 0x84, 0xae, 0x1f, 0x26, 0xb1, 0x1f, 0xe2, 0x30, 0x9d, 0xbf, 0x3a, 0x28,
	0x7f, 0x54, 0x8f, 0xf8, 0x61, 0xdd, 0xe8, 0xc1, 0x24, 0x89, 0xcd, 0xa5, 0x1b, 0xc3, 0x70, 0x52,
	0x70, 0xa6, 0x38, 0xf6, 0xe6, 0xbf, 0x94, 0x5c, 0x2a, 0x32, 0x82, 0x3d, 0x7d, 0xdc, 0x9c, 0xdf,
	0x6f, 0x51, 0xe5, 0xb0, 0x52, 0x31, 0xe7, 0x6e, 0x7c, 0x55, 0xaa, 0x15, 0x45, 0x06, 0x79, 0x01,
	0x6d, 0xdb, 0xb1, 0x81, 0x54, 0xb2, 0xd5, 0xd0, 0x74, 0xb3, 0x0c, 0xf7, 0x1d, 0x90, 0x7a, 0x2b,
	0x99, 0x8b, 0x4c, 0x72, 0x32, 0x86, 0xb6, 0x39, 0xc7, 0x26, 0x67, 0xcd, 0xb3, 0xed, 0xb6, 0x40,
	0x94, 0x5a, 0x16, 0x39, 0x86, 0x0e, 0x0e, 0x31, 0x8e, 0xec, 0xa6, 0xb4, 0xf5, 0xed, 0x2c, 0x72,
	0xef, 0xe0, 0xc9, 0x42, 0x89, 0x7c, 0xb7, 0x1c, 0xff, 0xa9, 0x7a, 0x0d, 0x83, 0x8d, 0xea, 0x6e,
	0x96, 0xdd, 0x37, 0xfa, 0xbf, 0x8b, 0x2c, 0x53, 0xfe, 0x89, 0xbd, 0xdd, 0x00, 0xa9, 0xeb, 0xee,
	0xee, 0xee, 0x86, 0x27, 0x5c, 0xfd, 0x0f, 0xee, 0xea, 0xba, 0x3b, 0xba, 0x7b, 0xad, 0xe7, 0xcf,
	0x0a, 0xf5, 0x89, 0xcd, 0xbd, 0x87, 0x61, 0x4d, 0xd6, 0x7a, 0xbb, 0xd0, 0x6c, 0xfc, 0x58, 0x38,
	0x8d, 0xb3, 0xd6, 0xa8, 0x7b, 0x7e, 0x5a, 0x29, 0xdb, 0xb2, 0x39, 0xa0, 0x78, 0x4d, 0x2b, 0xea,
	0x83, 0x13, 0xfd, 0x08, 0xe4, 0x25, 0x57, 0x57, 0x49, 0xa2, 0xc5, 0xe4, 0x83, 0x33, 0xb9, 0x29,
	0x1c, 0x6e, 0x3d, 0x6f, 0xcd, 0x7f, 0x0d, 0x7b, 0x3a, 0x9b, 0x75, 0xfe, 0x6f, 0xe7, 0x10, 0xf1,
	0x87, 0xda, 0x7d, 0xf1, 0x0e, 0x7a, 0x5b, 0x9f, 0x12, 0xe2, 0xc0, 0xd3, 0xc9, 0xfc, 0xf6, 0xcd,
	0x94, 0xde, 0xf9, 0xf3, 0x57, 0x77, 0xb3, 0xf9, 0xad, 0xff, 0xfa, 0x76, 0x31, 0xbd, 0x1b, 0x7c,
	0x46, 0x4e, 0xe0, 0xe8, 0x23, 0xe4, 0xfa, 0x6a, 0x31, 0xbd, 0xbc, 0x18, 0x34, 0xc8, 0x31, 0x1c,
	0x7e, 0x04, 0xbd, 0x7c, 0x3b, 0x7b, 0x35, 0x68, 0x5e, 0x5f, 0xbe, 0xbd, 0x58, 0xc6, 0x6a, 0x55,
	0x06, 0xba, 0xbd, 0x17, 0x30, 0x15, 0xae, 0x42, 0x51, 0xe4, 0x5e, 0x9e, 0x94, 0x69, 0xc0, 0x8b,
	0x6f, 0x64, 0xb8, 0xe2, 0x29, 0x93, 0x5e, 0x50, 0xc6, 0x49, 0xe4, 0x2d, 0x85, 0x67, 0xcc, 0x06,
	0xe6, 0xe7, 0xc1, 0x77, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x9b, 0xb3, 0x22, 0x33, 0x08,
	0x00, 0x00,
}
