// Code generated by protoc-gen-go. DO NOT EDIT.
// source: read.proto

package protos

import (
	fmt "fmt"
	backends "github.com/batchcorp/plumber-schemas/build/go/protos/backends"
	common "github.com/batchcorp/plumber-schemas/build/go/protos/common"
	encoding "github.com/batchcorp/plumber-schemas/build/go/protos/encoding"
	records "github.com/batchcorp/plumber-schemas/build/go/protos/records"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SampleOptions_Interval int32

const (
	SampleOptions_SECOND SampleOptions_Interval = 0
	SampleOptions_MINUTE SampleOptions_Interval = 1
)

var SampleOptions_Interval_name = map[int32]string{
	0: "SECOND",
	1: "MINUTE",
}

var SampleOptions_Interval_value = map[string]int32{
	"SECOND": 0,
	"MINUTE": 1,
}

func (x SampleOptions_Interval) String() string {
	return proto.EnumName(SampleOptions_Interval_name, int32(x))
}

func (SampleOptions_Interval) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{0, 0}
}

type ReadOptions_Type int32

const (
	ReadOptions_ONE_TIME   ReadOptions_Type = 0
	ReadOptions_CONTINUOUS ReadOptions_Type = 1
)

var ReadOptions_Type_name = map[int32]string{
	0: "ONE_TIME",
	1: "CONTINUOUS",
}

var ReadOptions_Type_value = map[string]int32{
	"ONE_TIME":   0,
	"CONTINUOUS": 1,
}

func (x ReadOptions_Type) String() string {
	return proto.EnumName(ReadOptions_Type_name, int32(x))
}

func (ReadOptions_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{1, 0}
}

type SampleOptions struct {
	SampleRate           uint32                 `protobuf:"varint,1,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	SampleInterval       SampleOptions_Interval `protobuf:"varint,2,opt,name=sample_interval,json=sampleInterval,proto3,enum=protos.SampleOptions_Interval" json:"sample_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SampleOptions) Reset()         { *m = SampleOptions{} }
func (m *SampleOptions) String() string { return proto.CompactTextString(m) }
func (*SampleOptions) ProtoMessage()    {}
func (*SampleOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{0}
}

func (m *SampleOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleOptions.Unmarshal(m, b)
}
func (m *SampleOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleOptions.Marshal(b, m, deterministic)
}
func (m *SampleOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleOptions.Merge(m, src)
}
func (m *SampleOptions) XXX_Size() int {
	return xxx_messageInfo_SampleOptions.Size(m)
}
func (m *SampleOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleOptions.DiscardUnknown(m)
}

var xxx_messageInfo_SampleOptions proto.InternalMessageInfo

func (m *SampleOptions) GetSampleRate() uint32 {
	if m != nil {
		return m.SampleRate
	}
	return 0
}

func (m *SampleOptions) GetSampleInterval() SampleOptions_Interval {
	if m != nil {
		return m.SampleInterval
	}
	return SampleOptions_SECOND
}

type ReadOptions struct {
	Type                 ReadOptions_Type `protobuf:"varint,1,opt,name=type,proto3,enum=protos.ReadOptions_Type" json:"type,omitempty"`
	SampleOptions        *SampleOptions   `protobuf:"bytes,2,opt,name=sample_options,json=sampleOptions,proto3" json:"sample_options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ReadOptions) Reset()         { *m = ReadOptions{} }
func (m *ReadOptions) String() string { return proto.CompactTextString(m) }
func (*ReadOptions) ProtoMessage()    {}
func (*ReadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{1}
}

func (m *ReadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadOptions.Unmarshal(m, b)
}
func (m *ReadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadOptions.Marshal(b, m, deterministic)
}
func (m *ReadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadOptions.Merge(m, src)
}
func (m *ReadOptions) XXX_Size() int {
	return xxx_messageInfo_ReadOptions.Size(m)
}
func (m *ReadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ReadOptions proto.InternalMessageInfo

func (m *ReadOptions) GetType() ReadOptions_Type {
	if m != nil {
		return m.Type
	}
	return ReadOptions_ONE_TIME
}

func (m *ReadOptions) GetSampleOptions() *SampleOptions {
	if m != nil {
		return m.SampleOptions
	}
	return nil
}

type ReadCLIConfig struct {
	TreatOutputAsJson    bool     `protobuf:"varint,1,opt,name=treat_output_as_json,json=treatOutputAsJson,proto3" json:"treat_output_as_json,omitempty"`
	DisplayLagStats      bool     `protobuf:"varint,2,opt,name=display_lag_stats,json=displayLagStats,proto3" json:"display_lag_stats,omitempty"`
	ConvertOutput        string   `protobuf:"bytes,3,opt,name=convert_output,json=convertOutput,proto3" json:"convert_output,omitempty"`
	VerboseOutput        bool     `protobuf:"varint,4,opt,name=verbose_output,json=verboseOutput,proto3" json:"verbose_output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadCLIConfig) Reset()         { *m = ReadCLIConfig{} }
func (m *ReadCLIConfig) String() string { return proto.CompactTextString(m) }
func (*ReadCLIConfig) ProtoMessage()    {}
func (*ReadCLIConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{2}
}

func (m *ReadCLIConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadCLIConfig.Unmarshal(m, b)
}
func (m *ReadCLIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadCLIConfig.Marshal(b, m, deterministic)
}
func (m *ReadCLIConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadCLIConfig.Merge(m, src)
}
func (m *ReadCLIConfig) XXX_Size() int {
	return xxx_messageInfo_ReadCLIConfig.Size(m)
}
func (m *ReadCLIConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadCLIConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReadCLIConfig proto.InternalMessageInfo

func (m *ReadCLIConfig) GetTreatOutputAsJson() bool {
	if m != nil {
		return m.TreatOutputAsJson
	}
	return false
}

func (m *ReadCLIConfig) GetDisplayLagStats() bool {
	if m != nil {
		return m.DisplayLagStats
	}
	return false
}

func (m *ReadCLIConfig) GetConvertOutput() string {
	if m != nil {
		return m.ConvertOutput
	}
	return ""
}

func (m *ReadCLIConfig) GetVerboseOutput() bool {
	if m != nil {
		return m.VerboseOutput
	}
	return false
}

type ReadConfig struct {
	// Automatically set by plumber when a new read is created
	XId string `protobuf:"bytes,1,opt,name=_id,json=Id,proto3" json:"_id,omitempty"`
	// Used by plumber to set read state
	XActive bool `protobuf:"varint,2,opt,name=_active,json=Active,proto3" json:"_active,omitempty"`
	// Required; friendly name for the read
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Required for server mode; ignored in CLI mode.
	ConnectionId string `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// Required; options specifying how to read data
	ReadOptions *ReadOptions `protobuf:"bytes,5,opt,name=read_options,json=readOptions,proto3" json:"read_options,omitempty"`
	// Optional; options specify how to decode the _value_ in a message.
	// If left unset, plumber will still populate records.ReadRecord.Decoded
	// with the (untouched) value.
	DecodeOptions *encoding.Options `protobuf:"bytes,6,opt,name=decode_options,json=decodeOptions,proto3" json:"decode_options,omitempty"`
	// Optional; contains options specific to the CLI
	XCliConfig *ReadCLIConfig `protobuf:"bytes,7,opt,name=_cli_config,json=CliConfig,proto3" json:"_cli_config,omitempty"`
	// Types that are valid to be assigned to Backends:
	//	*ReadConfig_Kafka
	//	*ReadConfig_ActiveMq
	//	*ReadConfig_Awssqs
	//	*ReadConfig_Awssns
	//	*ReadConfig_Mongo
	//	*ReadConfig_Nats
	//	*ReadConfig_NatsStreaming
	//	*ReadConfig_Nsq
	//	*ReadConfig_Postgres
	//	*ReadConfig_Pulsar
	//	*ReadConfig_Rabbit
	//	*ReadConfig_RabbitStreams
	//	*ReadConfig_RedisPubsub
	//	*ReadConfig_RedisStreams
	//	*ReadConfig_AzureEventHub
	//	*ReadConfig_AzureServiceBus
	Backends             isReadConfig_Backends `protobuf_oneof:"Backends"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-" kong:"-"`
	XXX_unrecognized     []byte                `json:"-" kong:"-"`
	XXX_sizecache        int32                 `json:"-" kong:"-"`
}

func (m *ReadConfig) Reset()         { *m = ReadConfig{} }
func (m *ReadConfig) String() string { return proto.CompactTextString(m) }
func (*ReadConfig) ProtoMessage()    {}
func (*ReadConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{3}
}

func (m *ReadConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadConfig.Unmarshal(m, b)
}
func (m *ReadConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadConfig.Marshal(b, m, deterministic)
}
func (m *ReadConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadConfig.Merge(m, src)
}
func (m *ReadConfig) XXX_Size() int {
	return xxx_messageInfo_ReadConfig.Size(m)
}
func (m *ReadConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ReadConfig proto.InternalMessageInfo

func (m *ReadConfig) GetXId() string {
	if m != nil {
		return m.XId
	}
	return ""
}

func (m *ReadConfig) GetXActive() bool {
	if m != nil {
		return m.XActive
	}
	return false
}

func (m *ReadConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReadConfig) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *ReadConfig) GetReadOptions() *ReadOptions {
	if m != nil {
		return m.ReadOptions
	}
	return nil
}

func (m *ReadConfig) GetDecodeOptions() *encoding.Options {
	if m != nil {
		return m.DecodeOptions
	}
	return nil
}

func (m *ReadConfig) GetXCliConfig() *ReadCLIConfig {
	if m != nil {
		return m.XCliConfig
	}
	return nil
}

type isReadConfig_Backends interface {
	isReadConfig_Backends()
}

type ReadConfig_Kafka struct {
	Kafka *backends.Kafka `protobuf:"bytes,100,opt,name=kafka,proto3,oneof"`
}

type ReadConfig_ActiveMq struct {
	ActiveMq *backends.ActiveMQ `protobuf:"bytes,101,opt,name=active_mq,json=activeMq,proto3,oneof"`
}

type ReadConfig_Awssqs struct {
	Awssqs *backends.AWSSQS `protobuf:"bytes,102,opt,name=awssqs,proto3,oneof"`
}

type ReadConfig_Awssns struct {
	Awssns *backends.AWSSNS `protobuf:"bytes,103,opt,name=awssns,proto3,oneof"`
}

type ReadConfig_Mongo struct {
	Mongo *backends.Mongo `protobuf:"bytes,104,opt,name=mongo,proto3,oneof"`
}

type ReadConfig_Nats struct {
	Nats *backends.Nats `protobuf:"bytes,105,opt,name=nats,proto3,oneof"`
}

type ReadConfig_NatsStreaming struct {
	NatsStreaming *backends.NatsStreaming `protobuf:"bytes,106,opt,name=nats_streaming,json=natsStreaming,proto3,oneof"`
}

type ReadConfig_Nsq struct {
	Nsq *backends.NSQ `protobuf:"bytes,107,opt,name=nsq,proto3,oneof"`
}

type ReadConfig_Postgres struct {
	Postgres *backends.Postgres `protobuf:"bytes,108,opt,name=postgres,proto3,oneof"`
}

type ReadConfig_Pulsar struct {
	Pulsar *backends.Pulsar `protobuf:"bytes,109,opt,name=pulsar,proto3,oneof"`
}

type ReadConfig_Rabbit struct {
	Rabbit *backends.Rabbit `protobuf:"bytes,110,opt,name=rabbit,proto3,oneof"`
}

type ReadConfig_RabbitStreams struct {
	RabbitStreams *backends.RabbitStreams `protobuf:"bytes,111,opt,name=rabbit_streams,json=rabbitStreams,proto3,oneof"`
}

type ReadConfig_RedisPubsub struct {
	RedisPubsub *backends.RedisPubsub `protobuf:"bytes,112,opt,name=redis_pubsub,json=redisPubsub,proto3,oneof"`
}

type ReadConfig_RedisStreams struct {
	RedisStreams *backends.RedisStreams `protobuf:"bytes,113,opt,name=redis_streams,json=redisStreams,proto3,oneof"`
}

type ReadConfig_AzureEventHub struct {
	AzureEventHub *backends.AzureEventHub `protobuf:"bytes,114,opt,name=azure_event_hub,json=azureEventHub,proto3,oneof"`
}

type ReadConfig_AzureServiceBus struct {
	AzureServiceBus *backends.AzureServiceBus `protobuf:"bytes,115,opt,name=azure_service_bus,json=azureServiceBus,proto3,oneof"`
}

func (*ReadConfig_Kafka) isReadConfig_Backends() {}

func (*ReadConfig_ActiveMq) isReadConfig_Backends() {}

func (*ReadConfig_Awssqs) isReadConfig_Backends() {}

func (*ReadConfig_Awssns) isReadConfig_Backends() {}

func (*ReadConfig_Mongo) isReadConfig_Backends() {}

func (*ReadConfig_Nats) isReadConfig_Backends() {}

func (*ReadConfig_NatsStreaming) isReadConfig_Backends() {}

func (*ReadConfig_Nsq) isReadConfig_Backends() {}

func (*ReadConfig_Postgres) isReadConfig_Backends() {}

func (*ReadConfig_Pulsar) isReadConfig_Backends() {}

func (*ReadConfig_Rabbit) isReadConfig_Backends() {}

func (*ReadConfig_RabbitStreams) isReadConfig_Backends() {}

func (*ReadConfig_RedisPubsub) isReadConfig_Backends() {}

func (*ReadConfig_RedisStreams) isReadConfig_Backends() {}

func (*ReadConfig_AzureEventHub) isReadConfig_Backends() {}

func (*ReadConfig_AzureServiceBus) isReadConfig_Backends() {}

func (m *ReadConfig) GetBackends() isReadConfig_Backends {
	if m != nil {
		return m.Backends
	}
	return nil
}

func (m *ReadConfig) GetKafka() *backends.Kafka {
	if x, ok := m.GetBackends().(*ReadConfig_Kafka); ok {
		return x.Kafka
	}
	return nil
}

func (m *ReadConfig) GetActiveMq() *backends.ActiveMQ {
	if x, ok := m.GetBackends().(*ReadConfig_ActiveMq); ok {
		return x.ActiveMq
	}
	return nil
}

func (m *ReadConfig) GetAwssqs() *backends.AWSSQS {
	if x, ok := m.GetBackends().(*ReadConfig_Awssqs); ok {
		return x.Awssqs
	}
	return nil
}

func (m *ReadConfig) GetAwssns() *backends.AWSSNS {
	if x, ok := m.GetBackends().(*ReadConfig_Awssns); ok {
		return x.Awssns
	}
	return nil
}

func (m *ReadConfig) GetMongo() *backends.Mongo {
	if x, ok := m.GetBackends().(*ReadConfig_Mongo); ok {
		return x.Mongo
	}
	return nil
}

func (m *ReadConfig) GetNats() *backends.Nats {
	if x, ok := m.GetBackends().(*ReadConfig_Nats); ok {
		return x.Nats
	}
	return nil
}

func (m *ReadConfig) GetNatsStreaming() *backends.NatsStreaming {
	if x, ok := m.GetBackends().(*ReadConfig_NatsStreaming); ok {
		return x.NatsStreaming
	}
	return nil
}

func (m *ReadConfig) GetNsq() *backends.NSQ {
	if x, ok := m.GetBackends().(*ReadConfig_Nsq); ok {
		return x.Nsq
	}
	return nil
}

func (m *ReadConfig) GetPostgres() *backends.Postgres {
	if x, ok := m.GetBackends().(*ReadConfig_Postgres); ok {
		return x.Postgres
	}
	return nil
}

func (m *ReadConfig) GetPulsar() *backends.Pulsar {
	if x, ok := m.GetBackends().(*ReadConfig_Pulsar); ok {
		return x.Pulsar
	}
	return nil
}

func (m *ReadConfig) GetRabbit() *backends.Rabbit {
	if x, ok := m.GetBackends().(*ReadConfig_Rabbit); ok {
		return x.Rabbit
	}
	return nil
}

func (m *ReadConfig) GetRabbitStreams() *backends.RabbitStreams {
	if x, ok := m.GetBackends().(*ReadConfig_RabbitStreams); ok {
		return x.RabbitStreams
	}
	return nil
}

func (m *ReadConfig) GetRedisPubsub() *backends.RedisPubsub {
	if x, ok := m.GetBackends().(*ReadConfig_RedisPubsub); ok {
		return x.RedisPubsub
	}
	return nil
}

func (m *ReadConfig) GetRedisStreams() *backends.RedisStreams {
	if x, ok := m.GetBackends().(*ReadConfig_RedisStreams); ok {
		return x.RedisStreams
	}
	return nil
}

func (m *ReadConfig) GetAzureEventHub() *backends.AzureEventHub {
	if x, ok := m.GetBackends().(*ReadConfig_AzureEventHub); ok {
		return x.AzureEventHub
	}
	return nil
}

func (m *ReadConfig) GetAzureServiceBus() *backends.AzureServiceBus {
	if x, ok := m.GetBackends().(*ReadConfig_AzureServiceBus); ok {
		return x.AzureServiceBus
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadConfig_Kafka)(nil),
		(*ReadConfig_ActiveMq)(nil),
		(*ReadConfig_Awssqs)(nil),
		(*ReadConfig_Awssns)(nil),
		(*ReadConfig_Mongo)(nil),
		(*ReadConfig_Nats)(nil),
		(*ReadConfig_NatsStreaming)(nil),
		(*ReadConfig_Nsq)(nil),
		(*ReadConfig_Postgres)(nil),
		(*ReadConfig_Pulsar)(nil),
		(*ReadConfig_Rabbit)(nil),
		(*ReadConfig_RabbitStreams)(nil),
		(*ReadConfig_RedisPubsub)(nil),
		(*ReadConfig_RedisStreams)(nil),
		(*ReadConfig_AzureEventHub)(nil),
		(*ReadConfig_AzureServiceBus)(nil),
	}
}

type CreateReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Config               *ReadConfig  `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateReadRequest) Reset()         { *m = CreateReadRequest{} }
func (m *CreateReadRequest) String() string { return proto.CompactTextString(m) }
func (*CreateReadRequest) ProtoMessage()    {}
func (*CreateReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{4}
}

func (m *CreateReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReadRequest.Unmarshal(m, b)
}
func (m *CreateReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReadRequest.Marshal(b, m, deterministic)
}
func (m *CreateReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReadRequest.Merge(m, src)
}
func (m *CreateReadRequest) XXX_Size() int {
	return xxx_messageInfo_CreateReadRequest.Size(m)
}
func (m *CreateReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReadRequest proto.InternalMessageInfo

func (m *CreateReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *CreateReadRequest) GetConfig() *ReadConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type CreateReadResponse struct {
	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	// Assigned and returned by plumber-server to identify a successful read request
	ReadId               string   `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReadResponse) Reset()         { *m = CreateReadResponse{} }
func (m *CreateReadResponse) String() string { return proto.CompactTextString(m) }
func (*CreateReadResponse) ProtoMessage()    {}
func (*CreateReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{5}
}

func (m *CreateReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReadResponse.Unmarshal(m, b)
}
func (m *CreateReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReadResponse.Marshal(b, m, deterministic)
}
func (m *CreateReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReadResponse.Merge(m, src)
}
func (m *CreateReadResponse) XXX_Size() int {
	return xxx_messageInfo_CreateReadResponse.Size(m)
}
func (m *CreateReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReadResponse proto.InternalMessageInfo

func (m *CreateReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateReadResponse) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type StopReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	ReadId               string       `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StopReadRequest) Reset()         { *m = StopReadRequest{} }
func (m *StopReadRequest) String() string { return proto.CompactTextString(m) }
func (*StopReadRequest) ProtoMessage()    {}
func (*StopReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{6}
}

func (m *StopReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopReadRequest.Unmarshal(m, b)
}
func (m *StopReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopReadRequest.Marshal(b, m, deterministic)
}
func (m *StopReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopReadRequest.Merge(m, src)
}
func (m *StopReadRequest) XXX_Size() int {
	return xxx_messageInfo_StopReadRequest.Size(m)
}
func (m *StopReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopReadRequest proto.InternalMessageInfo

func (m *StopReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *StopReadRequest) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type StopReadResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StopReadResponse) Reset()         { *m = StopReadResponse{} }
func (m *StopReadResponse) String() string { return proto.CompactTextString(m) }
func (*StopReadResponse) ProtoMessage()    {}
func (*StopReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{7}
}

func (m *StopReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopReadResponse.Unmarshal(m, b)
}
func (m *StopReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopReadResponse.Marshal(b, m, deterministic)
}
func (m *StopReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopReadResponse.Merge(m, src)
}
func (m *StopReadResponse) XXX_Size() int {
	return xxx_messageInfo_StopReadResponse.Size(m)
}
func (m *StopReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopReadResponse proto.InternalMessageInfo

func (m *StopReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ResumeReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	ReadId               string       `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResumeReadRequest) Reset()         { *m = ResumeReadRequest{} }
func (m *ResumeReadRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeReadRequest) ProtoMessage()    {}
func (*ResumeReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{8}
}

func (m *ResumeReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeReadRequest.Unmarshal(m, b)
}
func (m *ResumeReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeReadRequest.Marshal(b, m, deterministic)
}
func (m *ResumeReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeReadRequest.Merge(m, src)
}
func (m *ResumeReadRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeReadRequest.Size(m)
}
func (m *ResumeReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeReadRequest proto.InternalMessageInfo

func (m *ResumeReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *ResumeReadRequest) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type ResumeReadResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResumeReadResponse) Reset()         { *m = ResumeReadResponse{} }
func (m *ResumeReadResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeReadResponse) ProtoMessage()    {}
func (*ResumeReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{9}
}

func (m *ResumeReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeReadResponse.Unmarshal(m, b)
}
func (m *ResumeReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeReadResponse.Marshal(b, m, deterministic)
}
func (m *ResumeReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeReadResponse.Merge(m, src)
}
func (m *ResumeReadResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeReadResponse.Size(m)
}
func (m *ResumeReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeReadResponse proto.InternalMessageInfo

func (m *ResumeReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type DeleteReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	ReadId               string       `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteReadRequest) Reset()         { *m = DeleteReadRequest{} }
func (m *DeleteReadRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteReadRequest) ProtoMessage()    {}
func (*DeleteReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{10}
}

func (m *DeleteReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReadRequest.Unmarshal(m, b)
}
func (m *DeleteReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReadRequest.Marshal(b, m, deterministic)
}
func (m *DeleteReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReadRequest.Merge(m, src)
}
func (m *DeleteReadRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteReadRequest.Size(m)
}
func (m *DeleteReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReadRequest proto.InternalMessageInfo

func (m *DeleteReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *DeleteReadRequest) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type DeleteReadResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeleteReadResponse) Reset()         { *m = DeleteReadResponse{} }
func (m *DeleteReadResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteReadResponse) ProtoMessage()    {}
func (*DeleteReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{11}
}

func (m *DeleteReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReadResponse.Unmarshal(m, b)
}
func (m *DeleteReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReadResponse.Marshal(b, m, deterministic)
}
func (m *DeleteReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReadResponse.Merge(m, src)
}
func (m *DeleteReadResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteReadResponse.Size(m)
}
func (m *DeleteReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReadResponse proto.InternalMessageInfo

func (m *DeleteReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type StartReadRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	ReadId               string       `protobuf:"bytes,1,opt,name=read_id,json=readId,proto3" json:"read_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StartReadRequest) Reset()         { *m = StartReadRequest{} }
func (m *StartReadRequest) String() string { return proto.CompactTextString(m) }
func (*StartReadRequest) ProtoMessage()    {}
func (*StartReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{12}
}

func (m *StartReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartReadRequest.Unmarshal(m, b)
}
func (m *StartReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartReadRequest.Marshal(b, m, deterministic)
}
func (m *StartReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartReadRequest.Merge(m, src)
}
func (m *StartReadRequest) XXX_Size() int {
	return xxx_messageInfo_StartReadRequest.Size(m)
}
func (m *StartReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartReadRequest proto.InternalMessageInfo

func (m *StartReadRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *StartReadRequest) GetReadId() string {
	if m != nil {
		return m.ReadId
	}
	return ""
}

type StartReadResponse struct {
	Records              []*records.ReadRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Status               *common.Status        `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StartReadResponse) Reset()         { *m = StartReadResponse{} }
func (m *StartReadResponse) String() string { return proto.CompactTextString(m) }
func (*StartReadResponse) ProtoMessage()    {}
func (*StartReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{13}
}

func (m *StartReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartReadResponse.Unmarshal(m, b)
}
func (m *StartReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartReadResponse.Marshal(b, m, deterministic)
}
func (m *StartReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartReadResponse.Merge(m, src)
}
func (m *StartReadResponse) XXX_Size() int {
	return xxx_messageInfo_StartReadResponse.Size(m)
}
func (m *StartReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartReadResponse proto.InternalMessageInfo

func (m *StartReadResponse) GetRecords() []*records.ReadRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *StartReadResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetAllReadsRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetAllReadsRequest) Reset()         { *m = GetAllReadsRequest{} }
func (m *GetAllReadsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllReadsRequest) ProtoMessage()    {}
func (*GetAllReadsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{14}
}

func (m *GetAllReadsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllReadsRequest.Unmarshal(m, b)
}
func (m *GetAllReadsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllReadsRequest.Marshal(b, m, deterministic)
}
func (m *GetAllReadsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllReadsRequest.Merge(m, src)
}
func (m *GetAllReadsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllReadsRequest.Size(m)
}
func (m *GetAllReadsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllReadsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllReadsRequest proto.InternalMessageInfo

func (m *GetAllReadsRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type GetAllReadsResponse struct {
	Read                 []*ReadConfig  `protobuf:"bytes,1,rep,name=read,proto3" json:"read,omitempty"`
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAllReadsResponse) Reset()         { *m = GetAllReadsResponse{} }
func (m *GetAllReadsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllReadsResponse) ProtoMessage()    {}
func (*GetAllReadsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7b10ec61df6818dd, []int{15}
}

func (m *GetAllReadsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllReadsResponse.Unmarshal(m, b)
}
func (m *GetAllReadsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllReadsResponse.Marshal(b, m, deterministic)
}
func (m *GetAllReadsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllReadsResponse.Merge(m, src)
}
func (m *GetAllReadsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllReadsResponse.Size(m)
}
func (m *GetAllReadsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllReadsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllReadsResponse proto.InternalMessageInfo

func (m *GetAllReadsResponse) GetRead() []*ReadConfig {
	if m != nil {
		return m.Read
	}
	return nil
}

func (m *GetAllReadsResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.SampleOptions_Interval", SampleOptions_Interval_name, SampleOptions_Interval_value)
	proto.RegisterEnum("protos.ReadOptions_Type", ReadOptions_Type_name, ReadOptions_Type_value)
	proto.RegisterType((*SampleOptions)(nil), "protos.SampleOptions")
	proto.RegisterType((*ReadOptions)(nil), "protos.ReadOptions")
	proto.RegisterType((*ReadCLIConfig)(nil), "protos.ReadCLIConfig")
	proto.RegisterType((*ReadConfig)(nil), "protos.ReadConfig")
	proto.RegisterType((*CreateReadRequest)(nil), "protos.CreateReadRequest")
	proto.RegisterType((*CreateReadResponse)(nil), "protos.CreateReadResponse")
	proto.RegisterType((*StopReadRequest)(nil), "protos.StopReadRequest")
	proto.RegisterType((*StopReadResponse)(nil), "protos.StopReadResponse")
	proto.RegisterType((*ResumeReadRequest)(nil), "protos.ResumeReadRequest")
	proto.RegisterType((*ResumeReadResponse)(nil), "protos.ResumeReadResponse")
	proto.RegisterType((*DeleteReadRequest)(nil), "protos.DeleteReadRequest")
	proto.RegisterType((*DeleteReadResponse)(nil), "protos.DeleteReadResponse")
	proto.RegisterType((*StartReadRequest)(nil), "protos.StartReadRequest")
	proto.RegisterType((*StartReadResponse)(nil), "protos.StartReadResponse")
	proto.RegisterType((*GetAllReadsRequest)(nil), "protos.GetAllReadsRequest")
	proto.RegisterType((*GetAllReadsResponse)(nil), "protos.GetAllReadsResponse")
}

func init() { proto.RegisterFile("read.proto", fileDescriptor_7b10ec61df6818dd) }

var fileDescriptor_7b10ec61df6818dd = []byte{
	// 1244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0x6b, 0x6e, 0xdb, 0x46,
	0x17, 0x95, 0x62, 0x45, 0x91, 0xaf, 0x23, 0xd9, 0x9a, 0xbc, 0xf8, 0xe5, 0x4b, 0x52, 0x83, 0x7d,
	0xc0, 0x48, 0x2b, 0x09, 0x75, 0xd3, 0xb4, 0x3f, 0x8a, 0x16, 0x7e, 0x21, 0x52, 0x1b, 0xcb, 0x09,
	0x69, 0xb7, 0x40, 0x81, 0x82, 0x18, 0x92, 0x13, 0x89, 0x31, 0xc9, 0xa1, 0x38, 0x43, 0x07, 0xee,
	0x26, 0xba, 0x82, 0xa2, 0xfb, 0xe8, 0x42, 0xba, 0x86, 0x2e, 0xa3, 0x98, 0x17, 0x25, 0x59, 0x56,
	0x01, 0x1b, 0xe9, 0x2f, 0x91, 0xe7, 0x9e, 0x7b, 0xe6, 0xcc, 0xbd, 0x9c, 0x4b, 0x0a, 0x20, 0x27,
	0x38, 0xec, 0x66, 0x39, 0xe5, 0x14, 0xd5, 0xe5, 0x0f, 0x7b, 0xd8, 0x0e, 0x68, 0x92, 0xd0, 0xb4,
	0x87, 0x0b, 0x3e, 0x56, 0xa1, 0x87, 0x77, 0x34, 0xc4, 0x38, 0xe6, 0x05, 0xd3, 0xe0, 0x7d, 0x92,
	0x06, 0x34, 0x8c, 0xd2, 0x51, 0x8f, 0x66, 0x3c, 0xa2, 0xa9, 0xc1, 0x51, 0x4e, 0x02, 0x9a, 0x87,
	0xac, 0xe7, 0x63, 0x46, 0x34, 0x76, 0xd7, 0xc7, 0xc1, 0x29, 0x49, 0x43, 0xd6, 0x3b, 0xc5, 0x6f,
	0x4e, 0xb1, 0x46, 0x1f, 0x94, 0x28, 0x0e, 0x78, 0x74, 0x46, 0x92, 0x89, 0x91, 0x9e, 0x06, 0xde,
	0xb1, 0x0e, 0x2b, 0xa5, 0x2f, 0xe0, 0x13, 0xb6, 0x20, 0x9f, 0xd0, 0x74, 0x44, 0x8d, 0xeb, 0x12,
	0x4d, 0x31, 0x37, 0xd4, 0xc7, 0x73, 0x60, 0x87, 0xf1, 0x9c, 0xe0, 0x24, 0x4a, 0x47, 0xc6, 0xfc,
	0x34, 0xcc, 0x26, 0x0b, 0x36, 0x33, 0xca, 0xf8, 0x28, 0x27, 0x46, 0xeb, 0xde, 0x34, 0x50, 0xc4,
	0x0c, 0xe7, 0x0b, 0x70, 0x8e, 0x7d, 0x3f, 0xe2, 0x0b, 0x2b, 0x2b, 0x58, 0xaf, 0x6d, 0xc4, 0xfe,
	0x3f, 0x0d, 0x93, 0x30, 0x62, 0x9d, 0xac, 0xf0, 0x59, 0xe1, 0xeb, 0xe0, 0xa3, 0x0b, 0xc1, 0xf9,
	0xd4, 0xcd, 0x69, 0x59, 0x7e, 0x2d, 0x72, 0xd2, 0x61, 0x24, 0x3f, 0x8b, 0x02, 0xd2, 0xf1, 0xcb,
	0x5e, 0x3d, 0xb9, 0xc0, 0x20, 0x67, 0x24, 0xe5, 0x9d, 0xb1, 0xd1, 0xb7, 0x7f, 0xaf, 0x42, 0xd3,
	0xc5, 0x49, 0x16, 0x93, 0x23, 0xd5, 0x4b, 0xf4, 0x01, 0xac, 0x31, 0x09, 0x78, 0x39, 0xe6, 0xc4,
	0xaa, 0x6e, 0x56, 0xb7, 0x9a, 0x0e, 0x28, 0xc8, 0xc1, 0x9c, 0xa0, 0x17, 0xb0, 0xae, 0x09, 0x51,
	0xca, 0x49, 0x7e, 0x86, 0x63, 0xeb, 0xc6, 0x66, 0x75, 0xab, 0xb5, 0xfd, 0x44, 0x69, 0xb2, 0xee,
	0x9c, 0x60, 0x77, 0xa0, 0x59, 0x4e, 0x4b, 0xa5, 0x99, 0x7b, 0xdb, 0x86, 0x86, 0xb9, 0x46, 0x00,
	0x75, 0xf7, 0x60, 0xef, 0x68, 0xb8, 0xbf, 0x51, 0x11, 0xd7, 0x87, 0x83, 0xe1, 0xc9, 0xf1, 0xc1,
	0x46, 0xd5, 0xfe, 0xa3, 0x0a, 0x6b, 0x0e, 0xc1, 0xa1, 0x71, 0xf7, 0x19, 0xd4, 0xf8, 0x79, 0xa6,
	0x6c, 0xb5, 0xb6, 0x2d, 0xb3, 0xe2, 0x0c, 0xa5, 0x7b, 0x7c, 0x9e, 0x11, 0x47, 0xb2, 0xd0, 0x37,
	0xa0, 0xd7, 0xf4, 0xf4, 0x93, 0x2a, 0x9d, 0xae, 0x6d, 0xdf, 0xbb, 0xd4, 0xa9, 0xd3, 0x64, 0xb3,
	0xb7, 0xf6, 0x47, 0x50, 0x13, 0x5a, 0xe8, 0x36, 0x34, 0x8e, 0x86, 0x07, 0xde, 0xf1, 0xe0, 0xf0,
	0x60, 0xa3, 0x82, 0x5a, 0x00, 0x7b, 0x47, 0xc3, 0xe3, 0xc1, 0xf0, 0xe4, 0xe8, 0xc4, 0xdd, 0xa8,
	0xda, 0x7f, 0x56, 0xa1, 0x29, 0x96, 0xdf, 0x7b, 0x39, 0xd8, 0xa3, 0xe9, 0x9b, 0x68, 0x84, 0x7a,
	0x70, 0x57, 0x74, 0x89, 0x7b, 0xb4, 0xe0, 0x59, 0xc1, 0x3d, 0xcc, 0xbc, 0xb7, 0x8c, 0xa6, 0xd2,
	0x73, 0xc3, 0x69, 0xcb, 0xd8, 0x91, 0x0c, 0xed, 0xb0, 0xef, 0x19, 0x4d, 0xd1, 0x53, 0x68, 0x87,
	0x11, 0xcb, 0x62, 0x7c, 0xee, 0xc5, 0x78, 0xe4, 0x89, 0xc3, 0xa6, 0x9c, 0x36, 0x9c, 0x75, 0x1d,
	0x78, 0x89, 0x47, 0xae, 0x80, 0xd1, 0xc7, 0xd0, 0x0a, 0x68, 0x7a, 0x46, 0x72, 0x23, 0x6f, 0xad,
	0x6c, 0x56, 0xb7, 0x56, 0x9d, 0xa6, 0x46, 0x95, 0xb0, 0xa0, 0x9d, 0x91, 0xdc, 0xa7, 0x8c, 0x18,
	0x5a, 0x4d, 0xea, 0x35, 0x35, 0xaa, 0x68, 0xf6, 0x5f, 0xab, 0x00, 0xd2, 0xbc, 0x72, 0xbe, 0x0e,
	0x2b, 0x5e, 0x14, 0x4a, 0xa3, 0xab, 0xce, 0x8d, 0x41, 0x88, 0x1e, 0xc0, 0x2d, 0x4f, 0x1d, 0x51,
	0xed, 0xa7, 0xbe, 0x23, 0xef, 0x10, 0x82, 0x5a, 0x8a, 0x13, 0xa2, 0x17, 0x97, 0xd7, 0xe8, 0x43,
	0x10, 0x26, 0x52, 0x12, 0x88, 0xf2, 0x09, 0x9d, 0x9a, 0x0c, 0xde, 0x9e, 0x82, 0x83, 0x10, 0x3d,
	0x87, 0xdb, 0x62, 0xf4, 0x94, 0x0d, 0xb9, 0x29, 0x1b, 0x72, 0xe7, 0x92, 0x46, 0x3a, 0x6b, 0xf9,
	0x4c, 0xe3, 0xbf, 0x83, 0x56, 0x48, 0x02, 0x1a, 0x4e, 0x5b, 0x59, 0x97, 0x99, 0xe5, 0x23, 0x60,
	0x86, 0x52, 0xb7, 0xec, 0xa6, 0xe2, 0x1b, 0x81, 0x2f, 0x61, 0xcd, 0x0b, 0xe2, 0xc8, 0x0b, 0xe4,
	0x56, 0xad, 0x5b, 0xf3, 0x0f, 0xc2, 0x5c, 0x07, 0x9d, 0xd5, 0xbd, 0x38, 0xd2, 0x25, 0xe9, 0xc2,
	0x4d, 0x39, 0xb9, 0xac, 0x50, 0x26, 0xdc, 0x37, 0x09, 0xe6, 0x5c, 0x75, 0x7f, 0x10, 0xd1, 0x7e,
	0xc5, 0x51, 0x34, 0xf4, 0x35, 0xac, 0xaa, 0x82, 0x79, 0xc9, 0xc4, 0x22, 0x32, 0xe7, 0x7f, 0x0b,
	0x39, 0xaa, 0x88, 0x87, 0xaf, 0xfb, 0x15, 0xa7, 0xa1, 0xd8, 0x87, 0x13, 0xf4, 0x39, 0xd4, 0xf1,
	0x3b, 0xc6, 0x26, 0xcc, 0x7a, 0x23, 0xd3, 0x1e, 0x2c, 0xa6, 0xfd, 0xe4, 0xba, 0xaf, 0xdd, 0x7e,
	0xc5, 0xd1, 0x44, 0x93, 0x92, 0x32, 0x6b, 0xf4, 0x2f, 0x29, 0xc3, 0x32, 0x25, 0x65, 0x62, 0x3f,
	0x72, 0x54, 0x5a, 0xe3, 0x25, 0xfb, 0x39, 0x14, 0x51, 0xb1, 0x1f, 0x49, 0x43, 0x9f, 0x8a, 0x46,
	0x73, 0x66, 0x45, 0xf3, 0xf5, 0x2a, 0xe9, 0x43, 0xcc, 0x59, 0xbf, 0xe2, 0x48, 0x12, 0x7a, 0x01,
	0x2d, 0xf1, 0xeb, 0x95, 0xc3, 0xd5, 0x7a, 0x2b, 0xd3, 0x9e, 0x5c, 0x9a, 0xe6, 0x1a, 0x56, 0xbf,
	0xe2, 0x34, 0xd3, 0x59, 0x00, 0x6d, 0xc1, 0x4a, 0xca, 0x26, 0xd6, 0xa9, 0xcc, 0xbe, 0xbb, 0x98,
	0xed, 0x8a, 0xd2, 0x09, 0x0a, 0xfa, 0x0a, 0x1a, 0x66, 0x38, 0x5b, 0xf1, 0x92, 0x72, 0xbf, 0xd2,
	0x04, 0x51, 0x6e, 0x43, 0x16, 0xb5, 0x53, 0xc3, 0xdb, 0x4a, 0x96, 0xd4, 0xee, 0x95, 0x0c, 0x8b,
	0xda, 0x29, 0xa2, 0x48, 0x51, 0x13, 0xdc, 0x4a, 0x97, 0xa4, 0x38, 0x32, 0x2c, 0x52, 0x14, 0x51,
	0x54, 0x44, 0x5d, 0xe9, 0x9a, 0x30, 0x8b, 0x2e, 0xa9, 0x88, 0x4a, 0x55, 0x25, 0x10, 0x4e, 0x9b,
	0xf9, 0x2c, 0x80, 0x76, 0xc4, 0xb9, 0x09, 0x23, 0xe6, 0xa9, 0xd7, 0x83, 0x95, 0x49, 0x99, 0x47,
	0x8b, 0x32, 0x82, 0xf4, 0x4a, 0x72, 0xfa, 0x15, 0x71, 0x84, 0xca, 0x5b, 0xb4, 0x0f, 0x4d, 0x25,
	0x61, 0xac, 0x4c, 0xa4, 0xc6, 0xe3, 0xcb, 0x35, 0xa6, 0x4e, 0xd4, 0xc2, 0xc6, 0x48, 0x1f, 0xd6,
	0xe5, 0xab, 0xc4, 0x93, 0xaf, 0x12, 0x6f, 0x5c, 0xf8, 0x56, 0xbe, 0x64, 0x4b, 0x3b, 0x82, 0x77,
	0x20, 0x68, 0x7d, 0xe9, 0xa6, 0x89, 0x67, 0x01, 0x34, 0x84, 0xb6, 0x52, 0xd2, 0xaf, 0x2d, 0xcf,
	0x2f, 0x98, 0xc5, 0xa4, 0xd6, 0xe6, 0xe5, 0x5a, 0xae, 0x22, 0xee, 0x16, 0xc2, 0x96, 0xb2, 0x31,
	0x85, 0x76, 0x01, 0x1a, 0xbb, 0x9a, 0x6e, 0x47, 0xd0, 0xde, 0x13, 0x73, 0x96, 0x88, 0x83, 0xed,
	0x90, 0x49, 0x41, 0x18, 0x47, 0x5b, 0x50, 0x13, 0xdf, 0x36, 0xd6, 0x6f, 0xc3, 0xf9, 0xa1, 0xa3,
	0x3e, 0x72, 0xba, 0x3b, 0x05, 0x1f, 0x3b, 0x92, 0x81, 0x9e, 0x42, 0x5d, 0xcf, 0x89, 0xaa, 0xa4,
	0xa2, 0xb9, 0x39, 0xa1, 0x86, 0x84, 0x66, 0xd8, 0xbf, 0x00, 0x9a, 0x5d, 0x8a, 0x65, 0x34, 0x65,
	0x04, 0x75, 0xa1, 0xae, 0x3e, 0x9a, 0xac, 0xbf, 0x2f, 0x8c, 0x1a, 0xbd, 0x9a, 0x2b, 0xa3, 0x8e,
	0x66, 0x89, 0x49, 0x2b, 0xe7, 0x62, 0x39, 0x7e, 0xeb, 0xe2, 0x76, 0x10, 0xda, 0xc7, 0xb0, 0xee,
	0x72, 0x9a, 0x5d, 0x6f, 0x1f, 0x4b, 0x55, 0x77, 0x61, 0x63, 0xaa, 0x7a, 0x3d, 0xcb, 0xf6, 0x8f,
	0xd0, 0x76, 0x08, 0x2b, 0x12, 0xf2, 0x9e, 0xbd, 0xed, 0x03, 0x9a, 0xd5, 0xbd, 0xbe, 0xbb, 0x7d,
	0x12, 0x13, 0xfe, 0x1f, 0xb8, 0x9b, 0xd5, 0xbd, 0xa6, 0xbb, 0x13, 0x51, 0x7f, 0x9c, 0xf3, 0xf7,
	0x6c, 0xee, 0x1c, 0xda, 0x33, 0xb2, 0xda, 0xdb, 0x33, 0xc1, 0x96, 0x5f, 0xe6, 0x56, 0x75, 0x73,
	0x65, 0x6b, 0x6d, 0xfb, 0xa1, 0x51, 0xd6, 0x70, 0x57, 0xd1, 0xc5, 0xb5, 0x63, 0xa8, 0x57, 0xde,
	0xd1, 0xb7, 0x80, 0x5e, 0x10, 0xbe, 0x13, 0xc7, 0x42, 0x8c, 0x5d, 0x79, 0x4f, 0x76, 0x02, 0x77,
	0xe6, 0xf2, 0xb5, 0xf9, 0x4f, 0xa0, 0x26, 0xf6, 0xa6, 0x9d, 0x5f, 0x76, 0x0e, 0x65, 0xfc, 0xaa,
	0x76, 0x77, 0x9f, 0xff, 0xfc, 0x6c, 0x14, 0x71, 0xf1, 0x21, 0x1c, 0xd0, 0xa4, 0xe7, 0x63, 0x1e,
	0x8c, 0x03, 0x9a, 0x67, 0xbd, 0x2c, 0x2e, 0x12, 0x9f, 0xe4, 0x1d, 0x16, 0x8c, 0x49, 0x82, 0x59,
	0xcf, 0x2f, 0xa2, 0x38, 0xec, 0x8d, 0x68, 0x4f, 0xa9, 0xf9, 0xea, 0xcf, 0xd2, 0x17, 0xff, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x61, 0xe0, 0xc8, 0xc6, 0x41, 0x0d, 0x00, 0x00,
}
