// Code generated by protoc-gen-go. DO NOT EDIT.
// source: x_write.proto

package protos

import (
	fmt "fmt"
	args "github.com/batchcorp/plumber-schemas/build/go/protos/args"
	records "github.com/batchcorp/plumber-schemas/build/go/protos/records"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// WriteOpts is the structure that backends accept for performing a write.
// NOTE: _conn is only used by the CLI - desktop does not need to set it.
type WriteOpts struct {
	// @gotags: kong:"embed"
	Record *records.WriteRecord `protobuf:"bytes,1,opt,name=record,proto3" json:"record,omitempty" kong:"embed"`
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *WriteOptsKafka `protobuf:"bytes,100,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='Apache ActiveMQ'"
	Activemq *WriteOptsActiveMQ `protobuf:"bytes,101,opt,name=activemq,proto3" json:"activemq,omitempty" kong:"cmd,help='Apache ActiveMQ'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	Awssqs *WriteOptsAWSSQS `protobuf:"bytes,102,opt,name=awssqs,proto3" json:"awssqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='AWS Simple Notification System'"
	Awssns *WriteOptsAWSSNS `protobuf:"bytes,103,opt,name=awssns,proto3" json:"awssns,omitempty" kong:"cmd,help='AWS Simple Notification System'"`
	// @gotags: kong:"cmd,help='NATS'"
	Nats *WriteOptsNats `protobuf:"bytes,104,opt,name=nats,proto3" json:"nats,omitempty" kong:"cmd,help='NATS'"`
	// @gotags: kong:"cmd,help='NATS Streaming'"
	NatsStreaming *WriteOptsNatsStreaming `protobuf:"bytes,105,opt,name=nats_streaming,json=natsStreaming,proto3" json:"nats_streaming,omitempty" kong:"cmd,help='NATS Streaming'"`
	// @gotags: kong:"cmd,help='NSQ'"
	Nsq *WriteOptsNSQ `protobuf:"bytes,106,opt,name=nsq,proto3" json:"nsq,omitempty" kong:"cmd,help='NSQ'"`
	// @gotags: kong:"cmd,help='Apache Pulsar'"
	Pulsar *WriteOptsPulsar `protobuf:"bytes,107,opt,name=pulsar,proto3" json:"pulsar,omitempty" kong:"cmd,help='Apache Pulsar'"`
	// @gotags: kong:"cmd,help='RabbitMQ'"
	Rabbit *WriteOptsRabbit `protobuf:"bytes,108,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='RabbitMQ'"`
	// @gotags: kong:"cmd,help='RabbitMQ Streams'"
	RabbitStreams *WriteOptsRabbitStreams `protobuf:"bytes,109,opt,name=rabbit_streams,json=rabbitStreams,proto3" json:"rabbit_streams,omitempty" kong:"cmd,help='RabbitMQ Streams'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Mqtt *WriteOptsMQTT `protobuf:"bytes,110,opt,name=mqtt,proto3" json:"mqtt,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='Azure Service Bus'"
	AzureServiceBus *WriteOptsAzureServiceBus `protobuf:"bytes,111,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty" kong:"cmd,help='Azure Service Bus'"`
	// @gotags: kong:"cmd,help='Azure Event Hub'"
	AzureEventHub *WriteOptsAzureEventHub `protobuf:"bytes,112,opt,name=azure_event_hub,json=azureEventHub,proto3" json:"azure_event_hub,omitempty" kong:"cmd,help='Azure Event Hub'"`
	// @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
	GcpPubsub *WriteOptsGCPPubSub `protobuf:"bytes,113,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty" kong:"cmd,help='Google Cloud Platform Pub/Sub'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *WriteOptsKubeMQQueue `protobuf:"bytes,114,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='Redis PubSub'"
	RedisPubsub *WriteOptsRedisPubSub `protobuf:"bytes,115,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty" kong:"cmd,help='Redis PubSub'"`
	// @gotags: kong:"cmd,help='Redis Streams'"
	RedisStreams         *WriteOptsRedisStreams `protobuf:"bytes,116,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty" kong:"cmd,help='Redis Streams'"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WriteOpts) Reset()         { *m = WriteOpts{} }
func (m *WriteOpts) String() string { return proto.CompactTextString(m) }
func (*WriteOpts) ProtoMessage()    {}
func (*WriteOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{0}
}

func (m *WriteOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOpts.Unmarshal(m, b)
}
func (m *WriteOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOpts.Marshal(b, m, deterministic)
}
func (m *WriteOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOpts.Merge(m, src)
}
func (m *WriteOpts) XXX_Size() int {
	return xxx_messageInfo_WriteOpts.Size(m)
}
func (m *WriteOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOpts.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOpts proto.InternalMessageInfo

func (m *WriteOpts) GetRecord() *records.WriteRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *WriteOpts) GetKafka() *WriteOptsKafka {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *WriteOpts) GetActivemq() *WriteOptsActiveMQ {
	if m != nil {
		return m.Activemq
	}
	return nil
}

func (m *WriteOpts) GetAwssqs() *WriteOptsAWSSQS {
	if m != nil {
		return m.Awssqs
	}
	return nil
}

func (m *WriteOpts) GetAwssns() *WriteOptsAWSSNS {
	if m != nil {
		return m.Awssns
	}
	return nil
}

func (m *WriteOpts) GetNats() *WriteOptsNats {
	if m != nil {
		return m.Nats
	}
	return nil
}

func (m *WriteOpts) GetNatsStreaming() *WriteOptsNatsStreaming {
	if m != nil {
		return m.NatsStreaming
	}
	return nil
}

func (m *WriteOpts) GetNsq() *WriteOptsNSQ {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *WriteOpts) GetPulsar() *WriteOptsPulsar {
	if m != nil {
		return m.Pulsar
	}
	return nil
}

func (m *WriteOpts) GetRabbit() *WriteOptsRabbit {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *WriteOpts) GetRabbitStreams() *WriteOptsRabbitStreams {
	if m != nil {
		return m.RabbitStreams
	}
	return nil
}

func (m *WriteOpts) GetMqtt() *WriteOptsMQTT {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *WriteOpts) GetAzureServiceBus() *WriteOptsAzureServiceBus {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *WriteOpts) GetAzureEventHub() *WriteOptsAzureEventHub {
	if m != nil {
		return m.AzureEventHub
	}
	return nil
}

func (m *WriteOpts) GetGcpPubsub() *WriteOptsGCPPubSub {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *WriteOpts) GetKubemqQueue() *WriteOptsKubeMQQueue {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *WriteOpts) GetRedisPubsub() *WriteOptsRedisPubSub {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *WriteOpts) GetRedisStreams() *WriteOptsRedisStreams {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

type WriteOptsKafka struct {
	// @gotags: kong:"embed"
	XConn *args.KafkaConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KafkaWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WriteOptsKafka) Reset()         { *m = WriteOptsKafka{} }
func (m *WriteOptsKafka) String() string { return proto.CompactTextString(m) }
func (*WriteOptsKafka) ProtoMessage()    {}
func (*WriteOptsKafka) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{1}
}

func (m *WriteOptsKafka) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsKafka.Unmarshal(m, b)
}
func (m *WriteOptsKafka) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsKafka.Marshal(b, m, deterministic)
}
func (m *WriteOptsKafka) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsKafka.Merge(m, src)
}
func (m *WriteOptsKafka) XXX_Size() int {
	return xxx_messageInfo_WriteOptsKafka.Size(m)
}
func (m *WriteOptsKafka) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsKafka.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsKafka proto.InternalMessageInfo

func (m *WriteOptsKafka) GetXConn() *args.KafkaConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsKafka) GetArgs() *args.KafkaWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsActiveMQ struct {
	// @gotags: kong:"embed"
	XConn *args.ActiveMQConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.ActiveMQWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WriteOptsActiveMQ) Reset()         { *m = WriteOptsActiveMQ{} }
func (m *WriteOptsActiveMQ) String() string { return proto.CompactTextString(m) }
func (*WriteOptsActiveMQ) ProtoMessage()    {}
func (*WriteOptsActiveMQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{2}
}

func (m *WriteOptsActiveMQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsActiveMQ.Unmarshal(m, b)
}
func (m *WriteOptsActiveMQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsActiveMQ.Marshal(b, m, deterministic)
}
func (m *WriteOptsActiveMQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsActiveMQ.Merge(m, src)
}
func (m *WriteOptsActiveMQ) XXX_Size() int {
	return xxx_messageInfo_WriteOptsActiveMQ.Size(m)
}
func (m *WriteOptsActiveMQ) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsActiveMQ.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsActiveMQ proto.InternalMessageInfo

func (m *WriteOptsActiveMQ) GetXConn() *args.ActiveMQConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsActiveMQ) GetArgs() *args.ActiveMQWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsAWSSQS struct {
	// @gotags: kong:"embed"
	XConn *args.AWSSQSConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AWSSQSWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteOptsAWSSQS) Reset()         { *m = WriteOptsAWSSQS{} }
func (m *WriteOptsAWSSQS) String() string { return proto.CompactTextString(m) }
func (*WriteOptsAWSSQS) ProtoMessage()    {}
func (*WriteOptsAWSSQS) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{3}
}

func (m *WriteOptsAWSSQS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsAWSSQS.Unmarshal(m, b)
}
func (m *WriteOptsAWSSQS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsAWSSQS.Marshal(b, m, deterministic)
}
func (m *WriteOptsAWSSQS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsAWSSQS.Merge(m, src)
}
func (m *WriteOptsAWSSQS) XXX_Size() int {
	return xxx_messageInfo_WriteOptsAWSSQS.Size(m)
}
func (m *WriteOptsAWSSQS) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsAWSSQS.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsAWSSQS proto.InternalMessageInfo

func (m *WriteOptsAWSSQS) GetXConn() *args.AWSSQSConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsAWSSQS) GetArgs() *args.AWSSQSWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsAWSSNS struct {
	// @gotags: kong:"embed"
	XConn *args.AWSSNSConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AWSSNSWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteOptsAWSSNS) Reset()         { *m = WriteOptsAWSSNS{} }
func (m *WriteOptsAWSSNS) String() string { return proto.CompactTextString(m) }
func (*WriteOptsAWSSNS) ProtoMessage()    {}
func (*WriteOptsAWSSNS) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{4}
}

func (m *WriteOptsAWSSNS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsAWSSNS.Unmarshal(m, b)
}
func (m *WriteOptsAWSSNS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsAWSSNS.Marshal(b, m, deterministic)
}
func (m *WriteOptsAWSSNS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsAWSSNS.Merge(m, src)
}
func (m *WriteOptsAWSSNS) XXX_Size() int {
	return xxx_messageInfo_WriteOptsAWSSNS.Size(m)
}
func (m *WriteOptsAWSSNS) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsAWSSNS.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsAWSSNS proto.InternalMessageInfo

func (m *WriteOptsAWSSNS) GetXConn() *args.AWSSNSConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsAWSSNS) GetArgs() *args.AWSSNSWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsNats struct {
	// @gotags: kong:"embed"
	XConn *args.NatsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NatsWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *WriteOptsNats) Reset()         { *m = WriteOptsNats{} }
func (m *WriteOptsNats) String() string { return proto.CompactTextString(m) }
func (*WriteOptsNats) ProtoMessage()    {}
func (*WriteOptsNats) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{5}
}

func (m *WriteOptsNats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsNats.Unmarshal(m, b)
}
func (m *WriteOptsNats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsNats.Marshal(b, m, deterministic)
}
func (m *WriteOptsNats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsNats.Merge(m, src)
}
func (m *WriteOptsNats) XXX_Size() int {
	return xxx_messageInfo_WriteOptsNats.Size(m)
}
func (m *WriteOptsNats) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsNats.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsNats proto.InternalMessageInfo

func (m *WriteOptsNats) GetXConn() *args.NatsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsNats) GetArgs() *args.NatsWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsNatsStreaming struct {
	// @gotags: kong:"embed"
	XConn *args.NatsStreamingConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NatsStreamingWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WriteOptsNatsStreaming) Reset()         { *m = WriteOptsNatsStreaming{} }
func (m *WriteOptsNatsStreaming) String() string { return proto.CompactTextString(m) }
func (*WriteOptsNatsStreaming) ProtoMessage()    {}
func (*WriteOptsNatsStreaming) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{6}
}

func (m *WriteOptsNatsStreaming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsNatsStreaming.Unmarshal(m, b)
}
func (m *WriteOptsNatsStreaming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsNatsStreaming.Marshal(b, m, deterministic)
}
func (m *WriteOptsNatsStreaming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsNatsStreaming.Merge(m, src)
}
func (m *WriteOptsNatsStreaming) XXX_Size() int {
	return xxx_messageInfo_WriteOptsNatsStreaming.Size(m)
}
func (m *WriteOptsNatsStreaming) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsNatsStreaming.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsNatsStreaming proto.InternalMessageInfo

func (m *WriteOptsNatsStreaming) GetXConn() *args.NatsStreamingConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsNatsStreaming) GetArgs() *args.NatsStreamingWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsNSQ struct {
	// @gotags: kong:"embed"
	XConn *args.NSQConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NSQWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WriteOptsNSQ) Reset()         { *m = WriteOptsNSQ{} }
func (m *WriteOptsNSQ) String() string { return proto.CompactTextString(m) }
func (*WriteOptsNSQ) ProtoMessage()    {}
func (*WriteOptsNSQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{7}
}

func (m *WriteOptsNSQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsNSQ.Unmarshal(m, b)
}
func (m *WriteOptsNSQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsNSQ.Marshal(b, m, deterministic)
}
func (m *WriteOptsNSQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsNSQ.Merge(m, src)
}
func (m *WriteOptsNSQ) XXX_Size() int {
	return xxx_messageInfo_WriteOptsNSQ.Size(m)
}
func (m *WriteOptsNSQ) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsNSQ.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsNSQ proto.InternalMessageInfo

func (m *WriteOptsNSQ) GetXConn() *args.NSQConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsNSQ) GetArgs() *args.NSQWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsPulsar struct {
	// @gotags: kong:"embed"
	XConn *args.PulsarConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.PulsarWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteOptsPulsar) Reset()         { *m = WriteOptsPulsar{} }
func (m *WriteOptsPulsar) String() string { return proto.CompactTextString(m) }
func (*WriteOptsPulsar) ProtoMessage()    {}
func (*WriteOptsPulsar) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{8}
}

func (m *WriteOptsPulsar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsPulsar.Unmarshal(m, b)
}
func (m *WriteOptsPulsar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsPulsar.Marshal(b, m, deterministic)
}
func (m *WriteOptsPulsar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsPulsar.Merge(m, src)
}
func (m *WriteOptsPulsar) XXX_Size() int {
	return xxx_messageInfo_WriteOptsPulsar.Size(m)
}
func (m *WriteOptsPulsar) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsPulsar.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsPulsar proto.InternalMessageInfo

func (m *WriteOptsPulsar) GetXConn() *args.PulsarConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsPulsar) GetArgs() *args.PulsarWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsRabbit struct {
	// @gotags: kong:"embed"
	XConn *args.RabbitConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RabbitWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteOptsRabbit) Reset()         { *m = WriteOptsRabbit{} }
func (m *WriteOptsRabbit) String() string { return proto.CompactTextString(m) }
func (*WriteOptsRabbit) ProtoMessage()    {}
func (*WriteOptsRabbit) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{9}
}

func (m *WriteOptsRabbit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsRabbit.Unmarshal(m, b)
}
func (m *WriteOptsRabbit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsRabbit.Marshal(b, m, deterministic)
}
func (m *WriteOptsRabbit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsRabbit.Merge(m, src)
}
func (m *WriteOptsRabbit) XXX_Size() int {
	return xxx_messageInfo_WriteOptsRabbit.Size(m)
}
func (m *WriteOptsRabbit) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsRabbit.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsRabbit proto.InternalMessageInfo

func (m *WriteOptsRabbit) GetXConn() *args.RabbitConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsRabbit) GetArgs() *args.RabbitWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsRabbitStreams struct {
	// @gotags: kong:"embed"
	XConn *args.RabbitStreamsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RabbitStreamsWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WriteOptsRabbitStreams) Reset()         { *m = WriteOptsRabbitStreams{} }
func (m *WriteOptsRabbitStreams) String() string { return proto.CompactTextString(m) }
func (*WriteOptsRabbitStreams) ProtoMessage()    {}
func (*WriteOptsRabbitStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{10}
}

func (m *WriteOptsRabbitStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsRabbitStreams.Unmarshal(m, b)
}
func (m *WriteOptsRabbitStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsRabbitStreams.Marshal(b, m, deterministic)
}
func (m *WriteOptsRabbitStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsRabbitStreams.Merge(m, src)
}
func (m *WriteOptsRabbitStreams) XXX_Size() int {
	return xxx_messageInfo_WriteOptsRabbitStreams.Size(m)
}
func (m *WriteOptsRabbitStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsRabbitStreams.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsRabbitStreams proto.InternalMessageInfo

func (m *WriteOptsRabbitStreams) GetXConn() *args.RabbitStreamsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsRabbitStreams) GetArgs() *args.RabbitStreamsWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsRedisPubSub struct {
	// @gotags: kong:"embed"
	XConn *args.RedisPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisPubSubWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *WriteOptsRedisPubSub) Reset()         { *m = WriteOptsRedisPubSub{} }
func (m *WriteOptsRedisPubSub) String() string { return proto.CompactTextString(m) }
func (*WriteOptsRedisPubSub) ProtoMessage()    {}
func (*WriteOptsRedisPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{11}
}

func (m *WriteOptsRedisPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsRedisPubSub.Unmarshal(m, b)
}
func (m *WriteOptsRedisPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsRedisPubSub.Marshal(b, m, deterministic)
}
func (m *WriteOptsRedisPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsRedisPubSub.Merge(m, src)
}
func (m *WriteOptsRedisPubSub) XXX_Size() int {
	return xxx_messageInfo_WriteOptsRedisPubSub.Size(m)
}
func (m *WriteOptsRedisPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsRedisPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsRedisPubSub proto.InternalMessageInfo

func (m *WriteOptsRedisPubSub) GetXConn() *args.RedisPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsRedisPubSub) GetArgs() *args.RedisPubSubWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsRedisStreams struct {
	// @gotags: kong:"embed"
	XConn *args.RedisStreamsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisStreamsWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *WriteOptsRedisStreams) Reset()         { *m = WriteOptsRedisStreams{} }
func (m *WriteOptsRedisStreams) String() string { return proto.CompactTextString(m) }
func (*WriteOptsRedisStreams) ProtoMessage()    {}
func (*WriteOptsRedisStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{12}
}

func (m *WriteOptsRedisStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsRedisStreams.Unmarshal(m, b)
}
func (m *WriteOptsRedisStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsRedisStreams.Marshal(b, m, deterministic)
}
func (m *WriteOptsRedisStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsRedisStreams.Merge(m, src)
}
func (m *WriteOptsRedisStreams) XXX_Size() int {
	return xxx_messageInfo_WriteOptsRedisStreams.Size(m)
}
func (m *WriteOptsRedisStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsRedisStreams.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsRedisStreams proto.InternalMessageInfo

func (m *WriteOptsRedisStreams) GetXConn() *args.RedisStreamsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsRedisStreams) GetArgs() *args.RedisStreamsWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsAzureEventHub struct {
	// @gotags: kong:"embed"
	XConn *args.AzureEventHubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AzureEventHubWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WriteOptsAzureEventHub) Reset()         { *m = WriteOptsAzureEventHub{} }
func (m *WriteOptsAzureEventHub) String() string { return proto.CompactTextString(m) }
func (*WriteOptsAzureEventHub) ProtoMessage()    {}
func (*WriteOptsAzureEventHub) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{13}
}

func (m *WriteOptsAzureEventHub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsAzureEventHub.Unmarshal(m, b)
}
func (m *WriteOptsAzureEventHub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsAzureEventHub.Marshal(b, m, deterministic)
}
func (m *WriteOptsAzureEventHub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsAzureEventHub.Merge(m, src)
}
func (m *WriteOptsAzureEventHub) XXX_Size() int {
	return xxx_messageInfo_WriteOptsAzureEventHub.Size(m)
}
func (m *WriteOptsAzureEventHub) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsAzureEventHub.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsAzureEventHub proto.InternalMessageInfo

func (m *WriteOptsAzureEventHub) GetXConn() *args.AzureEventHubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsAzureEventHub) GetArgs() *args.AzureEventHubWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsAzureServiceBus struct {
	// @gotags: kong:"embed"{
	XConn *args.AzureServiceBusConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AzureServiceBusWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WriteOptsAzureServiceBus) Reset()         { *m = WriteOptsAzureServiceBus{} }
func (m *WriteOptsAzureServiceBus) String() string { return proto.CompactTextString(m) }
func (*WriteOptsAzureServiceBus) ProtoMessage()    {}
func (*WriteOptsAzureServiceBus) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{14}
}

func (m *WriteOptsAzureServiceBus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsAzureServiceBus.Unmarshal(m, b)
}
func (m *WriteOptsAzureServiceBus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsAzureServiceBus.Marshal(b, m, deterministic)
}
func (m *WriteOptsAzureServiceBus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsAzureServiceBus.Merge(m, src)
}
func (m *WriteOptsAzureServiceBus) XXX_Size() int {
	return xxx_messageInfo_WriteOptsAzureServiceBus.Size(m)
}
func (m *WriteOptsAzureServiceBus) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsAzureServiceBus.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsAzureServiceBus proto.InternalMessageInfo

func (m *WriteOptsAzureServiceBus) GetXConn() *args.AzureServiceBusConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsAzureServiceBus) GetArgs() *args.AzureServiceBusWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsMQTT struct {
	// @gotags: kong:"embed"
	XConn *args.MQTTConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.MQTTWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *WriteOptsMQTT) Reset()         { *m = WriteOptsMQTT{} }
func (m *WriteOptsMQTT) String() string { return proto.CompactTextString(m) }
func (*WriteOptsMQTT) ProtoMessage()    {}
func (*WriteOptsMQTT) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{15}
}

func (m *WriteOptsMQTT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsMQTT.Unmarshal(m, b)
}
func (m *WriteOptsMQTT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsMQTT.Marshal(b, m, deterministic)
}
func (m *WriteOptsMQTT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsMQTT.Merge(m, src)
}
func (m *WriteOptsMQTT) XXX_Size() int {
	return xxx_messageInfo_WriteOptsMQTT.Size(m)
}
func (m *WriteOptsMQTT) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsMQTT.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsMQTT proto.InternalMessageInfo

func (m *WriteOptsMQTT) GetXConn() *args.MQTTConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsMQTT) GetArgs() *args.MQTTWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsGCPPubSub struct {
	// @gotags: kong:"embed"
	XConn *args.GCPPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.GCPPubSubWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *WriteOptsGCPPubSub) Reset()         { *m = WriteOptsGCPPubSub{} }
func (m *WriteOptsGCPPubSub) String() string { return proto.CompactTextString(m) }
func (*WriteOptsGCPPubSub) ProtoMessage()    {}
func (*WriteOptsGCPPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{16}
}

func (m *WriteOptsGCPPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsGCPPubSub.Unmarshal(m, b)
}
func (m *WriteOptsGCPPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsGCPPubSub.Marshal(b, m, deterministic)
}
func (m *WriteOptsGCPPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsGCPPubSub.Merge(m, src)
}
func (m *WriteOptsGCPPubSub) XXX_Size() int {
	return xxx_messageInfo_WriteOptsGCPPubSub.Size(m)
}
func (m *WriteOptsGCPPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsGCPPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsGCPPubSub proto.InternalMessageInfo

func (m *WriteOptsGCPPubSub) GetXConn() *args.GCPPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsGCPPubSub) GetArgs() *args.GCPPubSubWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteOptsKubeMQQueue struct {
	// @gotags: kong:"embed"
	XConn *args.KubeMQQueueConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KubeMQQueueWriteOpts `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *WriteOptsKubeMQQueue) Reset()         { *m = WriteOptsKubeMQQueue{} }
func (m *WriteOptsKubeMQQueue) String() string { return proto.CompactTextString(m) }
func (*WriteOptsKubeMQQueue) ProtoMessage()    {}
func (*WriteOptsKubeMQQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_65c735ddfb30271d, []int{17}
}

func (m *WriteOptsKubeMQQueue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteOptsKubeMQQueue.Unmarshal(m, b)
}
func (m *WriteOptsKubeMQQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteOptsKubeMQQueue.Marshal(b, m, deterministic)
}
func (m *WriteOptsKubeMQQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteOptsKubeMQQueue.Merge(m, src)
}
func (m *WriteOptsKubeMQQueue) XXX_Size() int {
	return xxx_messageInfo_WriteOptsKubeMQQueue.Size(m)
}
func (m *WriteOptsKubeMQQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteOptsKubeMQQueue.DiscardUnknown(m)
}

var xxx_messageInfo_WriteOptsKubeMQQueue proto.InternalMessageInfo

func (m *WriteOptsKubeMQQueue) GetXConn() *args.KubeMQQueueConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *WriteOptsKubeMQQueue) GetArgs() *args.KubeMQQueueWriteOpts {
	if m != nil {
		return m.Args
	}
	return nil
}

func init() {
	proto.RegisterType((*WriteOpts)(nil), "protos.WriteOpts")
	proto.RegisterType((*WriteOptsKafka)(nil), "protos.WriteOptsKafka")
	proto.RegisterType((*WriteOptsActiveMQ)(nil), "protos.WriteOptsActiveMQ")
	proto.RegisterType((*WriteOptsAWSSQS)(nil), "protos.WriteOptsAWSSQS")
	proto.RegisterType((*WriteOptsAWSSNS)(nil), "protos.WriteOptsAWSSNS")
	proto.RegisterType((*WriteOptsNats)(nil), "protos.WriteOptsNats")
	proto.RegisterType((*WriteOptsNatsStreaming)(nil), "protos.WriteOptsNatsStreaming")
	proto.RegisterType((*WriteOptsNSQ)(nil), "protos.WriteOptsNSQ")
	proto.RegisterType((*WriteOptsPulsar)(nil), "protos.WriteOptsPulsar")
	proto.RegisterType((*WriteOptsRabbit)(nil), "protos.WriteOptsRabbit")
	proto.RegisterType((*WriteOptsRabbitStreams)(nil), "protos.WriteOptsRabbitStreams")
	proto.RegisterType((*WriteOptsRedisPubSub)(nil), "protos.WriteOptsRedisPubSub")
	proto.RegisterType((*WriteOptsRedisStreams)(nil), "protos.WriteOptsRedisStreams")
	proto.RegisterType((*WriteOptsAzureEventHub)(nil), "protos.WriteOptsAzureEventHub")
	proto.RegisterType((*WriteOptsAzureServiceBus)(nil), "protos.WriteOptsAzureServiceBus")
	proto.RegisterType((*WriteOptsMQTT)(nil), "protos.WriteOptsMQTT")
	proto.RegisterType((*WriteOptsGCPPubSub)(nil), "protos.WriteOptsGCPPubSub")
	proto.RegisterType((*WriteOptsKubeMQQueue)(nil), "protos.WriteOptsKubeMQQueue")
}

func init() { proto.RegisterFile("x_write.proto", fileDescriptor_65c735ddfb30271d) }

var fileDescriptor_65c735ddfb30271d = []byte{
	// 1001 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x97, 0xdb, 0x6f, 0x1b, 0x45,
	0x14, 0xc6, 0x65, 0x48, 0xa3, 0x76, 0x52, 0x27, 0x64, 0x48, 0x9a, 0x89, 0x49, 0x43, 0x08, 0x02,
	0x51, 0x60, 0xbd, 0x90, 0x90, 0xa2, 0x3e, 0x21, 0x52, 0x15, 0x90, 0x20, 0x26, 0x1e, 0x57, 0xaa,
	0xc4, 0xcb, 0x6a, 0x67, 0xb3, 0xb5, 0x97, 0xc4, 0x7b, 0x9b, 0x9d, 0x04, 0xf5, 0x09, 0x09, 0x89,
	0xa7, 0xfe, 0xd1, 0x68, 0x2e, 0x6b, 0xcf, 0xd9, 0x1b, 0xee, 0x4b, 0x9c, 0x39, 0xf3, 0xfb, 0xce,
	0x77, 0x66, 0x8f, 0xe7, 0xd8, 0x46, 0xfd, 0xbf, 0xbc, 0xbb, 0x3c, 0x2a, 0xc2, 0x61, 0x9a, 0x27,
	0x45, 0x82, 0xd7, 0xd5, 0x0b, 0x1f, 0xe0, 0x3c, 0x0c, 0x92, 0xfc, 0x8a, 0xbb, 0xcc, 0xe7, 0x66,
	0x6f, 0xf0, 0xa1, 0x9f, 0x4f, 0xb9, 0xeb, 0x07, 0x45, 0x74, 0x1b, 0xce, 0x33, 0x13, 0x3c, 0xd0,
	0xc1, 0x37, 0x22, 0x0f, 0x1d, 0x1e, 0xe6, 0xb7, 0x51, 0x10, 0x3a, 0x4c, 0x70, 0xb3, 0x3b, 0xb0,
	0x76, 0xc3, 0xdb, 0x30, 0x2e, 0x9c, 0x99, 0x60, 0x66, 0x0f, 0xeb, 0xbd, 0x3b, 0xee, 0xf0, 0x98,
	0xd7, 0x63, 0x59, 0x19, 0xdb, 0x55, 0xb1, 0x69, 0x90, 0x3a, 0xa9, 0x60, 0x7c, 0x21, 0xff, 0x40,
	0x85, 0xaf, 0xfd, 0xd7, 0xd7, 0xbe, 0x89, 0xec, 0xe9, 0x88, 0x60, 0xe1, 0x3c, 0x73, 0x32, 0x11,
	0x8a, 0xb2, 0xf0, 0x2d, 0xb5, 0x31, 0xcf, 0x8a, 0x02, 0x04, 0x62, 0xbf, 0x28, 0x3d, 0xf6, 0x17,
	0x01, 0x87, 0x17, 0x79, 0xe8, 0xcf, 0xa3, 0x78, 0x6a, 0xb6, 0x36, 0xf5, 0x16, 0x2f, 0x0f, 0xbc,
	0xad, 0xd6, 0xa9, 0xb8, 0xe1, 0x7e, 0x0e, 0x42, 0xb9, 0xcf, 0x58, 0x54, 0x80, 0x84, 0x3a, 0x64,
	0x52, 0x72, 0x50, 0x66, 0x1e, 0x5e, 0x45, 0x1c, 0x9e, 0x88, 0x58, 0x1b, 0x40, 0x72, 0xfc, 0xf6,
	0x3e, 0x7a, 0xf0, 0x4a, 0x76, 0xe9, 0xf7, 0xb4, 0xe0, 0xf8, 0x14, 0xad, 0xeb, 0xee, 0x90, 0xde,
	0x51, 0xef, 0x8b, 0x8d, 0x93, 0x8f, 0x34, 0xc5, 0x87, 0xa6, 0x67, 0x43, 0x85, 0x52, 0xb5, 0xa0,
	0x06, 0xc5, 0x5f, 0xa3, 0x7b, 0xea, 0x59, 0x91, 0x2b, 0xa5, 0x79, 0x54, 0x6a, 0x16, 0x69, 0x7f,
	0x95, 0xbb, 0x54, 0x43, 0xf8, 0x0c, 0xdd, 0x2f, 0xfb, 0x4c, 0x42, 0x25, 0xd8, 0xaf, 0x09, 0x7e,
	0x54, 0xc0, 0xc5, 0x98, 0x2e, 0x50, 0xec, 0xa2, 0x75, 0xff, 0x8e, 0xf3, 0x8c, 0x93, 0xd7, 0x4a,
	0xb4, 0x57, 0x17, 0xbd, 0x9a, 0x4c, 0xc6, 0x13, 0x6a, 0xb0, 0x52, 0x10, 0x73, 0x32, 0xed, 0x10,
	0x8c, 0x8c, 0x20, 0xe6, 0xf8, 0x09, 0x5a, 0x93, 0x5d, 0x22, 0x33, 0x85, 0xef, 0xd6, 0xf0, 0x91,
	0x5f, 0x70, 0xaa, 0x10, 0xfc, 0x02, 0x6d, 0xca, 0x57, 0x6f, 0xd1, 0x50, 0x12, 0x29, 0xd1, 0x61,
	0xa3, 0x68, 0x52, 0x52, 0xb4, 0x1f, 0xdb, 0x4b, 0xfc, 0x39, 0x7a, 0x3f, 0xe6, 0x19, 0xf9, 0x53,
	0x69, 0x77, 0xea, 0xda, 0xc9, 0x98, 0x4a, 0x40, 0x1e, 0x45, 0xbf, 0x29, 0xc8, 0x75, 0xcb, 0x51,
	0x2e, 0xd5, 0x36, 0x35, 0x98, 0x14, 0xe8, 0xf7, 0x07, 0xb9, 0x69, 0x11, 0x50, 0xb5, 0x4d, 0x0d,
	0x26, 0x0f, 0xa4, 0xff, 0x33, 0x47, 0xe2, 0x64, 0xde, 0x72, 0x20, 0x2d, 0xd4, 0x67, 0xe0, 0xb4,
	0x9f, 0xdb, 0x4b, 0xf9, 0x08, 0xe5, 0x55, 0x20, 0x71, 0xcb, 0x23, 0xbc, 0x18, 0xbf, 0x7c, 0x49,
	0x15, 0x82, 0x7f, 0x43, 0xdb, 0xea, 0xee, 0x7a, 0xe6, 0x66, 0x7b, 0x4c, 0x70, 0x92, 0x28, 0xdd,
	0x51, 0xbd, 0x53, 0x92, 0x9c, 0x68, 0xf0, 0x5c, 0x70, 0xba, 0xe5, 0xc3, 0x00, 0xfe, 0x09, 0xe9,
	0x90, 0xa7, 0x26, 0x81, 0x37, 0x13, 0x8c, 0xa4, 0x2d, 0x07, 0x50, 0xb9, 0x5e, 0x48, 0xec, 0x17,
	0xc1, 0x68, 0xdf, 0xb7, 0x97, 0xf8, 0x19, 0x42, 0xd3, 0x20, 0xf5, 0xf4, 0xdd, 0x21, 0x99, 0x4a,
	0x31, 0xa8, 0xa5, 0xf8, 0xf9, 0xf9, 0xe5, 0xa5, 0x60, 0x13, 0xc1, 0xe8, 0x83, 0x69, 0x90, 0x5e,
	0x2a, 0x18, 0xff, 0x80, 0x1e, 0xea, 0xf9, 0xe0, 0xa9, 0xf9, 0x40, 0x72, 0x25, 0x3e, 0xa8, 0x5f,
	0x06, 0xc1, 0xc2, 0x8b, 0xf1, 0x58, 0x32, 0x74, 0x43, 0x2b, 0xd4, 0x42, 0x26, 0x50, 0x17, 0xb4,
	0x74, 0xe7, 0x2d, 0x09, 0xa8, 0x84, 0x8c, 0xff, 0x46, 0x6e, 0x16, 0xb2, 0x82, 0x73, 0xd4, 0xd7,
	0x09, 0xca, 0x1e, 0x16, 0x2a, 0xc3, 0xe3, 0xe6, 0x0c, 0x65, 0x0b, 0xb5, 0xa9, 0x59, 0x1d, 0xc7,
	0x68, 0x13, 0x5e, 0x5b, 0xfc, 0x15, 0xba, 0xe7, 0x05, 0x49, 0x1c, 0x9b, 0x89, 0xb0, 0xb8, 0xdd,
	0x72, 0xa2, 0x0c, 0x15, 0xf2, 0x3c, 0x89, 0x63, 0xba, 0x26, 0xff, 0x62, 0x17, 0xad, 0xc9, 0x38,
	0x79, 0x0f, 0x4e, 0x8f, 0x25, 0xbb, 0xac, 0x41, 0x81, 0xc7, 0x77, 0x68, 0xbb, 0x76, 0xeb, 0xf1,
	0x10, 0x5a, 0xee, 0x83, 0x34, 0x25, 0x65, 0xb9, 0x9e, 0x00, 0xd7, 0xc3, 0x46, 0xbc, 0x6a, 0x9c,
	0xa1, 0xad, 0xca, 0xe4, 0x90, 0x73, 0xcc, 0xb6, 0xdd, 0x83, 0x79, 0x14, 0x63, 0x99, 0x7e, 0x03,
	0x4c, 0x0f, 0x1a, 0xe0, 0xff, 0xb3, 0x1c, 0xad, 0x60, 0x39, 0x7a, 0x17, 0xcb, 0x51, 0xcd, 0xf2,
	0x1a, 0xf5, 0xc1, 0x28, 0xc2, 0x5f, 0x42, 0xc3, 0x5d, 0x90, 0x43, 0x12, 0x96, 0xdd, 0x10, 0xd8,
	0x0d, 0x6a, 0x68, 0xd5, 0xec, 0xdf, 0x1e, 0x7a, 0xd4, 0x3c, 0xf8, 0xf0, 0x29, 0xb4, 0x3d, 0xac,
	0xe5, 0x5a, 0xa0, 0x96, 0xff, 0xf7, 0xc0, 0xff, 0xd3, 0x76, 0x4d, 0xb5, 0x90, 0x19, 0x7a, 0x68,
	0x0f, 0x51, 0xfc, 0x04, 0xba, 0xef, 0xc0, 0x4c, 0x13, 0xfb, 0xad, 0xe4, 0x00, 0xcf, 0xfd, 0x2a,
	0xd9, 0xd5, 0x52, 0x3d, 0x83, 0xbb, 0x5b, 0xaa, 0x99, 0x15, 0x5b, 0xaa, 0xe1, 0x2e, 0x4b, 0x3d,
	0x8c, 0xbb, 0x2d, 0x35, 0xb3, 0xa2, 0xa5, 0x86, 0x3b, 0x1b, 0x0b, 0x3e, 0x00, 0xba, 0x1b, 0x0b,
	0xd0, 0x15, 0x1b, 0x0b, 0x34, 0xd5, 0x42, 0xfe, 0xee, 0xa1, 0x9d, 0xa6, 0x39, 0x88, 0xbf, 0x85,
	0x65, 0x54, 0x0e, 0xb5, 0x04, 0xad, 0x22, 0xce, 0x40, 0x11, 0x9f, 0xb4, 0x29, 0xaa, 0x25, 0xfc,
	0xd3, 0x43, 0xbb, 0x8d, 0x83, 0x14, 0x9f, 0xc0, 0x1a, 0x1e, 0xd7, 0x33, 0xd6, 0x9f, 0xc4, 0x53,
	0x50, 0xc4, 0x71, 0xab, 0xa4, 0xb3, 0x23, 0xe0, 0x13, 0xad, 0xbb, 0x23, 0x00, 0x5d, 0xb1, 0x23,
	0x40, 0x53, 0x2d, 0xe4, 0x6d, 0x0f, 0x91, 0xb6, 0x8f, 0x69, 0x7c, 0x06, 0x4b, 0x39, 0xaa, 0xa7,
	0x5d, 0xc2, 0x56, 0x31, 0xcf, 0x40, 0x31, 0x9f, 0x75, 0xa9, 0xba, 0xe6, 0x9d, 0xfc, 0xb2, 0xd1,
	0x3d, 0xef, 0x24, 0xb1, 0xe2, 0xbc, 0x93, 0x68, 0xd5, 0xec, 0x0d, 0xc2, 0xf5, 0xaf, 0x04, 0xd8,
	0x85, 0x8e, 0x30, 0xcd, 0x02, 0xb3, 0x6c, 0x4f, 0x81, 0xed, 0xc7, 0xcd, 0x7c, 0xe7, 0x4d, 0xb0,
	0xbe, 0x52, 0x74, 0xdf, 0x04, 0x0b, 0x5c, 0xf1, 0x26, 0x58, 0x8a, 0x4a, 0x09, 0xe7, 0x4f, 0xff,
	0xf8, 0x6e, 0x1a, 0x15, 0xf2, 0x47, 0x57, 0x90, 0xcc, 0x5d, 0xe6, 0x17, 0xc1, 0x2c, 0x48, 0xf2,
	0xd4, 0x4d, 0x6f, 0xc4, 0x9c, 0x85, 0xb9, 0xc3, 0x83, 0x59, 0x38, 0xf7, 0xb9, 0xcb, 0x44, 0x74,
	0x73, 0xe5, 0x4e, 0x13, 0x57, 0xe7, 0x65, 0xfa, 0x77, 0xe0, 0xe9, 0x7f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x1f, 0xa5, 0x00, 0xc1, 0x1f, 0x0e, 0x00, 0x00,
}
