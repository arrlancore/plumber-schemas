// Code generated by protoc-gen-go. DO NOT EDIT.
// source: write.proto

package protos

import (
	fmt "fmt"
	backends "github.com/batchcorp/plumber-schemas/build/go/protos/backends"
	common "github.com/batchcorp/plumber-schemas/build/go/protos/common"
	encoding "github.com/batchcorp/plumber-schemas/build/go/protos/encoding"
	records "github.com/batchcorp/plumber-schemas/build/go/protos/records"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InputType int32

const (
	InputType_PLAIN  InputType = 0
	InputType_JSONPB InputType = 1
)

var InputType_name = map[int32]string{
	0: "PLAIN",
	1: "JSONPB",
}

var InputType_value = map[string]int32{
	"PLAIN":  0,
	"JSONPB": 1,
}

func (x InputType) String() string {
	return proto.EnumName(InputType_name, int32(x))
}

func (InputType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0}
}

type WriteCLIConfig struct {
	InputIsJsonArray bool `protobuf:"varint,1,opt,name=input_is_json_array,json=inputIsJsonArray,proto3" json:"input_is_json_array,omitempty"`
	// Used by CLI to inform components, which backend to use; server uses
	// ReadConfig.connection_id.
	// @gotags: kong:"-"
	XBackendType backends.Type `protobuf:"varint,2,opt,name=_backend_type,json=BackendType,proto3,enum=protos.backends.Type" json:"_backend_type,omitempty" kong:"-"`
	// @gotags: kong:"embed,group=write"
	XWriteBackend        *WriteCLIConfig_WriteBackend `protobuf:"bytes,3,opt,name=_write_backend,json=WriteBackend,proto3" json:"_write_backend,omitempty" kong:"embed,group=write"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WriteCLIConfig) Reset()         { *m = WriteCLIConfig{} }
func (m *WriteCLIConfig) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig) ProtoMessage()    {}
func (*WriteCLIConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0}
}

func (m *WriteCLIConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig.Unmarshal(m, b)
}
func (m *WriteCLIConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig.Merge(m, src)
}
func (m *WriteCLIConfig) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig.Size(m)
}
func (m *WriteCLIConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig proto.InternalMessageInfo

func (m *WriteCLIConfig) GetInputIsJsonArray() bool {
	if m != nil {
		return m.InputIsJsonArray
	}
	return false
}

func (m *WriteCLIConfig) GetXBackendType() backends.Type {
	if m != nil {
		return m.XBackendType
	}
	return backends.Type_UNSET
}

func (m *WriteCLIConfig) GetXWriteBackend() *WriteCLIConfig_WriteBackend {
	if m != nil {
		return m.XWriteBackend
	}
	return nil
}

type WriteCLIConfig_WriteBackend struct {
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *WriteCLIConfig_WriteBackend_Kafka `protobuf:"bytes,1,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='Apache ActiveMQ'"
	Activemq *WriteCLIConfig_WriteBackend_ActiveMQ `protobuf:"bytes,2,opt,name=activemq,proto3" json:"activemq,omitempty" kong:"cmd,help='Apache ActiveMQ'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	Awssqs *WriteCLIConfig_WriteBackend_AWSSQS `protobuf:"bytes,3,opt,name=awssqs,proto3" json:"awssqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='AWS Simple Notification System'"
	Awssns *WriteCLIConfig_WriteBackend_AWSSNS `protobuf:"bytes,4,opt,name=awssns,proto3" json:"awssns,omitempty" kong:"cmd,help='AWS Simple Notification System'"`
	// @gotags: kong:"cmd,help='NATS'"
	Nats *WriteCLIConfig_WriteBackend_Nats `protobuf:"bytes,5,opt,name=nats,proto3" json:"nats,omitempty" kong:"cmd,help='NATS'"`
	// @gotags: kong:"cmd,help='NATS Streaming'"
	NatsStreaming *WriteCLIConfig_WriteBackend_NatsStreaming `protobuf:"bytes,6,opt,name=nats_streaming,json=natsStreaming,proto3" json:"nats_streaming,omitempty" kong:"cmd,help='NATS Streaming'"`
	// @gotags: kong:"cmd,help='NSQ'"
	Nsq *WriteCLIConfig_WriteBackend_NSQ `protobuf:"bytes,7,opt,name=nsq,proto3" json:"nsq,omitempty" kong:"cmd,help='NSQ'"`
	// @gotags: kong:"cmd,help='Apache Pulsar'"
	Pulsar *WriteCLIConfig_WriteBackend_Pulsar `protobuf:"bytes,8,opt,name=pulsar,proto3" json:"pulsar,omitempty" kong:"cmd,help='Apache Pulsar'"`
	// @gotags: kong:"cmd,help='RabbitMQ'"
	Rabbit *WriteCLIConfig_WriteBackend_Rabbit `protobuf:"bytes,9,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='RabbitMQ'"`
	// @gotags: kong:"cmd,help='RabbitMQ Streams'"
	RabbitStreams *WriteCLIConfig_WriteBackend_RabbitStreams `protobuf:"bytes,10,opt,name=rabbit_streams,json=rabbitStreams,proto3" json:"rabbit_streams,omitempty" kong:"cmd,help='RabbitMQ Streams'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Mqtt *WriteCLIConfig_WriteBackend_MQTT `protobuf:"bytes,11,opt,name=mqtt,proto3" json:"mqtt,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='Azure Service Bus'"
	AzureServiceBus *WriteCLIConfig_WriteBackend_AzureServiceBus `protobuf:"bytes,12,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty" kong:"cmd,help='Azure Service Bus'"`
	// @gotags: kong:"cmd,help='Azure Event Hub'"
	AzureEventHub *WriteCLIConfig_WriteBackend_AzureEventHub `protobuf:"bytes,13,opt,name=azure_event_hub,json=azureEventHub,proto3" json:"azure_event_hub,omitempty" kong:"cmd,help='Azure Event Hub'"`
	// @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
	GcpPubsub *WriteCLIConfig_WriteBackend_GCPPubSub `protobuf:"bytes,14,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty" kong:"cmd,help='Google Cloud Platform Pub/Sub'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *WriteCLIConfig_WriteBackend_KubeMQQueue `protobuf:"bytes,15,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='Redis PubSub'"
	RedisPubsub *WriteCLIConfig_WriteBackend_RedisPubSub `protobuf:"bytes,16,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty" kong:"cmd,help='Redis PubSub'"`
	// @gotags: kong:"cmd,help='Redis Streams'"
	RedisStreams         *WriteCLIConfig_WriteBackend_RedisStreams `protobuf:"bytes,17,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty" kong:"cmd,help='Redis Streams'"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend) Reset()         { *m = WriteCLIConfig_WriteBackend{} }
func (m *WriteCLIConfig_WriteBackend) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0}
}

func (m *WriteCLIConfig_WriteBackend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend.Size(m)
}
func (m *WriteCLIConfig_WriteBackend) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend) GetKafka() *WriteCLIConfig_WriteBackend_Kafka {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetActivemq() *WriteCLIConfig_WriteBackend_ActiveMQ {
	if m != nil {
		return m.Activemq
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetAwssqs() *WriteCLIConfig_WriteBackend_AWSSQS {
	if m != nil {
		return m.Awssqs
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetAwssns() *WriteCLIConfig_WriteBackend_AWSSNS {
	if m != nil {
		return m.Awssns
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetNats() *WriteCLIConfig_WriteBackend_Nats {
	if m != nil {
		return m.Nats
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetNatsStreaming() *WriteCLIConfig_WriteBackend_NatsStreaming {
	if m != nil {
		return m.NatsStreaming
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetNsq() *WriteCLIConfig_WriteBackend_NSQ {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetPulsar() *WriteCLIConfig_WriteBackend_Pulsar {
	if m != nil {
		return m.Pulsar
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetRabbit() *WriteCLIConfig_WriteBackend_Rabbit {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetRabbitStreams() *WriteCLIConfig_WriteBackend_RabbitStreams {
	if m != nil {
		return m.RabbitStreams
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetMqtt() *WriteCLIConfig_WriteBackend_MQTT {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetAzureServiceBus() *WriteCLIConfig_WriteBackend_AzureServiceBus {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetAzureEventHub() *WriteCLIConfig_WriteBackend_AzureEventHub {
	if m != nil {
		return m.AzureEventHub
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetGcpPubsub() *WriteCLIConfig_WriteBackend_GCPPubSub {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetKubemqQueue() *WriteCLIConfig_WriteBackend_KubeMQQueue {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetRedisPubsub() *WriteCLIConfig_WriteBackend_RedisPubSub {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend) GetRedisStreams() *WriteCLIConfig_WriteBackend_RedisStreams {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

type WriteCLIConfig_WriteBackend_Kafka struct {
	// @gotags: kong:"embed"
	Conn *backends.KafkaConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.KafkaWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_Kafka) Reset()         { *m = WriteCLIConfig_WriteBackend_Kafka{} }
func (m *WriteCLIConfig_WriteBackend_Kafka) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_Kafka) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_Kafka) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 0}
}

func (m *WriteCLIConfig_WriteBackend_Kafka) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Kafka.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_Kafka) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Kafka.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_Kafka) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_Kafka.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_Kafka) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Kafka.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_Kafka) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_Kafka.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_Kafka proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_Kafka) GetConn() *backends.KafkaConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_Kafka) GetArgs() *backends.KafkaWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_ActiveMQ struct {
	// @gotags: kong:"embed"
	Conn *backends.ActiveMQConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.ActiveMQWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_ActiveMQ) Reset()         { *m = WriteCLIConfig_WriteBackend_ActiveMQ{} }
func (m *WriteCLIConfig_WriteBackend_ActiveMQ) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_ActiveMQ) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_ActiveMQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 1}
}

func (m *WriteCLIConfig_WriteBackend_ActiveMQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_ActiveMQ.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_ActiveMQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_ActiveMQ.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_ActiveMQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_ActiveMQ.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_ActiveMQ) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_ActiveMQ.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_ActiveMQ) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_ActiveMQ.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_ActiveMQ proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_ActiveMQ) GetConn() *backends.ActiveMQConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_ActiveMQ) GetArgs() *backends.ActiveMQWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_AWSSQS struct {
	// @gotags: kong:"embed"
	Conn *backends.AWSSQSConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.AWSSQSWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_AWSSQS) Reset()         { *m = WriteCLIConfig_WriteBackend_AWSSQS{} }
func (m *WriteCLIConfig_WriteBackend_AWSSQS) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_AWSSQS) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_AWSSQS) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 2}
}

func (m *WriteCLIConfig_WriteBackend_AWSSQS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSQS.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_AWSSQS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSQS.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_AWSSQS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSQS.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_AWSSQS) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSQS.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_AWSSQS) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSQS.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSQS proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_AWSSQS) GetConn() *backends.AWSSQSConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_AWSSQS) GetArgs() *backends.AWSSQSWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_AWSSNS struct {
	// @gotags: kong:"embed"
	Conn *backends.AWSSNSConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.AWSSNSWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_AWSSNS) Reset()         { *m = WriteCLIConfig_WriteBackend_AWSSNS{} }
func (m *WriteCLIConfig_WriteBackend_AWSSNS) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_AWSSNS) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_AWSSNS) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 3}
}

func (m *WriteCLIConfig_WriteBackend_AWSSNS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSNS.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_AWSSNS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSNS.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_AWSSNS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSNS.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_AWSSNS) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSNS.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_AWSSNS) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSNS.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_AWSSNS proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_AWSSNS) GetConn() *backends.AWSSNSConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_AWSSNS) GetArgs() *backends.AWSSNSWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_Nats struct {
	// @gotags: kong:"embed"
	Conn *backends.NatsConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.NatsWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_Nats) Reset()         { *m = WriteCLIConfig_WriteBackend_Nats{} }
func (m *WriteCLIConfig_WriteBackend_Nats) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_Nats) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_Nats) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 4}
}

func (m *WriteCLIConfig_WriteBackend_Nats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Nats.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_Nats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Nats.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_Nats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_Nats.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_Nats) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Nats.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_Nats) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_Nats.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_Nats proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_Nats) GetConn() *backends.NatsConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_Nats) GetArgs() *backends.NatsWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_NatsStreaming struct {
	// @gotags: kong:"embed"
	Conn *backends.NatsStreamingConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.NatsStreamingWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_NatsStreaming) Reset() {
	*m = WriteCLIConfig_WriteBackend_NatsStreaming{}
}
func (m *WriteCLIConfig_WriteBackend_NatsStreaming) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_NatsStreaming) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_NatsStreaming) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 5}
}

func (m *WriteCLIConfig_WriteBackend_NatsStreaming) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_NatsStreaming.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_NatsStreaming) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_NatsStreaming.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_NatsStreaming) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_NatsStreaming.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_NatsStreaming) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_NatsStreaming.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_NatsStreaming) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_NatsStreaming.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_NatsStreaming proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_NatsStreaming) GetConn() *backends.NatsStreamingConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_NatsStreaming) GetArgs() *backends.NatsStreamingWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_NSQ struct {
	// @gotags: kong:"embed"
	Conn *backends.NSQConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.NSQWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_NSQ) Reset()         { *m = WriteCLIConfig_WriteBackend_NSQ{} }
func (m *WriteCLIConfig_WriteBackend_NSQ) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_NSQ) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_NSQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 6}
}

func (m *WriteCLIConfig_WriteBackend_NSQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_NSQ.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_NSQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_NSQ.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_NSQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_NSQ.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_NSQ) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_NSQ.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_NSQ) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_NSQ.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_NSQ proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_NSQ) GetConn() *backends.NSQConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_NSQ) GetArgs() *backends.NSQWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_Pulsar struct {
	// @gotags: kong:"embed"
	Conn *backends.PulsarConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.PulsarWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_Pulsar) Reset()         { *m = WriteCLIConfig_WriteBackend_Pulsar{} }
func (m *WriteCLIConfig_WriteBackend_Pulsar) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_Pulsar) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_Pulsar) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 7}
}

func (m *WriteCLIConfig_WriteBackend_Pulsar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Pulsar.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_Pulsar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Pulsar.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_Pulsar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_Pulsar.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_Pulsar) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Pulsar.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_Pulsar) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_Pulsar.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_Pulsar proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_Pulsar) GetConn() *backends.PulsarConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_Pulsar) GetArgs() *backends.PulsarWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_Rabbit struct {
	// @gotags: kong:"embed"
	Conn *backends.RabbitConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.RabbitWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_Rabbit) Reset()         { *m = WriteCLIConfig_WriteBackend_Rabbit{} }
func (m *WriteCLIConfig_WriteBackend_Rabbit) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_Rabbit) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_Rabbit) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 8}
}

func (m *WriteCLIConfig_WriteBackend_Rabbit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Rabbit.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_Rabbit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Rabbit.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_Rabbit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_Rabbit.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_Rabbit) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_Rabbit.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_Rabbit) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_Rabbit.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_Rabbit proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_Rabbit) GetConn() *backends.RabbitConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_Rabbit) GetArgs() *backends.RabbitWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_RabbitStreams struct {
	// @gotags: kong:"embed"
	Conn *backends.RabbitStreamsConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.RabbitStreamsWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_RabbitStreams) Reset() {
	*m = WriteCLIConfig_WriteBackend_RabbitStreams{}
}
func (m *WriteCLIConfig_WriteBackend_RabbitStreams) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_RabbitStreams) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_RabbitStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 9}
}

func (m *WriteCLIConfig_WriteBackend_RabbitStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_RabbitStreams.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_RabbitStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_RabbitStreams.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_RabbitStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_RabbitStreams.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_RabbitStreams) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_RabbitStreams.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_RabbitStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_RabbitStreams.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_RabbitStreams proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_RabbitStreams) GetConn() *backends.RabbitStreamsConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_RabbitStreams) GetArgs() *backends.RabbitStreamsWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_RedisPubSub struct {
	// @gotags: kong:"embed"
	Conn *backends.RedisPubSubConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.RedisPubSubWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_RedisPubSub) Reset() {
	*m = WriteCLIConfig_WriteBackend_RedisPubSub{}
}
func (m *WriteCLIConfig_WriteBackend_RedisPubSub) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_RedisPubSub) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_RedisPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 10}
}

func (m *WriteCLIConfig_WriteBackend_RedisPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisPubSub.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_RedisPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisPubSub.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_RedisPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisPubSub.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_RedisPubSub) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisPubSub.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_RedisPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisPubSub proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_RedisPubSub) GetConn() *backends.RedisPubSubConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_RedisPubSub) GetArgs() *backends.RedisPubSubWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_RedisStreams struct {
	// @gotags: kong:"embed"
	Conn *backends.RedisStreamsConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.RedisStreamsWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_RedisStreams) Reset() {
	*m = WriteCLIConfig_WriteBackend_RedisStreams{}
}
func (m *WriteCLIConfig_WriteBackend_RedisStreams) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_RedisStreams) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_RedisStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 11}
}

func (m *WriteCLIConfig_WriteBackend_RedisStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisStreams.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_RedisStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisStreams.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_RedisStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisStreams.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_RedisStreams) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisStreams.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_RedisStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisStreams.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_RedisStreams proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_RedisStreams) GetConn() *backends.RedisStreamsConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_RedisStreams) GetArgs() *backends.RedisStreamsWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_AzureEventHub struct {
	// @gotags: kong:"embed"
	Conn *backends.AzureEventHubConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.AzureEventHubWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_AzureEventHub) Reset() {
	*m = WriteCLIConfig_WriteBackend_AzureEventHub{}
}
func (m *WriteCLIConfig_WriteBackend_AzureEventHub) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_AzureEventHub) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_AzureEventHub) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 12}
}

func (m *WriteCLIConfig_WriteBackend_AzureEventHub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureEventHub.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_AzureEventHub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureEventHub.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_AzureEventHub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureEventHub.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_AzureEventHub) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureEventHub.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_AzureEventHub) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureEventHub.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureEventHub proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_AzureEventHub) GetConn() *backends.AzureEventHubConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_AzureEventHub) GetArgs() *backends.AzureEventHubWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_AzureServiceBus struct {
	// @gotags: kong:"embed"{
	Conn *backends.AzureServiceBusConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.AzureServiceBusWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_AzureServiceBus) Reset() {
	*m = WriteCLIConfig_WriteBackend_AzureServiceBus{}
}
func (m *WriteCLIConfig_WriteBackend_AzureServiceBus) String() string {
	return proto.CompactTextString(m)
}
func (*WriteCLIConfig_WriteBackend_AzureServiceBus) ProtoMessage() {}
func (*WriteCLIConfig_WriteBackend_AzureServiceBus) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 13}
}

func (m *WriteCLIConfig_WriteBackend_AzureServiceBus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureServiceBus.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_AzureServiceBus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureServiceBus.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_AzureServiceBus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureServiceBus.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_AzureServiceBus) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureServiceBus.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_AzureServiceBus) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureServiceBus.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_AzureServiceBus proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_AzureServiceBus) GetConn() *backends.AzureServiceBusConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_AzureServiceBus) GetArgs() *backends.AzureServiceBusWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_MQTT struct {
	// @gotags: kong:"embed"
	Conn *backends.MQTTConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.MQTTWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_MQTT) Reset()         { *m = WriteCLIConfig_WriteBackend_MQTT{} }
func (m *WriteCLIConfig_WriteBackend_MQTT) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_MQTT) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_MQTT) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 14}
}

func (m *WriteCLIConfig_WriteBackend_MQTT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_MQTT.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_MQTT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_MQTT.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_MQTT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_MQTT.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_MQTT) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_MQTT.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_MQTT) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_MQTT.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_MQTT proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_MQTT) GetConn() *backends.MQTTConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_MQTT) GetArgs() *backends.MQTTWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_GCPPubSub struct {
	// @gotags: kong:"embed"
	Conn *backends.GCPPubSubConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.GCPPubSubWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_GCPPubSub) Reset()         { *m = WriteCLIConfig_WriteBackend_GCPPubSub{} }
func (m *WriteCLIConfig_WriteBackend_GCPPubSub) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_GCPPubSub) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_GCPPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 15}
}

func (m *WriteCLIConfig_WriteBackend_GCPPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_GCPPubSub.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_GCPPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_GCPPubSub.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_GCPPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_GCPPubSub.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_GCPPubSub) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_GCPPubSub.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_GCPPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_GCPPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_GCPPubSub proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_GCPPubSub) GetConn() *backends.GCPPubSubConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_GCPPubSub) GetArgs() *backends.GCPPubSubWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteCLIConfig_WriteBackend_KubeMQQueue struct {
	// @gotags: kong:"embed"
	Conn *backends.KubeMQQueueConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.KubeMQQueueWriteArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WriteCLIConfig_WriteBackend_KubeMQQueue) Reset() {
	*m = WriteCLIConfig_WriteBackend_KubeMQQueue{}
}
func (m *WriteCLIConfig_WriteBackend_KubeMQQueue) String() string { return proto.CompactTextString(m) }
func (*WriteCLIConfig_WriteBackend_KubeMQQueue) ProtoMessage()    {}
func (*WriteCLIConfig_WriteBackend_KubeMQQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0, 0, 16}
}

func (m *WriteCLIConfig_WriteBackend_KubeMQQueue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_KubeMQQueue.Unmarshal(m, b)
}
func (m *WriteCLIConfig_WriteBackend_KubeMQQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_KubeMQQueue.Marshal(b, m, deterministic)
}
func (m *WriteCLIConfig_WriteBackend_KubeMQQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_KubeMQQueue.Merge(m, src)
}
func (m *WriteCLIConfig_WriteBackend_KubeMQQueue) XXX_Size() int {
	return xxx_messageInfo_WriteCLIConfig_WriteBackend_KubeMQQueue.Size(m)
}
func (m *WriteCLIConfig_WriteBackend_KubeMQQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteCLIConfig_WriteBackend_KubeMQQueue.DiscardUnknown(m)
}

var xxx_messageInfo_WriteCLIConfig_WriteBackend_KubeMQQueue proto.InternalMessageInfo

func (m *WriteCLIConfig_WriteBackend_KubeMQQueue) GetConn() *backends.KubeMQQueueConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *WriteCLIConfig_WriteBackend_KubeMQQueue) GetArgs() *backends.KubeMQQueueWriteArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type WriteConfig struct {
	// Required for server mode; ignored in CLI mode.
	// @gotags: kong:"-"
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty" kong:"-"`
	// @gotags: kong:"-"
	Record []*records.WriteRecord `protobuf:"bytes,2,rep,name=record,proto3" json:"record,omitempty" kong:"-"`
	// Specifying encoding options will cause the _value_ of the record to get
	// encoded and set in WriteRecord.encoded.
	// @gotags: kong:"embed,group=encode"
	EncodeOptions *encoding.EncodeOptions `protobuf:"bytes,3,opt,name=encode_options,json=encodeOptions,proto3" json:"encode_options,omitempty" kong:"embed,group=encode"`
	// Optional; CLI-specific settings
	// @gotags: kong:"embed"
	XCliConfig           *WriteCLIConfig `protobuf:"bytes,4,opt,name=_cli_config,json=CliConfig,proto3" json:"_cli_config,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WriteConfig) Reset()         { *m = WriteConfig{} }
func (m *WriteConfig) String() string { return proto.CompactTextString(m) }
func (*WriteConfig) ProtoMessage()    {}
func (*WriteConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{1}
}

func (m *WriteConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteConfig.Unmarshal(m, b)
}
func (m *WriteConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteConfig.Marshal(b, m, deterministic)
}
func (m *WriteConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteConfig.Merge(m, src)
}
func (m *WriteConfig) XXX_Size() int {
	return xxx_messageInfo_WriteConfig.Size(m)
}
func (m *WriteConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteConfig.DiscardUnknown(m)
}

var xxx_messageInfo_WriteConfig proto.InternalMessageInfo

func (m *WriteConfig) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *WriteConfig) GetRecord() []*records.WriteRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *WriteConfig) GetEncodeOptions() *encoding.EncodeOptions {
	if m != nil {
		return m.EncodeOptions
	}
	return nil
}

func (m *WriteConfig) GetXCliConfig() *WriteCLIConfig {
	if m != nil {
		return m.XCliConfig
	}
	return nil
}

type WriteRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Config               *WriteConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{2}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *WriteRequest) GetConfig() *WriteConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type WriteResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WriteResponse) Reset()         { *m = WriteResponse{} }
func (m *WriteResponse) String() string { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()    {}
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{3}
}

func (m *WriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponse.Unmarshal(m, b)
}
func (m *WriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponse.Marshal(b, m, deterministic)
}
func (m *WriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponse.Merge(m, src)
}
func (m *WriteResponse) XXX_Size() int {
	return xxx_messageInfo_WriteResponse.Size(m)
}
func (m *WriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponse proto.InternalMessageInfo

func (m *WriteResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterEnum("protos.InputType", InputType_name, InputType_value)
	proto.RegisterType((*WriteCLIConfig)(nil), "protos.WriteCLIConfig")
	proto.RegisterType((*WriteCLIConfig_WriteBackend)(nil), "protos.WriteCLIConfig.WriteBackend")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_Kafka)(nil), "protos.WriteCLIConfig.WriteBackend.Kafka")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_ActiveMQ)(nil), "protos.WriteCLIConfig.WriteBackend.ActiveMQ")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_AWSSQS)(nil), "protos.WriteCLIConfig.WriteBackend.AWSSQS")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_AWSSNS)(nil), "protos.WriteCLIConfig.WriteBackend.AWSSNS")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_Nats)(nil), "protos.WriteCLIConfig.WriteBackend.Nats")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_NatsStreaming)(nil), "protos.WriteCLIConfig.WriteBackend.NatsStreaming")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_NSQ)(nil), "protos.WriteCLIConfig.WriteBackend.NSQ")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_Pulsar)(nil), "protos.WriteCLIConfig.WriteBackend.Pulsar")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_Rabbit)(nil), "protos.WriteCLIConfig.WriteBackend.Rabbit")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_RabbitStreams)(nil), "protos.WriteCLIConfig.WriteBackend.RabbitStreams")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_RedisPubSub)(nil), "protos.WriteCLIConfig.WriteBackend.RedisPubSub")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_RedisStreams)(nil), "protos.WriteCLIConfig.WriteBackend.RedisStreams")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_AzureEventHub)(nil), "protos.WriteCLIConfig.WriteBackend.AzureEventHub")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_AzureServiceBus)(nil), "protos.WriteCLIConfig.WriteBackend.AzureServiceBus")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_MQTT)(nil), "protos.WriteCLIConfig.WriteBackend.MQTT")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_GCPPubSub)(nil), "protos.WriteCLIConfig.WriteBackend.GCPPubSub")
	proto.RegisterType((*WriteCLIConfig_WriteBackend_KubeMQQueue)(nil), "protos.WriteCLIConfig.WriteBackend.KubeMQQueue")
	proto.RegisterType((*WriteConfig)(nil), "protos.WriteConfig")
	proto.RegisterType((*WriteRequest)(nil), "protos.WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "protos.WriteResponse")
}

func init() { proto.RegisterFile("write.proto", fileDescriptor_67966b2b12a73214) }

var fileDescriptor_67966b2b12a73214 = []byte{
	// 1347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0x6d, 0x93, 0xd3, 0x44,
	0x1c, 0xb7, 0xdc, 0x5d, 0xbd, 0x6e, 0xaf, 0xe5, 0xd8, 0x13, 0x0c, 0x45, 0xb0, 0x16, 0x95, 0x03,
	0x69, 0x2b, 0x77, 0x88, 0xe2, 0xc3, 0x30, 0x77, 0x37, 0x8c, 0x14, 0xa1, 0xb4, 0x5b, 0x1c, 0xd4,
	0x37, 0x99, 0x24, 0x5d, 0xda, 0x48, 0x9b, 0xa4, 0xd9, 0x2c, 0x88, 0x2f, 0x9c, 0x71, 0xc6, 0x57,
	0xbe, 0xf1, 0x4b, 0xf8, 0xd9, 0x1c, 0x5f, 0xf8, 0x21, 0x9c, 0x7d, 0x48, 0xba, 0x9b, 0xe4, 0x68,
	0xfa, 0xaa, 0xd9, 0xff, 0xfe, 0x1e, 0xfe, 0xfb, 0xd0, 0x7f, 0xb2, 0x0b, 0xaa, 0xaf, 0x42, 0x37,
	0xc2, 0x9d, 0x20, 0xf4, 0x23, 0x1f, 0x96, 0xf9, 0x0f, 0x69, 0xec, 0x85, 0xd8, 0xf1, 0xc3, 0x31,
	0xe9, 0xbe, 0xb0, 0x9e, 0xbf, 0xb0, 0x44, 0x67, 0xe3, 0x9c, 0xe3, 0xcf, 0xe7, 0xbe, 0xd7, 0xb5,
	0x68, 0x34, 0x95, 0x21, 0x18, 0xe3, 0x6c, 0x8b, 0x48, 0x8d, 0xc6, 0x9e, 0x84, 0x91, 0xc8, 0x8a,
	0x28, 0x91, 0xc1, 0x0b, 0xd8, 0x73, 0xfc, 0xb1, 0xeb, 0x4d, 0xba, 0x7e, 0x10, 0xb9, 0xbe, 0x17,
	0xc7, 0xdf, 0xb5, 0x2d, 0xe7, 0x05, 0xf6, 0xb8, 0x82, 0x78, 0xc8, 0x74, 0x58, 0x4e, 0xe4, 0xbe,
	0xc4, 0xf3, 0x85, 0xec, 0x68, 0x2e, 0x3b, 0x7e, 0xa5, 0x21, 0x6e, 0x13, 0x1c, 0xbe, 0x74, 0x1d,
	0xdc, 0xb6, 0x13, 0xaf, 0x2b, 0x29, 0x04, 0x7e, 0x89, 0xbd, 0xa8, 0x3d, 0xa5, 0x76, 0x9c, 0xcb,
	0xb2, 0xff, 0x15, 0x69, 0x93, 0x24, 0x97, 0x54, 0x7c, 0x11, 0xc7, 0x2f, 0x26, 0xf1, 0x89, 0x13,
	0xb4, 0x03, 0x6a, 0x93, 0x44, 0xea, 0x9d, 0xa4, 0x4b, 0x9d, 0xa8, 0x4b, 0xcb, 0x28, 0xb5, 0xf1,
	0x7c, 0xd1, 0x5e, 0x50, 0x4c, 0x93, 0xe9, 0x49, 0x3a, 0xe7, 0x8b, 0x28, 0xca, 0x04, 0x3d, 0x2b,
	0x8a, 0x7d, 0x2f, 0x6b, 0xc1, 0x36, 0x89, 0x42, 0x6c, 0xcd, 0x5d, 0x6f, 0x12, 0xcf, 0xfd, 0xb2,
	0x9b, 0xc4, 0x93, 0x73, 0x3e, 0x89, 0x05, 0x74, 0x46, 0xac, 0x30, 0x13, 0x0e, 0x2d, 0xdb, 0x76,
	0xa3, 0x8c, 0x81, 0x08, 0x4b, 0x0b, 0x92, 0x19, 0x46, 0x88, 0xc7, 0x2e, 0xd1, 0x47, 0xfe, 0x5e,
	0xaa, 0x53, 0xa3, 0xb6, 0xfe, 0xbb, 0x04, 0xea, 0xcf, 0xd8, 0xbe, 0x3a, 0x79, 0xd4, 0x3b, 0xf1,
	0xbd, 0xe7, 0xee, 0x04, 0xb6, 0xc1, 0x9e, 0xeb, 0x05, 0x34, 0x32, 0x5d, 0x62, 0xfe, 0x4c, 0x7c,
	0xcf, 0xb4, 0xc2, 0xd0, 0x7a, 0x6d, 0x94, 0x9a, 0xa5, 0xfd, 0x6d, 0xb4, 0xcb, 0xbb, 0x7a, 0xe4,
	0x21, 0xf1, 0xbd, 0x23, 0x16, 0x87, 0x77, 0x41, 0xcd, 0x94, 0x16, 0x66, 0xf4, 0x3a, 0xc0, 0xc6,
	0x99, 0x66, 0x69, 0xbf, 0x7e, 0x70, 0x5e, 0x18, 0x90, 0x4e, 0xb2, 0x5d, 0x9e, 0xbe, 0x0e, 0x30,
	0xaa, 0x1e, 0x8b, 0x26, 0x6b, 0xc0, 0x1e, 0xa8, 0x9b, 0x7c, 0x53, 0xc7, 0x02, 0xc6, 0x46, 0xb3,
	0xb4, 0x5f, 0x3d, 0xb8, 0x1a, 0x73, 0xf5, 0xcc, 0x44, 0x53, 0x0a, 0xa0, 0x1d, 0xb5, 0xd5, 0xf8,
	0xbb, 0x01, 0xb4, 0x00, 0xbc, 0x07, 0xb6, 0xf8, 0x4a, 0xf3, 0xbc, 0xab, 0x07, 0xd7, 0x0b, 0x48,
	0x76, 0xbe, 0x63, 0x04, 0x24, 0x78, 0xf0, 0x01, 0xd8, 0x8e, 0x37, 0x34, 0x1f, 0x52, 0xf5, 0xe0,
	0x66, 0x11, 0x8d, 0x23, 0xce, 0x79, 0x3c, 0x44, 0x09, 0x1b, 0x1e, 0x83, 0xb2, 0xf5, 0x8a, 0x90,
	0x05, 0x91, 0xc3, 0xbb, 0x51, 0x48, 0xe7, 0xd9, 0x68, 0x34, 0x1c, 0x21, 0xc9, 0x8c, 0x35, 0x3c,
	0x62, 0x6c, 0xae, 0xa7, 0xd1, 0x97, 0x1a, 0x1e, 0x81, 0x5f, 0x83, 0x4d, 0xb6, 0x3f, 0x8d, 0x2d,
	0xae, 0xb0, 0x5f, 0x44, 0xa1, 0x6f, 0x45, 0x04, 0x71, 0x16, 0xfc, 0x01, 0xd4, 0xd9, 0xaf, 0x99,
	0xec, 0x6e, 0xa3, 0xcc, 0x75, 0x6e, 0x15, 0xd5, 0x19, 0xc5, 0x44, 0x54, 0xf3, 0xd4, 0x26, 0xbc,
	0x0b, 0x36, 0x3c, 0xb2, 0x30, 0xde, 0xe6, 0x72, 0xd7, 0x0a, 0xc9, 0x8d, 0x86, 0x88, 0x71, 0xd8,
	0xb4, 0x88, 0xff, 0x8f, 0xb1, 0x5d, 0x7c, 0x5a, 0x06, 0x9c, 0x81, 0x24, 0x93, 0x69, 0x88, 0x7f,
	0x95, 0x51, 0x29, 0xae, 0x81, 0x38, 0x03, 0x49, 0x26, 0x9b, 0x1c, 0xf1, 0x24, 0xa7, 0x87, 0x18,
	0xa0, 0xf8, 0xe4, 0x08, 0x2d, 0x31, 0x1f, 0x04, 0xd5, 0x42, 0xb5, 0xc9, 0x16, 0x8d, 0x95, 0x1f,
	0xa3, 0x5a, 0x7c, 0xd1, 0x1e, 0x0f, 0x9f, 0x3e, 0x45, 0x9c, 0x05, 0x4d, 0x70, 0x8e, 0x97, 0x56,
	0x53, 0x16, 0x5f, 0xd3, 0xa6, 0xc4, 0xd8, 0xe1, 0x52, 0x87, 0x85, 0x76, 0x10, 0x23, 0x8f, 0x04,
	0xf7, 0x98, 0x12, 0x74, 0xd6, 0xd2, 0x03, 0xf0, 0x47, 0x20, 0x42, 0x26, 0xaf, 0xdd, 0xe6, 0x94,
	0xda, 0x46, 0xad, 0xf8, 0xc8, 0xb9, 0xfc, 0x7d, 0xc6, 0x7c, 0x40, 0x6d, 0x54, 0xb3, 0xd4, 0x26,
	0x7c, 0x04, 0xc0, 0xc4, 0x09, 0x4c, 0x51, 0xcc, 0x8c, 0x3a, 0x57, 0x6d, 0x17, 0x51, 0xfd, 0xf6,
	0x64, 0x30, 0xa0, 0xf6, 0x88, 0xda, 0xa8, 0x32, 0x71, 0x82, 0x01, 0xe7, 0x43, 0x04, 0x76, 0x44,
	0x8d, 0x37, 0x79, 0x8d, 0x37, 0xce, 0x72, 0xbd, 0x6e, 0xa1, 0xb2, 0x40, 0x6d, 0xfc, 0x78, 0x38,
	0x64, 0x34, 0x54, 0x15, 0x22, 0xbc, 0xc1, 0x34, 0x79, 0x4d, 0x8d, 0x73, 0xdc, 0x2d, 0xae, 0x89,
	0x18, 0x4f, 0x66, 0x59, 0x0d, 0x65, 0x83, 0xe5, 0xf9, 0x3d, 0xa8, 0x09, 0xcd, 0x78, 0x23, 0x9d,
	0xe3, 0xa2, 0x9f, 0x16, 0x16, 0x8d, 0xf7, 0x91, 0x48, 0x4d, 0xb6, 0x1a, 0x33, 0xb0, 0xc5, 0xab,
	0x1b, 0xec, 0x80, 0x4d, 0xc7, 0xf7, 0x3c, 0x59, 0x16, 0x1b, 0x99, 0x2a, 0xcd, 0x51, 0x27, 0xbe,
	0xe7, 0x21, 0x8e, 0x83, 0x87, 0x60, 0xd3, 0x0a, 0x27, 0x44, 0x96, 0xc0, 0xf7, 0xf3, 0xf1, 0x3c,
	0x8b, 0xa3, 0x70, 0x42, 0x10, 0x07, 0x37, 0x28, 0xd8, 0x8e, 0xeb, 0x20, 0xbc, 0xa5, 0x19, 0x5e,
	0xce, 0x08, 0xc4, 0x40, 0xc5, 0xf3, 0x8e, 0xe6, 0xd9, 0x3a, 0x95, 0x92, 0xb6, 0xf5, 0x41, 0x59,
	0x94, 0x4d, 0xd8, 0xd5, 0x4c, 0x2f, 0x65, 0x15, 0x38, 0x4c, 0xb1, 0xbc, 0xad, 0x59, 0x36, 0x4f,
	0x21, 0x9c, 0x62, 0xd8, 0x2f, 0x66, 0xd8, 0x5f, 0xd7, 0xb0, 0x9f, 0x31, 0x74, 0xc1, 0x26, 0x2b,
	0xa5, 0xb0, 0xad, 0xd9, 0x5d, 0xcc, 0xb0, 0x19, 0x48, 0x31, 0x3b, 0xd0, 0xcc, 0xae, 0xe4, 0xc2,
	0xd3, 0x56, 0x7f, 0x94, 0x40, 0x4d, 0x2b, 0xdb, 0x6c, 0x59, 0x14, 0xd3, 0x56, 0xae, 0x4a, 0x82,
	0x56, 0xdc, 0xbf, 0xd2, 0xdc, 0xaf, 0xbd, 0x99, 0x97, 0x4e, 0xe3, 0x39, 0xd8, 0xe8, 0x8f, 0x86,
	0xf0, 0xa6, 0xe6, 0x6d, 0x64, 0x35, 0x46, 0xea, 0x06, 0xba, 0xa5, 0x39, 0x5e, 0xce, 0x43, 0xe7,
	0x2c, 0xa5, 0x78, 0x2f, 0xac, 0x5c, 0x4a, 0x01, 0x5b, 0x63, 0x29, 0x05, 0x21, 0xc7, 0x50, 0x14,
	0xfe, 0x95, 0x86, 0x02, 0xb6, 0x86, 0xa1, 0x20, 0xe4, 0x2d, 0xa8, 0xf6, 0xaa, 0x59, 0xb9, 0xa0,
	0x1a, 0x7a, 0x8d, 0x05, 0xd5, 0x78, 0xe9, 0x34, 0x7e, 0x03, 0x55, 0xa5, 0xf8, 0xb1, 0xb1, 0x28,
	0x39, 0xe4, 0x8c, 0x65, 0x89, 0x55, 0x32, 0xb8, 0xab, 0x65, 0xf0, 0xd1, 0x9b, 0x58, 0x69, 0xff,
	0xdf, 0x4b, 0x60, 0x47, 0x2d, 0x94, 0xf0, 0x33, 0x2d, 0x83, 0x0f, 0xf2, 0xb5, 0xb2, 0x93, 0xf0,
	0xa5, 0x96, 0xc2, 0xc7, 0x6f, 0xa4, 0xe5, 0x2d, 0x85, 0xf6, 0xee, 0x5b, 0xb9, 0x14, 0x1a, 0x7a,
	0x8d, 0xa5, 0xd0, 0x78, 0xe9, 0x34, 0xfe, 0x2c, 0x81, 0xb3, 0xa9, 0x37, 0x3c, 0xfc, 0x42, 0x4b,
	0xe4, 0xc3, 0x7c, 0xc1, 0x25, 0x5e, 0x49, 0xe5, 0x1b, 0x2d, 0x95, 0xeb, 0xab, 0x98, 0x39, 0xa5,
	0x8d, 0x7d, 0xb8, 0xac, 0x2c, 0x6d, 0x0c, 0xb4, 0x46, 0x69, 0x63, 0xf0, 0xb4, 0xd5, 0x2f, 0xa0,
	0x92, 0x7c, 0x23, 0x30, 0x01, 0xc5, 0x2f, 0x2b, 0x90, 0x20, 0x15, 0xd3, 0xcf, 0x35, 0xd3, 0xab,
	0xa7, 0x73, 0x72, 0x36, 0xbf, 0xf2, 0x35, 0xb1, 0x72, 0xf3, 0x2b, 0xd8, 0x35, 0x36, 0xbf, 0xc2,
	0x4a, 0xf9, 0xb7, 0xfe, 0x29, 0x81, 0xaa, 0xf8, 0x82, 0x10, 0x67, 0xbd, 0xab, 0xa0, 0xc6, 0x24,
	0xb1, 0xc3, 0x8e, 0xfa, 0xa6, 0x3b, 0xe6, 0x99, 0x54, 0xd0, 0xce, 0x32, 0xd8, 0x1b, 0xc3, 0x43,
	0x50, 0x16, 0xb7, 0x07, 0xc6, 0x99, 0xe6, 0x86, 0x5a, 0xa1, 0xe4, 0x9d, 0x82, 0xf8, 0x08, 0x41,
	0xbc, 0x81, 0x24, 0x14, 0xde, 0x07, 0x75, 0x7e, 0x93, 0x80, 0x4d, 0x79, 0x8f, 0x20, 0x0f, 0x3f,
	0xc9, 0x04, 0xc7, 0xf7, 0x0c, 0x9d, 0xfb, 0x1c, 0xf6, 0x44, 0xa0, 0x50, 0x0d, 0xab, 0x4d, 0x78,
	0x07, 0x54, 0x4d, 0x67, 0xe6, 0x9a, 0x0e, 0xcf, 0x57, 0x1e, 0x7e, 0x2e, 0xe4, 0x7f, 0x0c, 0xa1,
	0xca, 0xc9, 0xcc, 0x15, 0x8f, 0x2d, 0x2c, 0x8f, 0x83, 0x08, 0x2f, 0x28, 0x26, 0x11, 0xdc, 0x07,
	0x9b, 0x16, 0x8d, 0xa6, 0xc6, 0x5f, 0x7d, 0xae, 0xb0, 0x17, 0x2b, 0x88, 0x2b, 0x90, 0xce, 0x11,
	0x8d, 0xa6, 0x88, 0x23, 0xe0, 0x27, 0xa0, 0x2c, 0xcd, 0x4a, 0x3a, 0x54, 0x99, 0x37, 0x24, 0x21,
	0xad, 0x7b, 0xa0, 0x26, 0x6d, 0x48, 0xe0, 0x7b, 0x04, 0xc3, 0x0e, 0x28, 0x8b, 0xeb, 0x14, 0xe3,
	0x5f, 0x71, 0x9e, 0x39, 0x9f, 0x72, 0x1a, 0xf1, 0x5e, 0x24, 0x51, 0x37, 0x5a, 0xa0, 0xd2, 0x63,
	0x27, 0x6a, 0x7e, 0x1e, 0xae, 0x80, 0xad, 0xc1, 0xa3, 0xa3, 0x5e, 0x7f, 0xf7, 0x2d, 0x08, 0x40,
	0xf9, 0xe1, 0xe8, 0x49, 0x7f, 0x70, 0xbc, 0x5b, 0x3a, 0xbe, 0xf3, 0xd3, 0xed, 0x89, 0x1b, 0x4d,
	0xa9, 0xcd, 0x34, 0xba, 0xb6, 0x15, 0x39, 0x53, 0xc7, 0x0f, 0x83, 0x6e, 0x30, 0xa3, 0x73, 0x1b,
	0x87, 0x6d, 0xe2, 0x4c, 0xf1, 0xdc, 0x22, 0x5d, 0x9b, 0xba, 0xb3, 0x71, 0x77, 0xe2, 0x77, 0x85,
	0xa3, 0x2d, 0xee, 0x88, 0x0e, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x3a, 0x6c, 0x37, 0x39,
	0x12, 0x00, 0x00,
}
