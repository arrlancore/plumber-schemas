// Code generated by protoc-gen-go. DO NOT EDIT.
// source: write.proto

package protos

import (
	fmt "fmt"
	common "github.com/batchcorp/plumber-schemas/build/go/protos/common"
	records "github.com/batchcorp/plumber-schemas/build/go/protos/records"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WriteRecord struct {
	// Types that are valid to be assigned to Records:
	//	*WriteRecord_Kafka
	Records              isWriteRecord_Records `protobuf_oneof:"Records"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WriteRecord) Reset()         { *m = WriteRecord{} }
func (m *WriteRecord) String() string { return proto.CompactTextString(m) }
func (*WriteRecord) ProtoMessage()    {}
func (*WriteRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{0}
}

func (m *WriteRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRecord.Unmarshal(m, b)
}
func (m *WriteRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRecord.Marshal(b, m, deterministic)
}
func (m *WriteRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRecord.Merge(m, src)
}
func (m *WriteRecord) XXX_Size() int {
	return xxx_messageInfo_WriteRecord.Size(m)
}
func (m *WriteRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRecord.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRecord proto.InternalMessageInfo

type isWriteRecord_Records interface {
	isWriteRecord_Records()
}

type WriteRecord_Kafka struct {
	Kafka *records.Kafka `protobuf:"bytes,100,opt,name=kafka,proto3,oneof"`
}

func (*WriteRecord_Kafka) isWriteRecord_Records() {}

func (m *WriteRecord) GetRecords() isWriteRecord_Records {
	if m != nil {
		return m.Records
	}
	return nil
}

func (m *WriteRecord) GetKafka() *records.Kafka {
	if x, ok := m.GetRecords().(*WriteRecord_Kafka); ok {
		return x.Kafka
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WriteRecord) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WriteRecord_Kafka)(nil),
	}
}

type WriteRequest struct {
	// Every gRPC request must have a valid auth config
	Auth         *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	ConnectionId string       `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	// We need to use a WriteRecord as a wrapper since there is no way to "repeated oneof ..."
	Records              []*WriteRecord `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{1}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *WriteRequest) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *WriteRequest) GetRecords() []*WriteRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type WriteResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WriteResponse) Reset()         { *m = WriteResponse{} }
func (m *WriteResponse) String() string { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()    {}
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67966b2b12a73214, []int{2}
}

func (m *WriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponse.Unmarshal(m, b)
}
func (m *WriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponse.Marshal(b, m, deterministic)
}
func (m *WriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponse.Merge(m, src)
}
func (m *WriteResponse) XXX_Size() int {
	return xxx_messageInfo_WriteResponse.Size(m)
}
func (m *WriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponse proto.InternalMessageInfo

func (m *WriteResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*WriteRecord)(nil), "protos.WriteRecord")
	proto.RegisterType((*WriteRequest)(nil), "protos.WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "protos.WriteResponse")
}

func init() { proto.RegisterFile("write.proto", fileDescriptor_67966b2b12a73214) }

var fileDescriptor_67966b2b12a73214 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x4f, 0x4b, 0xc4, 0x30,
	0x10, 0xc5, 0xad, 0x7f, 0xb6, 0x6c, 0xba, 0x7b, 0xb0, 0x45, 0x28, 0x7b, 0x2a, 0xf5, 0xd2, 0xcb,
	0x36, 0xa0, 0xe2, 0x55, 0xdc, 0x8b, 0x8a, 0xe0, 0x21, 0x1e, 0x04, 0x2f, 0x92, 0xa6, 0x71, 0x5b,
	0x76, 0xdb, 0xd4, 0xcc, 0x04, 0xbf, 0x84, 0xe0, 0xd7, 0xf4, 0x63, 0x48, 0x93, 0x2c, 0xae, 0xa7,
	0xc0, 0x7b, 0x2f, 0xbf, 0x79, 0xc3, 0x90, 0xe8, 0x53, 0xb7, 0x28, 0xcb, 0x41, 0x2b, 0x54, 0xf1,
	0xc4, 0x3e, 0xb0, 0x48, 0xb4, 0x14, 0x4a, 0xd7, 0x40, 0x37, 0xfc, 0x7d, 0xc3, 0x9d, 0xb9, 0x38,
	0x15, 0xaa, 0xeb, 0x54, 0x4f, 0xb9, 0xc1, 0xc6, 0x4b, 0x89, 0x97, 0x00, 0x39, 0x1a, 0x70, 0x62,
	0x7e, 0x47, 0xa2, 0x97, 0x91, 0xc9, 0x2c, 0x23, 0x5e, 0x92, 0x13, 0x4b, 0x49, 0xeb, 0x2c, 0x28,
	0xa2, 0x8b, 0x33, 0x97, 0x82, 0xd2, 0x8f, 0x28, 0x1f, 0x47, 0xf3, 0xfe, 0x80, 0xb9, 0xd4, 0x6a,
	0x4a, 0x42, 0xf7, 0x11, 0xf2, 0xaf, 0x80, 0xcc, 0x3c, 0xe9, 0xc3, 0x48, 0xc0, 0xb8, 0x20, 0xc7,
	0xe3, 0xf0, 0xf4, 0xfb, 0xc9, 0xa2, 0x92, 0x1d, 0xca, 0xb5, 0x28, 0x6f, 0x0d, 0x36, 0xcc, 0x26,
	0xe2, 0x73, 0x32, 0x17, 0xaa, 0xef, 0xa5, 0xc0, 0x56, 0xf5, 0x6f, 0x6d, 0x9d, 0x06, 0x59, 0x50,
	0x4c, 0xd9, 0xec, 0x4f, 0x7c, 0x18, 0x9b, 0x85, 0xbe, 0x44, 0x7a, 0x98, 0x1d, 0xed, 0x03, 0xf7,
	0xfa, 0xb3, 0x5d, 0x26, 0xbf, 0x21, 0x73, 0xaf, 0xc3, 0xa0, 0x7a, 0x90, 0x71, 0x49, 0x26, 0x6e,
	0xf1, 0xf4, 0x27, 0xfc, 0xbf, 0x9b, 0x2f, 0xf4, 0x6c, 0x5d, 0xe6, 0x53, 0xab, 0xeb, 0xd7, 0xab,
	0x75, 0x8b, 0x8d, 0xa9, 0x46, 0x9f, 0x56, 0x1c, 0x45, 0x23, 0x94, 0x1e, 0xe8, 0xb0, 0x35, 0x5d,
	0x25, 0xf5, 0x12, 0x44, 0x23, 0x3b, 0x0e, 0xb4, 0x32, 0xed, 0xb6, 0xa6, 0x6b, 0x45, 0x1d, 0xad,
	0x72, 0x57, 0xb9, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x33, 0x13, 0x51, 0xab, 0x01, 0x00,
	0x00,
}
