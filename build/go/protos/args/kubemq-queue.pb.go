// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kubemq-queue.proto

package args

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KubeMQQueueConn struct {
	// @gotags: kong:"help='Dial string for KubeMQ server',env='PLUMBER_RELAY_KUBEMQ_QUEUE_ADDRESS',default='localhost:50000',required"
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" kong:"help='Dial string for KubeMQ server',env='PLUMBER_RELAY_KUBEMQ_QUEUE_ADDRESS',default='localhost:50000',required"`
	// @gotags: kong:"help='Client JWT authentication token',env='PLUMBER_RELAY_KUBEMQ_QUEUE_AUTH_TOKEN'"
	AuthToken string `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty" kong:"help='Client JWT authentication token',env='PLUMBER_RELAY_KUBEMQ_QUEUE_AUTH_TOKEN'"`
	// @gotags: kong:"help='KubeMQ client cert file',env='PLUMBER_RELAY_KUBEMQ_QUEUE_TLS_CERT_FILE',type=existingfile"
	TlsCertFile          string   `protobuf:"bytes,3,opt,name=tls_cert_file,json=tlsCertFile,proto3" json:"tls_cert_file,omitempty" kong:"help='KubeMQ client cert file',env='PLUMBER_RELAY_KUBEMQ_QUEUE_TLS_CERT_FILE',type=existingfile"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubeMQQueueConn) Reset()         { *m = KubeMQQueueConn{} }
func (m *KubeMQQueueConn) String() string { return proto.CompactTextString(m) }
func (*KubeMQQueueConn) ProtoMessage()    {}
func (*KubeMQQueueConn) Descriptor() ([]byte, []int) {
	return fileDescriptor_860d5c93b91aa3b9, []int{0}
}

func (m *KubeMQQueueConn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeMQQueueConn.Unmarshal(m, b)
}
func (m *KubeMQQueueConn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeMQQueueConn.Marshal(b, m, deterministic)
}
func (m *KubeMQQueueConn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeMQQueueConn.Merge(m, src)
}
func (m *KubeMQQueueConn) XXX_Size() int {
	return xxx_messageInfo_KubeMQQueueConn.Size(m)
}
func (m *KubeMQQueueConn) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeMQQueueConn.DiscardUnknown(m)
}

var xxx_messageInfo_KubeMQQueueConn proto.InternalMessageInfo

func (m *KubeMQQueueConn) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *KubeMQQueueConn) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *KubeMQQueueConn) GetTlsCertFile() string {
	if m != nil {
		return m.TlsCertFile
	}
	return ""
}

type KubeMQQueueReadOpts struct {
	// @gotags: kong:"help='KubeMQ client ID',env='PLUMBER_RELAY_KUBEMQ_QUEUE_CLIENT_ID',default=plumber"
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty" kong:"help='KubeMQ client ID',env='PLUMBER_RELAY_KUBEMQ_QUEUE_CLIENT_ID',default=plumber"`
	// @gotags: kong:"help='KubeMQ queue name',env='PLUMBER_RELAY_KUBEMQ_QUEUE_QUEUE'"
	QueueName            string   `protobuf:"bytes,3,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty" kong:"help='KubeMQ queue name',env='PLUMBER_RELAY_KUBEMQ_QUEUE_QUEUE'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubeMQQueueReadOpts) Reset()         { *m = KubeMQQueueReadOpts{} }
func (m *KubeMQQueueReadOpts) String() string { return proto.CompactTextString(m) }
func (*KubeMQQueueReadOpts) ProtoMessage()    {}
func (*KubeMQQueueReadOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_860d5c93b91aa3b9, []int{1}
}

func (m *KubeMQQueueReadOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeMQQueueReadOpts.Unmarshal(m, b)
}
func (m *KubeMQQueueReadOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeMQQueueReadOpts.Marshal(b, m, deterministic)
}
func (m *KubeMQQueueReadOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeMQQueueReadOpts.Merge(m, src)
}
func (m *KubeMQQueueReadOpts) XXX_Size() int {
	return xxx_messageInfo_KubeMQQueueReadOpts.Size(m)
}
func (m *KubeMQQueueReadOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeMQQueueReadOpts.DiscardUnknown(m)
}

var xxx_messageInfo_KubeMQQueueReadOpts proto.InternalMessageInfo

func (m *KubeMQQueueReadOpts) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *KubeMQQueueReadOpts) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

type KubeMQQueueWriteOpts struct {
	// @gotags: kong:"help='KubeMQ client ID',default=plumber"
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty" kong:"help='KubeMQ client ID',default=plumber"`
	// @gotags: kong:"help='KubeMQ queue name'"
	QueueName            string   `protobuf:"bytes,2,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty" kong:"help='KubeMQ queue name'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubeMQQueueWriteOpts) Reset()         { *m = KubeMQQueueWriteOpts{} }
func (m *KubeMQQueueWriteOpts) String() string { return proto.CompactTextString(m) }
func (*KubeMQQueueWriteOpts) ProtoMessage()    {}
func (*KubeMQQueueWriteOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_860d5c93b91aa3b9, []int{2}
}

func (m *KubeMQQueueWriteOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeMQQueueWriteOpts.Unmarshal(m, b)
}
func (m *KubeMQQueueWriteOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeMQQueueWriteOpts.Marshal(b, m, deterministic)
}
func (m *KubeMQQueueWriteOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeMQQueueWriteOpts.Merge(m, src)
}
func (m *KubeMQQueueWriteOpts) XXX_Size() int {
	return xxx_messageInfo_KubeMQQueueWriteOpts.Size(m)
}
func (m *KubeMQQueueWriteOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeMQQueueWriteOpts.DiscardUnknown(m)
}

var xxx_messageInfo_KubeMQQueueWriteOpts proto.InternalMessageInfo

func (m *KubeMQQueueWriteOpts) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *KubeMQQueueWriteOpts) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

func init() {
	proto.RegisterType((*KubeMQQueueConn)(nil), "protos.args.KubeMQQueueConn")
	proto.RegisterType((*KubeMQQueueReadOpts)(nil), "protos.args.KubeMQQueueReadOpts")
	proto.RegisterType((*KubeMQQueueWriteOpts)(nil), "protos.args.KubeMQQueueWriteOpts")
}

func init() { proto.RegisterFile("kubemq-queue.proto", fileDescriptor_860d5c93b91aa3b9) }

var fileDescriptor_860d5c93b91aa3b9 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xcd, 0x4b, 0xf4, 0x30,
	0x10, 0xc6, 0xe9, 0xbe, 0xf0, 0x6a, 0xb3, 0x88, 0x10, 0x3d, 0x14, 0x44, 0x90, 0x9e, 0xbc, 0x6c,
	0x73, 0xf0, 0x24, 0xde, 0x5c, 0x10, 0x44, 0x54, 0x5a, 0x04, 0xc1, 0x4b, 0xc9, 0xc7, 0xd8, 0x86,
	0xcd, 0x47, 0x37, 0x99, 0xfc, 0xff, 0xd2, 0xac, 0x0b, 0x8b, 0x82, 0xa7, 0x30, 0xbf, 0x0c, 0xbf,
	0x67, 0x78, 0x08, 0xdd, 0x24, 0x01, 0x76, 0xbb, 0xda, 0x26, 0x48, 0xd0, 0x4c, 0xc1, 0xa3, 0xa7,
	0xcb, 0xfc, 0xc4, 0x86, 0x87, 0x21, 0xd6, 0x8e, 0x9c, 0x3e, 0x25, 0x01, 0xcf, 0x6d, 0x3b, 0x6f,
	0xac, 0xbd, 0x73, 0xb4, 0x22, 0x47, 0x5c, 0xa9, 0x00, 0x31, 0x56, 0xc5, 0x55, 0x71, 0x5d, 0x76,
	0xfb, 0x91, 0x5e, 0x12, 0xc2, 0x13, 0x8e, 0x3d, 0xfa, 0x0d, 0xb8, 0x6a, 0x91, 0x3f, 0xcb, 0x99,
	0xbc, 0xcd, 0x80, 0xd6, 0xe4, 0x04, 0x4d, 0xec, 0x25, 0x04, 0xec, 0x3f, 0xb5, 0x81, 0xea, 0x5f,
	0xde, 0x58, 0xa2, 0x89, 0x6b, 0x08, 0xf8, 0xa0, 0x0d, 0xd4, 0x2d, 0x39, 0x3b, 0xc8, 0xeb, 0x80,
	0xab, 0xd7, 0x09, 0x23, 0xbd, 0x20, 0xa5, 0x34, 0x1a, 0x1c, 0xf6, 0x5a, 0x7d, 0x8b, 0x8f, 0x77,
	0xe0, 0x51, 0xcd, 0xb1, 0xf9, 0xfe, 0xde, 0x71, 0xbb, 0x97, 0x96, 0x99, 0xbc, 0x70, 0x0b, 0x75,
	0x47, 0xce, 0x0f, 0x94, 0xef, 0x41, 0x23, 0xfc, 0x76, 0x16, 0x7f, 0x3a, 0x17, 0x3f, 0x9c, 0xf7,
	0x77, 0x1f, 0xb7, 0x83, 0xc6, 0x31, 0x89, 0x46, 0x7a, 0xcb, 0x04, 0x47, 0x39, 0x4a, 0x1f, 0x26,
	0x36, 0x99, 0x64, 0x05, 0x84, 0x55, 0x94, 0x23, 0x58, 0x1e, 0x99, 0x48, 0xda, 0x28, 0x36, 0x78,
	0xb6, 0xeb, 0x94, 0xcd, 0x9d, 0x8a, 0xff, 0x79, 0xb8, 0xf9, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x77,
	0x04, 0x1b, 0x44, 0x7d, 0x01, 0x00, 0x00,
}
