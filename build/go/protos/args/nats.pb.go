// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nats.proto

package args

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NatsConn struct {
	// @gotags: kong:"help='Dial string for NATS server. Ex: nats://localhost:4222',default='nas://localhost:4222'"
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty" kong:"help='Dial string for NATS server. Ex: nats://localhost:4222',default='nas://localhost:4222'"`
	// @gotags: kong:"help='Whether to verify server certificate'"
	InsecureTls bool `protobuf:"varint,2,opt,name=insecure_tls,json=insecureTls,proto3" json:"insecure_tls,omitempty" kong:"help='Whether to verify server certificate'"`
	// @gotags: kong:"help='CA file (only needed if addr is tls://)',type=existingfile"
	TlsCaCert []byte `protobuf:"bytes,3,opt,name=tls_ca_cert,json=tlsCaCert,proto3" json:"tls_ca_cert,omitempty" kong:"help='CA file (only needed if addr is tls://)',type=existingfile"`
	// @gotags: kong:"help='Client cert file (only needed if addr is tls://)',type=existingfile"
	TlsClientCert []byte `protobuf:"bytes,4,opt,name=tls_client_cert,json=tlsClientCert,proto3" json:"tls_client_cert,omitempty" kong:"help='Client cert file (only needed if addr is tls://)',type=existingfile"`
	// @gotags: kong:"help='client key file (only needed if addr is tls://)',type=existingfile"
	TlsClientKey []byte `protobuf:"bytes,5,opt,name=tls_client_key,json=tlsClientKey,proto3" json:"tls_client_key,omitempty" kong:"help='client key file (only needed if addr is tls://)',type=existingfile"`
	// @gotags: kong:"help='NATS .creds file containing authentication credentials',type=existingfile"
	UserCredentials      []byte   `protobuf:"bytes,6,opt,name=user_credentials,json=userCredentials,proto3" json:"user_credentials,omitempty" kong:"help='NATS .creds file containing authentication credentials',type=existingfile"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NatsConn) Reset()         { *m = NatsConn{} }
func (m *NatsConn) String() string { return proto.CompactTextString(m) }
func (*NatsConn) ProtoMessage()    {}
func (*NatsConn) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cc83ab78dc78ae1, []int{0}
}

func (m *NatsConn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NatsConn.Unmarshal(m, b)
}
func (m *NatsConn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NatsConn.Marshal(b, m, deterministic)
}
func (m *NatsConn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NatsConn.Merge(m, src)
}
func (m *NatsConn) XXX_Size() int {
	return xxx_messageInfo_NatsConn.Size(m)
}
func (m *NatsConn) XXX_DiscardUnknown() {
	xxx_messageInfo_NatsConn.DiscardUnknown(m)
}

var xxx_messageInfo_NatsConn proto.InternalMessageInfo

func (m *NatsConn) GetDsn() string {
	if m != nil {
		return m.Dsn
	}
	return ""
}

func (m *NatsConn) GetInsecureTls() bool {
	if m != nil {
		return m.InsecureTls
	}
	return false
}

func (m *NatsConn) GetTlsCaCert() []byte {
	if m != nil {
		return m.TlsCaCert
	}
	return nil
}

func (m *NatsConn) GetTlsClientCert() []byte {
	if m != nil {
		return m.TlsClientCert
	}
	return nil
}

func (m *NatsConn) GetTlsClientKey() []byte {
	if m != nil {
		return m.TlsClientKey
	}
	return nil
}

func (m *NatsConn) GetUserCredentials() []byte {
	if m != nil {
		return m.UserCredentials
	}
	return nil
}

type NatsReadArgs struct {
	// @gotags: kong:"help='NATS Subject. Ex: foo.bar.*'"
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty" kong:"help='NATS Subject. Ex: foo.bar.*'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NatsReadArgs) Reset()         { *m = NatsReadArgs{} }
func (m *NatsReadArgs) String() string { return proto.CompactTextString(m) }
func (*NatsReadArgs) ProtoMessage()    {}
func (*NatsReadArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cc83ab78dc78ae1, []int{1}
}

func (m *NatsReadArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NatsReadArgs.Unmarshal(m, b)
}
func (m *NatsReadArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NatsReadArgs.Marshal(b, m, deterministic)
}
func (m *NatsReadArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NatsReadArgs.Merge(m, src)
}
func (m *NatsReadArgs) XXX_Size() int {
	return xxx_messageInfo_NatsReadArgs.Size(m)
}
func (m *NatsReadArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_NatsReadArgs.DiscardUnknown(m)
}

var xxx_messageInfo_NatsReadArgs proto.InternalMessageInfo

func (m *NatsReadArgs) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type NatsWriteArgs struct {
	// @gotags: kong:"help='NATS Subject. Ex: foo.bar.*'"
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty" kong:"help='NATS Subject. Ex: foo.bar.*'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NatsWriteArgs) Reset()         { *m = NatsWriteArgs{} }
func (m *NatsWriteArgs) String() string { return proto.CompactTextString(m) }
func (*NatsWriteArgs) ProtoMessage()    {}
func (*NatsWriteArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5cc83ab78dc78ae1, []int{2}
}

func (m *NatsWriteArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NatsWriteArgs.Unmarshal(m, b)
}
func (m *NatsWriteArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NatsWriteArgs.Marshal(b, m, deterministic)
}
func (m *NatsWriteArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NatsWriteArgs.Merge(m, src)
}
func (m *NatsWriteArgs) XXX_Size() int {
	return xxx_messageInfo_NatsWriteArgs.Size(m)
}
func (m *NatsWriteArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_NatsWriteArgs.DiscardUnknown(m)
}

var xxx_messageInfo_NatsWriteArgs proto.InternalMessageInfo

func (m *NatsWriteArgs) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func init() {
	proto.RegisterType((*NatsConn)(nil), "protos.args.NatsConn")
	proto.RegisterType((*NatsReadArgs)(nil), "protos.args.NatsReadArgs")
	proto.RegisterType((*NatsWriteArgs)(nil), "protos.args.NatsWriteArgs")
}

func init() { proto.RegisterFile("nats.proto", fileDescriptor_5cc83ab78dc78ae1) }

var fileDescriptor_5cc83ab78dc78ae1 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xd0, 0x31, 0x4f, 0xf3, 0x30,
	0x10, 0x06, 0x60, 0xe5, 0xeb, 0x47, 0x69, 0xaf, 0x29, 0xad, 0x3c, 0x65, 0x42, 0xa5, 0x42, 0x28,
	0x1d, 0x68, 0x06, 0x26, 0xc4, 0x04, 0x19, 0x91, 0x18, 0x22, 0x24, 0x24, 0x96, 0xc8, 0x71, 0x4e,
	0x69, 0xc0, 0xb5, 0x2b, 0xdf, 0x79, 0xe8, 0x3f, 0xe5, 0xe7, 0x20, 0xbb, 0x14, 0x98, 0x98, 0xec,
	0x7b, 0xef, 0x59, 0xee, 0x05, 0x30, 0x92, 0x69, 0xbd, 0x73, 0x96, 0xad, 0x98, 0xc4, 0x87, 0xd6,
	0xd2, 0x75, 0xb4, 0xfc, 0x48, 0x60, 0xf4, 0x24, 0x99, 0x4a, 0x6b, 0x8c, 0x98, 0xc3, 0xa0, 0x25,
	0x93, 0x25, 0x8b, 0x24, 0x1f, 0x57, 0xe1, 0x2b, 0x2e, 0x20, 0xed, 0x0d, 0xa1, 0xf2, 0x0e, 0x6b,
	0xd6, 0x94, 0xfd, 0x5b, 0x24, 0xf9, 0xa8, 0x9a, 0x1c, 0xb3, 0x67, 0x4d, 0xe2, 0x1c, 0x26, 0xac,
	0xa9, 0x56, 0xb2, 0x56, 0xe8, 0x38, 0x1b, 0x2c, 0x92, 0x3c, 0xad, 0xc6, 0xac, 0xa9, 0x94, 0x25,
	0x3a, 0x16, 0x57, 0x30, 0x8b, 0x7b, 0xdd, 0xa3, 0xe1, 0x83, 0xf9, 0x1f, 0xcd, 0x34, 0x98, 0x98,
	0x46, 0x77, 0x09, 0x67, 0xbf, 0xdc, 0x3b, 0xee, 0xb3, 0x93, 0xc8, 0xd2, 0x6f, 0xf6, 0x88, 0x7b,
	0xb1, 0x82, 0xb9, 0x27, 0x74, 0xb5, 0x72, 0xd8, 0xa2, 0xe1, 0x5e, 0x6a, 0xca, 0x86, 0xd1, 0xcd,
	0x42, 0x5e, 0xfe, 0xc4, 0xcb, 0x1c, 0xd2, 0x70, 0x59, 0x85, 0xb2, 0xbd, 0x77, 0x1d, 0x89, 0x0c,
	0x4e, 0xc9, 0x37, 0x6f, 0xa8, 0xf8, 0xeb, 0xc2, 0xe3, 0xb8, 0x5c, 0xc1, 0x34, 0xc8, 0x17, 0xd7,
	0x33, 0xfe, 0x4d, 0x1f, 0xee, 0x5e, 0x6f, 0xbb, 0x9e, 0x37, 0xbe, 0x59, 0x2b, 0xbb, 0x2d, 0x1a,
	0xc9, 0x6a, 0xa3, 0xac, 0xdb, 0x15, 0x3b, 0xed, 0xb7, 0x0d, 0xba, 0x6b, 0x52, 0x1b, 0xdc, 0x4a,
	0x2a, 0x1a, 0xdf, 0xeb, 0xb6, 0xe8, 0x6c, 0x71, 0x28, 0xbb, 0x08, 0x65, 0x37, 0xc3, 0x38, 0xdc,
	0x7c, 0x06, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x29, 0xff, 0x04, 0x8e, 0x01, 0x00, 0x00,
}
