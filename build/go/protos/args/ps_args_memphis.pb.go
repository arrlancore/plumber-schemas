// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ps_args_memphis.proto

package args

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MemphisConn struct {
	// @gotags: kong:"help='Address of Memphis broker (Ex: localhost:7770)',env='PLUMBER_RELAY_MEMPHIS_ADDRESS',default='localhost:7770'"
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" kong:"help='Address of Memphis broker (Ex: localhost:7770)',env='PLUMBER_RELAY_MEMPHIS_ADDRESS',default='localhost:7770'"`
	// @gotags: kong:"help='Broker username',env='PLUMBER_RELAY_MEMPHIS_USERNAME',default='plumber'"
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty" kong:"help='Broker username',env='PLUMBER_RELAY_MEMPHIS_USERNAME',default='plumber'"`
	// @gotags: kong:"help='Broker access token',env='PLUMBER_RELAY_MEMPHIS_BROKER_TOKEN',default='memphis'"
	BrokerToken          string   `protobuf:"bytes,3,opt,name=broker_token,json=brokerToken,proto3" json:"broker_token,omitempty" kong:"help='Broker access token',env='PLUMBER_RELAY_MEMPHIS_BROKER_TOKEN',default='memphis'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemphisConn) Reset()         { *m = MemphisConn{} }
func (m *MemphisConn) String() string { return proto.CompactTextString(m) }
func (*MemphisConn) ProtoMessage()    {}
func (*MemphisConn) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ff59a42f37d2a3b, []int{0}
}

func (m *MemphisConn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemphisConn.Unmarshal(m, b)
}
func (m *MemphisConn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemphisConn.Marshal(b, m, deterministic)
}
func (m *MemphisConn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemphisConn.Merge(m, src)
}
func (m *MemphisConn) XXX_Size() int {
	return xxx_messageInfo_MemphisConn.Size(m)
}
func (m *MemphisConn) XXX_DiscardUnknown() {
	xxx_messageInfo_MemphisConn.DiscardUnknown(m)
}

var xxx_messageInfo_MemphisConn proto.InternalMessageInfo

func (m *MemphisConn) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MemphisConn) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *MemphisConn) GetBrokerToken() string {
	if m != nil {
		return m.BrokerToken
	}
	return ""
}

type MemphisReadArgs struct {
	// @gotags: kong:"help='Station name to read from',env='PLUMBER_RELAY_MEMPHIS_TOPIC',required"
	Station string `protobuf:"bytes,1,opt,name=station,proto3" json:"station,omitempty" kong:"help='Station name to read from',env='PLUMBER_RELAY_MEMPHIS_TOPIC',required"`
	// @gotags: kong:"help='Consumer Name',env='PLUMBER_RELAY_MEMPHIS_CONSUMER_NAME',required"
	ConsumerName string `protobuf:"bytes,2,opt,name=consumer_name,json=consumerName,proto3" json:"consumer_name,omitempty" kong:"help='Consumer Name',env='PLUMBER_RELAY_MEMPHIS_CONSUMER_NAME',required"`
	// @gotags: kong:"help='Consumer Group, defaults to consumer-name if not specified',env='PLUMBER_RELAY_MEMPHIS_CONSUMER_GROUP'"
	ConsumerGroup        string   `protobuf:"bytes,3,opt,name=consumer_group,json=consumerGroup,proto3" json:"consumer_group,omitempty" kong:"help='Consumer Group, defaults to consumer-name if not specified',env='PLUMBER_RELAY_MEMPHIS_CONSUMER_GROUP'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemphisReadArgs) Reset()         { *m = MemphisReadArgs{} }
func (m *MemphisReadArgs) String() string { return proto.CompactTextString(m) }
func (*MemphisReadArgs) ProtoMessage()    {}
func (*MemphisReadArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ff59a42f37d2a3b, []int{1}
}

func (m *MemphisReadArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemphisReadArgs.Unmarshal(m, b)
}
func (m *MemphisReadArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemphisReadArgs.Marshal(b, m, deterministic)
}
func (m *MemphisReadArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemphisReadArgs.Merge(m, src)
}
func (m *MemphisReadArgs) XXX_Size() int {
	return xxx_messageInfo_MemphisReadArgs.Size(m)
}
func (m *MemphisReadArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_MemphisReadArgs.DiscardUnknown(m)
}

var xxx_messageInfo_MemphisReadArgs proto.InternalMessageInfo

func (m *MemphisReadArgs) GetStation() string {
	if m != nil {
		return m.Station
	}
	return ""
}

func (m *MemphisReadArgs) GetConsumerName() string {
	if m != nil {
		return m.ConsumerName
	}
	return ""
}

func (m *MemphisReadArgs) GetConsumerGroup() string {
	if m != nil {
		return m.ConsumerGroup
	}
	return ""
}

type MemphisWriteArgs struct {
	// @gotags: kong:"help='Station name to write to',required"
	Station string `protobuf:"bytes,1,opt,name=station,proto3" json:"station,omitempty" kong:"help='Station name to write to',required"`
	// @gotags: kong:"help='Producer name',required"
	ProducerName         string   `protobuf:"bytes,2,opt,name=producer_name,json=producerName,proto3" json:"producer_name,omitempty" kong:"help='Producer name',required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemphisWriteArgs) Reset()         { *m = MemphisWriteArgs{} }
func (m *MemphisWriteArgs) String() string { return proto.CompactTextString(m) }
func (*MemphisWriteArgs) ProtoMessage()    {}
func (*MemphisWriteArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ff59a42f37d2a3b, []int{2}
}

func (m *MemphisWriteArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemphisWriteArgs.Unmarshal(m, b)
}
func (m *MemphisWriteArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemphisWriteArgs.Marshal(b, m, deterministic)
}
func (m *MemphisWriteArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemphisWriteArgs.Merge(m, src)
}
func (m *MemphisWriteArgs) XXX_Size() int {
	return xxx_messageInfo_MemphisWriteArgs.Size(m)
}
func (m *MemphisWriteArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_MemphisWriteArgs.DiscardUnknown(m)
}

var xxx_messageInfo_MemphisWriteArgs proto.InternalMessageInfo

func (m *MemphisWriteArgs) GetStation() string {
	if m != nil {
		return m.Station
	}
	return ""
}

func (m *MemphisWriteArgs) GetProducerName() string {
	if m != nil {
		return m.ProducerName
	}
	return ""
}

func init() {
	proto.RegisterType((*MemphisConn)(nil), "protos.args.MemphisConn")
	proto.RegisterType((*MemphisReadArgs)(nil), "protos.args.MemphisReadArgs")
	proto.RegisterType((*MemphisWriteArgs)(nil), "protos.args.MemphisWriteArgs")
}

func init() { proto.RegisterFile("ps_args_memphis.proto", fileDescriptor_8ff59a42f37d2a3b) }

var fileDescriptor_8ff59a42f37d2a3b = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0xd0, 0xcb, 0x4b, 0xf4, 0x30,
	0x14, 0x05, 0x70, 0xe6, 0xfb, 0xc0, 0x47, 0x66, 0x7c, 0x50, 0x10, 0x8a, 0x2b, 0xad, 0x08, 0x6e,
	0x6c, 0x16, 0xae, 0xc4, 0x95, 0xba, 0x70, 0xa5, 0xe0, 0x20, 0x08, 0x6e, 0x4a, 0x92, 0x5e, 0xdb,
	0x32, 0x93, 0xdc, 0x70, 0x6f, 0x82, 0xff, 0xbe, 0xa4, 0x2f, 0xc4, 0x8d, 0xab, 0x72, 0xce, 0x69,
	0xf8, 0xc1, 0x15, 0x27, 0x9e, 0x2b, 0x45, 0x0d, 0x57, 0x16, 0xac, 0x6f, 0x3b, 0x2e, 0x3d, 0x61,
	0xc0, 0x6c, 0xd9, 0x7f, 0xb8, 0x4c, 0x53, 0xf1, 0x29, 0x96, 0xcf, 0xc3, 0xfa, 0x88, 0xce, 0x65,
	0xb9, 0xd8, 0x55, 0x75, 0x4d, 0xc0, 0x9c, 0x2f, 0xce, 0x16, 0x57, 0xfb, 0xeb, 0x29, 0x66, 0xa7,
	0x62, 0x2f, 0x32, 0x90, 0x53, 0x16, 0xf2, 0x7f, 0xfd, 0x34, 0xe7, 0xec, 0x5c, 0xac, 0x34, 0xe1,
	0x06, 0xa8, 0x0a, 0xb8, 0x01, 0x97, 0xff, 0xef, 0xf7, 0xe5, 0xd0, 0xbd, 0xa5, 0xaa, 0xf8, 0x12,
	0x47, 0xa3, 0xb3, 0x06, 0x55, 0xdf, 0x53, 0xc3, 0xc9, 0xe2, 0xa0, 0x42, 0x87, 0x6e, 0xb2, 0xc6,
	0x98, 0x5d, 0x88, 0x03, 0x83, 0x8e, 0xa3, 0x05, 0xaa, 0x7e, 0x80, 0xab, 0xa9, 0x7c, 0x49, 0xe8,
	0xa5, 0x38, 0x9c, 0x7f, 0x6a, 0x08, 0xa3, 0x1f, 0xd9, 0xf9, 0xe9, 0x53, 0x2a, 0x8b, 0x57, 0x71,
	0x3c, 0xc2, 0xef, 0xd4, 0x05, 0xf8, 0x5b, 0xf6, 0x84, 0x75, 0x34, 0xbf, 0xe4, 0xa9, 0x4c, 0xf2,
	0xc3, 0xdd, 0xc7, 0x6d, 0xd3, 0x85, 0x36, 0xea, 0xd2, 0xa0, 0x95, 0x5a, 0x05, 0xd3, 0x1a, 0x24,
	0x2f, 0xfd, 0x36, 0x5a, 0x0d, 0x74, 0xcd, 0xa6, 0x05, 0xab, 0x58, 0xea, 0xd8, 0x6d, 0x6b, 0xd9,
	0xa0, 0x1c, 0x0e, 0x2e, 0xd3, 0xc1, 0xf5, 0x4e, 0x1f, 0x6e, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x2c, 0xf5, 0x27, 0xcf, 0x9d, 0x01, 0x00, 0x00,
}
