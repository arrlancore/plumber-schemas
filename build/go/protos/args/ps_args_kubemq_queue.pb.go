// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ps_args_kubemq_queue.proto

package args

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type KubeMQQueueConn struct {
	// @gotags: kong:"help='Dial string for KubeMQ server',env='PLUMBER_RELAY_KUBEMQ_QUEUE_ADDRESS',default='localhost:50000',required"
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty" kong:"help='Dial string for KubeMQ server',env='PLUMBER_RELAY_KUBEMQ_QUEUE_ADDRESS',default='localhost:50000',required"`
	// @gotags: kong:"help='Client JWT authentication token',env='PLUMBER_RELAY_KUBEMQ_QUEUE_AUTH_TOKEN'"
	AuthToken string `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty" kong:"help='Client JWT authentication token',env='PLUMBER_RELAY_KUBEMQ_QUEUE_AUTH_TOKEN'"`
	// @gotags: kong:"help='KubeMQ client cert file',env='PLUMBER_RELAY_KUBEMQ_QUEUE_TLS_CERT_FILE',type=existingfile"
	TlsCertFile          string   `protobuf:"bytes,3,opt,name=tls_cert_file,json=tlsCertFile,proto3" json:"tls_cert_file,omitempty" kong:"help='KubeMQ client cert file',env='PLUMBER_RELAY_KUBEMQ_QUEUE_TLS_CERT_FILE',type=existingfile"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubeMQQueueConn) Reset()         { *m = KubeMQQueueConn{} }
func (m *KubeMQQueueConn) String() string { return proto.CompactTextString(m) }
func (*KubeMQQueueConn) ProtoMessage()    {}
func (*KubeMQQueueConn) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6c5d36c3dc96c32, []int{0}
}

func (m *KubeMQQueueConn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeMQQueueConn.Unmarshal(m, b)
}
func (m *KubeMQQueueConn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeMQQueueConn.Marshal(b, m, deterministic)
}
func (m *KubeMQQueueConn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeMQQueueConn.Merge(m, src)
}
func (m *KubeMQQueueConn) XXX_Size() int {
	return xxx_messageInfo_KubeMQQueueConn.Size(m)
}
func (m *KubeMQQueueConn) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeMQQueueConn.DiscardUnknown(m)
}

var xxx_messageInfo_KubeMQQueueConn proto.InternalMessageInfo

func (m *KubeMQQueueConn) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *KubeMQQueueConn) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *KubeMQQueueConn) GetTlsCertFile() string {
	if m != nil {
		return m.TlsCertFile
	}
	return ""
}

type KubeMQQueueReadArgs struct {
	// @gotags: kong:"help='KubeMQ client ID',env='PLUMBER_RELAY_KUBEMQ_QUEUE_CLIENT_ID',default=plumber"
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty" kong:"help='KubeMQ client ID',env='PLUMBER_RELAY_KUBEMQ_QUEUE_CLIENT_ID',default=plumber"`
	// @gotags: kong:"help='KubeMQ queue name',env='PLUMBER_RELAY_KUBEMQ_QUEUE_QUEUE'"
	QueueName            string   `protobuf:"bytes,3,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty" kong:"help='KubeMQ queue name',env='PLUMBER_RELAY_KUBEMQ_QUEUE_QUEUE'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubeMQQueueReadArgs) Reset()         { *m = KubeMQQueueReadArgs{} }
func (m *KubeMQQueueReadArgs) String() string { return proto.CompactTextString(m) }
func (*KubeMQQueueReadArgs) ProtoMessage()    {}
func (*KubeMQQueueReadArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6c5d36c3dc96c32, []int{1}
}

func (m *KubeMQQueueReadArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeMQQueueReadArgs.Unmarshal(m, b)
}
func (m *KubeMQQueueReadArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeMQQueueReadArgs.Marshal(b, m, deterministic)
}
func (m *KubeMQQueueReadArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeMQQueueReadArgs.Merge(m, src)
}
func (m *KubeMQQueueReadArgs) XXX_Size() int {
	return xxx_messageInfo_KubeMQQueueReadArgs.Size(m)
}
func (m *KubeMQQueueReadArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeMQQueueReadArgs.DiscardUnknown(m)
}

var xxx_messageInfo_KubeMQQueueReadArgs proto.InternalMessageInfo

func (m *KubeMQQueueReadArgs) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *KubeMQQueueReadArgs) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

type KubeMQQueueWriteArgs struct {
	// @gotags: kong:"help='KubeMQ client ID',default=plumber"
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty" kong:"help='KubeMQ client ID',default=plumber"`
	// @gotags: kong:"help='KubeMQ queue name'"
	QueueName            string   `protobuf:"bytes,2,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty" kong:"help='KubeMQ queue name'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KubeMQQueueWriteArgs) Reset()         { *m = KubeMQQueueWriteArgs{} }
func (m *KubeMQQueueWriteArgs) String() string { return proto.CompactTextString(m) }
func (*KubeMQQueueWriteArgs) ProtoMessage()    {}
func (*KubeMQQueueWriteArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_c6c5d36c3dc96c32, []int{2}
}

func (m *KubeMQQueueWriteArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KubeMQQueueWriteArgs.Unmarshal(m, b)
}
func (m *KubeMQQueueWriteArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KubeMQQueueWriteArgs.Marshal(b, m, deterministic)
}
func (m *KubeMQQueueWriteArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KubeMQQueueWriteArgs.Merge(m, src)
}
func (m *KubeMQQueueWriteArgs) XXX_Size() int {
	return xxx_messageInfo_KubeMQQueueWriteArgs.Size(m)
}
func (m *KubeMQQueueWriteArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_KubeMQQueueWriteArgs.DiscardUnknown(m)
}

var xxx_messageInfo_KubeMQQueueWriteArgs proto.InternalMessageInfo

func (m *KubeMQQueueWriteArgs) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *KubeMQQueueWriteArgs) GetQueueName() string {
	if m != nil {
		return m.QueueName
	}
	return ""
}

func init() {
	proto.RegisterType((*KubeMQQueueConn)(nil), "protos.args.KubeMQQueueConn")
	proto.RegisterType((*KubeMQQueueReadArgs)(nil), "protos.args.KubeMQQueueReadArgs")
	proto.RegisterType((*KubeMQQueueWriteArgs)(nil), "protos.args.KubeMQQueueWriteArgs")
}

func init() { proto.RegisterFile("ps_args_kubemq_queue.proto", fileDescriptor_c6c5d36c3dc96c32) }

var fileDescriptor_c6c5d36c3dc96c32 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xcd, 0x4b, 0x33, 0x31,
	0x10, 0xc6, 0x69, 0x5f, 0x78, 0x75, 0x53, 0x44, 0x58, 0x3d, 0x2c, 0x8a, 0x20, 0x7b, 0xf2, 0x62,
	0x73, 0xf0, 0x24, 0x9e, 0xb4, 0x20, 0x88, 0x28, 0xec, 0x22, 0x08, 0x5e, 0x42, 0x3e, 0xc6, 0xdd,
	0xd0, 0x7c, 0x6c, 0x93, 0xc9, 0xff, 0x2f, 0x49, 0x2d, 0x14, 0x05, 0x4f, 0x61, 0x7e, 0x33, 0xfc,
	0x9e, 0xf0, 0x90, 0xb3, 0x29, 0x32, 0x1e, 0x86, 0xc8, 0xd6, 0x49, 0x80, 0xdd, 0xb0, 0x4d, 0x82,
	0x04, 0xcb, 0x29, 0x78, 0xf4, 0xf5, 0xa2, 0x3c, 0x71, 0x99, 0xf7, 0xad, 0x23, 0xc7, 0xcf, 0x49,
	0xc0, 0x4b, 0xd7, 0xe5, 0x8b, 0x95, 0x77, 0xae, 0x6e, 0xc8, 0x01, 0x57, 0x2a, 0x40, 0x8c, 0xcd,
	0xec, 0x72, 0x76, 0x55, 0xf5, 0xbb, 0xb1, 0xbe, 0x20, 0x84, 0x27, 0x1c, 0x19, 0xfa, 0x35, 0xb8,
	0x66, 0x5e, 0x96, 0x55, 0x26, 0x6f, 0x19, 0xd4, 0x2d, 0x39, 0x42, 0x13, 0x99, 0x84, 0x80, 0xec,
	0x53, 0x1b, 0x68, 0xfe, 0x95, 0x8b, 0x05, 0x9a, 0xb8, 0x82, 0x80, 0x8f, 0xda, 0x40, 0xdb, 0x91,
	0x93, 0xbd, 0xbc, 0x1e, 0xb8, 0xba, 0x0f, 0x43, 0xac, 0xcf, 0x49, 0x25, 0x8d, 0x06, 0x87, 0x4c,
	0xab, 0x6f, 0xf1, 0xe1, 0x16, 0x3c, 0xa9, 0x1c, 0x5b, 0xfe, 0xcf, 0x1c, 0xb7, 0x3b, 0x69, 0x55,
	0xc8, 0x2b, 0xb7, 0xd0, 0xf6, 0xe4, 0x74, 0x4f, 0xf9, 0x1e, 0x34, 0xc2, 0x6f, 0xe7, 0xec, 0x4f,
	0xe7, 0xfc, 0x87, 0xf3, 0xe1, 0xee, 0xe3, 0x76, 0xd0, 0x38, 0x26, 0xb1, 0x94, 0xde, 0x52, 0xc1,
	0x51, 0x8e, 0xd2, 0x87, 0x89, 0x4e, 0x26, 0x59, 0x01, 0xe1, 0x3a, 0xca, 0x11, 0x2c, 0x8f, 0x54,
	0x24, 0x6d, 0x14, 0x1d, 0x3c, 0xdd, 0x76, 0x4a, 0x73, 0xa7, 0xe2, 0x7f, 0x19, 0x6e, 0xbe, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xb5, 0x4c, 0x98, 0x3f, 0x85, 0x01, 0x00, 0x00,
}
