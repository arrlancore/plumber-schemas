// Code generated by protoc-gen-go. DO NOT EDIT.
// source: relay.proto

package protos

import (
	fmt "fmt"
	backends "github.com/batchcorp/plumber-schemas/build/go/protos/backends"
	common "github.com/batchcorp/plumber-schemas/build/go/protos/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CLIRelayConfig struct {
	// @gotags: kong:"help='What address to bind the built-in HTTP server to',default='http://localhost:9191'"
	HttpListenAddress string `protobuf:"bytes,1,opt,name=http_listen_address,json=httpListenAddress,proto3" json:"http_listen_address,omitempty" kong:"help='What address to bind the built-in HTTP server to',default='http://localhost:9191'"`
	// Used by CLI to inform components, which backend to use; server uses
	// ReadConfig.connection_id.
	// @gotags: kong:"-"
	XBackendType backends.Type `protobuf:"varint,2,opt,name=_backend_type,json=BackendType,proto3,enum=protos.backends.Type" json:"_backend_type,omitempty" kong:"-"`
	// @gotags: kong:"embed,group=relay"
	XRelayBackend        *CLIRelayConfig_RelayBackend `protobuf:"bytes,3,opt,name=_relay_backend,json=RelayBackend,proto3" json:"_relay_backend,omitempty" kong:"embed,group=relay"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CLIRelayConfig) Reset()         { *m = CLIRelayConfig{} }
func (m *CLIRelayConfig) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig) ProtoMessage()    {}
func (*CLIRelayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0}
}

func (m *CLIRelayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig.Unmarshal(m, b)
}
func (m *CLIRelayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig.Merge(m, src)
}
func (m *CLIRelayConfig) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig.Size(m)
}
func (m *CLIRelayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig proto.InternalMessageInfo

func (m *CLIRelayConfig) GetHttpListenAddress() string {
	if m != nil {
		return m.HttpListenAddress
	}
	return ""
}

func (m *CLIRelayConfig) GetXBackendType() backends.Type {
	if m != nil {
		return m.XBackendType
	}
	return backends.Type_UNSET
}

func (m *CLIRelayConfig) GetXRelayBackend() *CLIRelayConfig_RelayBackend {
	if m != nil {
		return m.XRelayBackend
	}
	return nil
}

type CLIRelayConfig_RelayBackend struct {
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *CLIRelayConfig_RelayBackend_Kafka `protobuf:"bytes,1,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	Awssqs *CLIRelayConfig_RelayBackend_AWSSQS `protobuf:"bytes,2,opt,name=awssqs,proto3" json:"awssqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='MongoDB (CDC)'"
	Mongo *CLIRelayConfig_RelayBackend_Mongo `protobuf:"bytes,3,opt,name=mongo,proto3" json:"mongo,omitempty" kong:"cmd,help='MongoDB (CDC)'"`
	// @gotags: kong:"cmd,help='NSQ'"
	Nsq *CLIRelayConfig_RelayBackend_NSQ `protobuf:"bytes,4,opt,name=nsq,proto3" json:"nsq,omitempty" kong:"cmd,help='NSQ'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Rabbit *CLIRelayConfig_RelayBackend_Rabbit `protobuf:"bytes,5,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Mqtt *CLIRelayConfig_RelayBackend_MQTT `protobuf:"bytes,6,opt,name=mqtt,proto3" json:"mqtt,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='Azure Service Bus'"
	AzureServiceBus *CLIRelayConfig_RelayBackend_AzureServiceBus `protobuf:"bytes,7,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty" kong:"cmd,help='Azure Service Bus'"`
	// @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
	GcpPubsub *CLIRelayConfig_RelayBackend_GCPPubSub `protobuf:"bytes,8,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty" kong:"cmd,help='Google Cloud Platform Pub/Sub'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *CLIRelayConfig_RelayBackend_KubeMQQueue `protobuf:"bytes,9,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='Redis PubSub'"
	RedisPubsub *CLIRelayConfig_RelayBackend_RedisPubSub `protobuf:"bytes,10,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty" kong:"cmd,help='Redis PubSub'"`
	// @gotags: kong:"cmd,help='Redis Streams'"
	RedisStreams *CLIRelayConfig_RelayBackend_RedisStreams `protobuf:"bytes,11,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty" kong:"cmd,help='Redis Streams'"`
	// @gotags: kong:"cmd,help='PostgreSQL (CDC)'"
	Postgres             *CLIRelayConfig_RelayBackend_Postgres `protobuf:"bytes,12,opt,name=postgres,proto3" json:"postgres,omitempty" kong:"cmd,help='PostgreSQL (CDC)'"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend) Reset()         { *m = CLIRelayConfig_RelayBackend{} }
func (m *CLIRelayConfig_RelayBackend) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0}
}

func (m *CLIRelayConfig_RelayBackend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend.Size(m)
}
func (m *CLIRelayConfig_RelayBackend) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend) GetKafka() *CLIRelayConfig_RelayBackend_Kafka {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetAwssqs() *CLIRelayConfig_RelayBackend_AWSSQS {
	if m != nil {
		return m.Awssqs
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetMongo() *CLIRelayConfig_RelayBackend_Mongo {
	if m != nil {
		return m.Mongo
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetNsq() *CLIRelayConfig_RelayBackend_NSQ {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetRabbit() *CLIRelayConfig_RelayBackend_Rabbit {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetMqtt() *CLIRelayConfig_RelayBackend_MQTT {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetAzureServiceBus() *CLIRelayConfig_RelayBackend_AzureServiceBus {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetGcpPubsub() *CLIRelayConfig_RelayBackend_GCPPubSub {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetKubemqQueue() *CLIRelayConfig_RelayBackend_KubeMQQueue {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetRedisPubsub() *CLIRelayConfig_RelayBackend_RedisPubSub {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetRedisStreams() *CLIRelayConfig_RelayBackend_RedisStreams {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend) GetPostgres() *CLIRelayConfig_RelayBackend_Postgres {
	if m != nil {
		return m.Postgres
	}
	return nil
}

type CLIRelayConfig_RelayBackend_Kafka struct {
	// @gotags: kong:"embed"
	Conn *backends.KafkaConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.KafkaReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_Kafka) Reset()         { *m = CLIRelayConfig_RelayBackend_Kafka{} }
func (m *CLIRelayConfig_RelayBackend_Kafka) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_Kafka) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_Kafka) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 0}
}

func (m *CLIRelayConfig_RelayBackend_Kafka) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Kafka.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_Kafka) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Kafka.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_Kafka) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_Kafka.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_Kafka) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Kafka.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_Kafka) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_Kafka.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_Kafka proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_Kafka) GetConn() *backends.KafkaConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_Kafka) GetArgs() *backends.KafkaReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_AWSSQS struct {
	// @gotags: kong:"embed"
	Conn *backends.AWSSQSConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.AWSSQSRelayArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_AWSSQS) Reset()         { *m = CLIRelayConfig_RelayBackend_AWSSQS{} }
func (m *CLIRelayConfig_RelayBackend_AWSSQS) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_AWSSQS) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_AWSSQS) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 1}
}

func (m *CLIRelayConfig_RelayBackend_AWSSQS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_AWSSQS.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_AWSSQS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_AWSSQS.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_AWSSQS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_AWSSQS.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_AWSSQS) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_AWSSQS.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_AWSSQS) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_AWSSQS.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_AWSSQS proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_AWSSQS) GetConn() *backends.AWSSQSConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_AWSSQS) GetArgs() *backends.AWSSQSRelayArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_Mongo struct {
	// @gotags: kong:"embed"
	Conn *backends.MongoConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.MongoReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_Mongo) Reset()         { *m = CLIRelayConfig_RelayBackend_Mongo{} }
func (m *CLIRelayConfig_RelayBackend_Mongo) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_Mongo) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_Mongo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 2}
}

func (m *CLIRelayConfig_RelayBackend_Mongo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Mongo.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_Mongo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Mongo.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_Mongo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_Mongo.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_Mongo) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Mongo.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_Mongo) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_Mongo.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_Mongo proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_Mongo) GetConn() *backends.MongoConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_Mongo) GetArgs() *backends.MongoReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_NSQ struct {
	// @gotags: kong:"embed"
	Conn *backends.NSQConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.NSQReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_NSQ) Reset()         { *m = CLIRelayConfig_RelayBackend_NSQ{} }
func (m *CLIRelayConfig_RelayBackend_NSQ) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_NSQ) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_NSQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 3}
}

func (m *CLIRelayConfig_RelayBackend_NSQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_NSQ.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_NSQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_NSQ.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_NSQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_NSQ.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_NSQ) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_NSQ.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_NSQ) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_NSQ.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_NSQ proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_NSQ) GetConn() *backends.NSQConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_NSQ) GetArgs() *backends.NSQReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_Postgres struct {
	// @gotags: kong:"embed"
	Conn *backends.PostgresConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.PostgresReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_Postgres) Reset()         { *m = CLIRelayConfig_RelayBackend_Postgres{} }
func (m *CLIRelayConfig_RelayBackend_Postgres) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_Postgres) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_Postgres) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 4}
}

func (m *CLIRelayConfig_RelayBackend_Postgres) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Postgres.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_Postgres) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Postgres.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_Postgres) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_Postgres.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_Postgres) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Postgres.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_Postgres) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_Postgres.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_Postgres proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_Postgres) GetConn() *backends.PostgresConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_Postgres) GetArgs() *backends.PostgresReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_Rabbit struct {
	// @gotags: kong:"embed"
	Conn *backends.RabbitConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.RabbitReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_Rabbit) Reset()         { *m = CLIRelayConfig_RelayBackend_Rabbit{} }
func (m *CLIRelayConfig_RelayBackend_Rabbit) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_Rabbit) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_Rabbit) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 5}
}

func (m *CLIRelayConfig_RelayBackend_Rabbit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Rabbit.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_Rabbit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Rabbit.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_Rabbit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_Rabbit.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_Rabbit) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_Rabbit.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_Rabbit) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_Rabbit.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_Rabbit proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_Rabbit) GetConn() *backends.RabbitConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_Rabbit) GetArgs() *backends.RabbitReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_RedisPubSub struct {
	// @gotags: kong:"embed"
	Conn *backends.RedisPubSubConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.RedisPubSubReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_RedisPubSub) Reset() {
	*m = CLIRelayConfig_RelayBackend_RedisPubSub{}
}
func (m *CLIRelayConfig_RelayBackend_RedisPubSub) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_RedisPubSub) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_RedisPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 6}
}

func (m *CLIRelayConfig_RelayBackend_RedisPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisPubSub.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_RedisPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisPubSub.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_RedisPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisPubSub.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_RedisPubSub) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisPubSub.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_RedisPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisPubSub proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_RedisPubSub) GetConn() *backends.RedisPubSubConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_RedisPubSub) GetArgs() *backends.RedisPubSubReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_RedisStreams struct {
	// @gotags: kong:"embed"
	Conn *backends.RedisStreamsConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.RedisStreamsReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_RedisStreams) Reset() {
	*m = CLIRelayConfig_RelayBackend_RedisStreams{}
}
func (m *CLIRelayConfig_RelayBackend_RedisStreams) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_RedisStreams) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_RedisStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 7}
}

func (m *CLIRelayConfig_RelayBackend_RedisStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisStreams.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_RedisStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisStreams.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_RedisStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisStreams.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_RedisStreams) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisStreams.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_RedisStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisStreams.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_RedisStreams proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_RedisStreams) GetConn() *backends.RedisStreamsConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_RedisStreams) GetArgs() *backends.RedisStreamsReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_AzureServiceBus struct {
	// @gotags: kong:"embed"
	Conn *backends.AzureServiceBusConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.AzureServiceBusReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_AzureServiceBus) Reset() {
	*m = CLIRelayConfig_RelayBackend_AzureServiceBus{}
}
func (m *CLIRelayConfig_RelayBackend_AzureServiceBus) String() string {
	return proto.CompactTextString(m)
}
func (*CLIRelayConfig_RelayBackend_AzureServiceBus) ProtoMessage() {}
func (*CLIRelayConfig_RelayBackend_AzureServiceBus) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 8}
}

func (m *CLIRelayConfig_RelayBackend_AzureServiceBus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_AzureServiceBus.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_AzureServiceBus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_AzureServiceBus.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_AzureServiceBus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_AzureServiceBus.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_AzureServiceBus) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_AzureServiceBus.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_AzureServiceBus) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_AzureServiceBus.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_AzureServiceBus proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_AzureServiceBus) GetConn() *backends.AzureServiceBusConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_AzureServiceBus) GetArgs() *backends.AzureServiceBusReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_MQTT struct {
	// @gotags: kong:"embed"
	Conn *backends.MQTTConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.MQTTReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_MQTT) Reset()         { *m = CLIRelayConfig_RelayBackend_MQTT{} }
func (m *CLIRelayConfig_RelayBackend_MQTT) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_MQTT) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_MQTT) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 9}
}

func (m *CLIRelayConfig_RelayBackend_MQTT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_MQTT.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_MQTT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_MQTT.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_MQTT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_MQTT.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_MQTT) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_MQTT.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_MQTT) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_MQTT.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_MQTT proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_MQTT) GetConn() *backends.MQTTConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_MQTT) GetArgs() *backends.MQTTReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_GCPPubSub struct {
	// @gotags: kong:"embed"
	Conn *backends.GCPPubSubConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.GCPPubSubReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_GCPPubSub) Reset()         { *m = CLIRelayConfig_RelayBackend_GCPPubSub{} }
func (m *CLIRelayConfig_RelayBackend_GCPPubSub) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_GCPPubSub) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_GCPPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 10}
}

func (m *CLIRelayConfig_RelayBackend_GCPPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_GCPPubSub.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_GCPPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_GCPPubSub.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_GCPPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_GCPPubSub.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_GCPPubSub) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_GCPPubSub.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_GCPPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_GCPPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_GCPPubSub proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_GCPPubSub) GetConn() *backends.GCPPubSubConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_GCPPubSub) GetArgs() *backends.GCPPubSubReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type CLIRelayConfig_RelayBackend_KubeMQQueue struct {
	// @gotags: kong:"embed"
	Conn *backends.KubeMQQueueConn `protobuf:"bytes,1,opt,name=conn,proto3" json:"conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *backends.KubeMQQueueReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CLIRelayConfig_RelayBackend_KubeMQQueue) Reset() {
	*m = CLIRelayConfig_RelayBackend_KubeMQQueue{}
}
func (m *CLIRelayConfig_RelayBackend_KubeMQQueue) String() string { return proto.CompactTextString(m) }
func (*CLIRelayConfig_RelayBackend_KubeMQQueue) ProtoMessage()    {}
func (*CLIRelayConfig_RelayBackend_KubeMQQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{0, 0, 11}
}

func (m *CLIRelayConfig_RelayBackend_KubeMQQueue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_KubeMQQueue.Unmarshal(m, b)
}
func (m *CLIRelayConfig_RelayBackend_KubeMQQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_KubeMQQueue.Marshal(b, m, deterministic)
}
func (m *CLIRelayConfig_RelayBackend_KubeMQQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_KubeMQQueue.Merge(m, src)
}
func (m *CLIRelayConfig_RelayBackend_KubeMQQueue) XXX_Size() int {
	return xxx_messageInfo_CLIRelayConfig_RelayBackend_KubeMQQueue.Size(m)
}
func (m *CLIRelayConfig_RelayBackend_KubeMQQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_CLIRelayConfig_RelayBackend_KubeMQQueue.DiscardUnknown(m)
}

var xxx_messageInfo_CLIRelayConfig_RelayBackend_KubeMQQueue proto.InternalMessageInfo

func (m *CLIRelayConfig_RelayBackend_KubeMQQueue) GetConn() *backends.KubeMQQueueConn {
	if m != nil {
		return m.Conn
	}
	return nil
}

func (m *CLIRelayConfig_RelayBackend_KubeMQQueue) GetArgs() *backends.KubeMQQueueReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayConfig struct {
	// @gotags: kong:"help='Secret collection token',name=token,required"
	CollectionToken string `protobuf:"bytes,1,opt,name=collection_token,json=collectionToken,proto3" json:"collection_token,omitempty" kong:"help='Secret collection token',name=token,required"`
	// @gotags: kong:"help='How many messages to send in a single batch',default=1000"
	BatchSize int32 `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty" kong:"help='How many messages to send in a single batch',default=1000"`
	// @gotags: kong:"help='How many times plumber will try re-sending a batch',default=3"
	BatchMaxRetry int32 `protobuf:"varint,3,opt,name=batch_max_retry,json=batchMaxRetry,proto3" json:"batch_max_retry,omitempty" kong:"help='How many times plumber will try re-sending a batch',default=3"`
	// Required for server mode; ignored in CLI mode.
	// @gotags: kong:"-"
	ConnectionId string `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty" kong:"-"`
	// @gotags: kong:"name='How many workers to launch per relay',default=10"
	NumWorkers int32 `protobuf:"varint,5,opt,name=num_workers,json=numWorkers,proto3" json:"num_workers,omitempty" kong:"name='How many workers to launch per relay',default=10"`
	// @gotags: kong:"help='Alternative collector to relay events to',name='grpc-address',default='grpc-collector.batch.sh:9000'"
	XBatchshGrpcAddress string `protobuf:"bytes,6,opt,name=_batchsh_grpc_address,json=BatchshGrpcAddress,proto3" json:"_batchsh_grpc_address,omitempty" kong:"help='Alternative collector to relay events to',name='grpc-address',default='grpc-collector.batch.sh:9000'"`
	// @gotags: kong:"help='Whether to use TLS with collector',name=grpc-disable-tls,default=true"
	XBatchshGrpcDisableTls bool `protobuf:"varint,7,opt,name=_batchsh_grpc_disable_tls,json=BatchshGrpcDisableTls,proto3" json:"_batchsh_grpc_disable_tls,omitempty" kong:"help='Whether to use TLS with collector',name=grpc-disable-tls,default=true"`
	// @gotags: kong:"help='How long to wait before giving up talking to the gRPC collector',name='grpc-timeout-seconds'"
	XBatchshGrpcTimeoutSeconds int32 `protobuf:"varint,8,opt,name=_batchsh_grpc_timeout_seconds,json=BatchshGrpcTimeoutSeconds,proto3" json:"_batchsh_grpc_timeout_seconds,omitempty" kong:"help='How long to wait before giving up talking to the gRPC collector',name='grpc-timeout-seconds'"`
	// ID of the created relay entry; populated by plumber.
	// @gotags: kong:"-"
	XRelayId string `protobuf:"bytes,9,opt,name=_relay_id,json=RelayId,proto3" json:"_relay_id,omitempty" kong:"-"`
	// @gotags: kong:"embed"
	XCliConfig           *CLIRelayConfig `protobuf:"bytes,10,opt,name=_cli_config,json=CliConfig,proto3" json:"_cli_config,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RelayConfig) Reset()         { *m = RelayConfig{} }
func (m *RelayConfig) String() string { return proto.CompactTextString(m) }
func (*RelayConfig) ProtoMessage()    {}
func (*RelayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{1}
}

func (m *RelayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayConfig.Unmarshal(m, b)
}
func (m *RelayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayConfig.Marshal(b, m, deterministic)
}
func (m *RelayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayConfig.Merge(m, src)
}
func (m *RelayConfig) XXX_Size() int {
	return xxx_messageInfo_RelayConfig.Size(m)
}
func (m *RelayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RelayConfig proto.InternalMessageInfo

func (m *RelayConfig) GetCollectionToken() string {
	if m != nil {
		return m.CollectionToken
	}
	return ""
}

func (m *RelayConfig) GetBatchSize() int32 {
	if m != nil {
		return m.BatchSize
	}
	return 0
}

func (m *RelayConfig) GetBatchMaxRetry() int32 {
	if m != nil {
		return m.BatchMaxRetry
	}
	return 0
}

func (m *RelayConfig) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *RelayConfig) GetNumWorkers() int32 {
	if m != nil {
		return m.NumWorkers
	}
	return 0
}

func (m *RelayConfig) GetXBatchshGrpcAddress() string {
	if m != nil {
		return m.XBatchshGrpcAddress
	}
	return ""
}

func (m *RelayConfig) GetXBatchshGrpcDisableTls() bool {
	if m != nil {
		return m.XBatchshGrpcDisableTls
	}
	return false
}

func (m *RelayConfig) GetXBatchshGrpcTimeoutSeconds() int32 {
	if m != nil {
		return m.XBatchshGrpcTimeoutSeconds
	}
	return 0
}

func (m *RelayConfig) GetXRelayId() string {
	if m != nil {
		return m.XRelayId
	}
	return ""
}

func (m *RelayConfig) GetXCliConfig() *CLIRelayConfig {
	if m != nil {
		return m.XCliConfig
	}
	return nil
}

type GetAllRelaysRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetAllRelaysRequest) Reset()         { *m = GetAllRelaysRequest{} }
func (m *GetAllRelaysRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllRelaysRequest) ProtoMessage()    {}
func (*GetAllRelaysRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{2}
}

func (m *GetAllRelaysRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllRelaysRequest.Unmarshal(m, b)
}
func (m *GetAllRelaysRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllRelaysRequest.Marshal(b, m, deterministic)
}
func (m *GetAllRelaysRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllRelaysRequest.Merge(m, src)
}
func (m *GetAllRelaysRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllRelaysRequest.Size(m)
}
func (m *GetAllRelaysRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllRelaysRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllRelaysRequest proto.InternalMessageInfo

func (m *GetAllRelaysRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type GetAllRelaysResponse struct {
	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	// Will be set as empty []Relay if no relays are configured
	Configs              []*RelayConfig `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAllRelaysResponse) Reset()         { *m = GetAllRelaysResponse{} }
func (m *GetAllRelaysResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllRelaysResponse) ProtoMessage()    {}
func (*GetAllRelaysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{3}
}

func (m *GetAllRelaysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllRelaysResponse.Unmarshal(m, b)
}
func (m *GetAllRelaysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllRelaysResponse.Marshal(b, m, deterministic)
}
func (m *GetAllRelaysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllRelaysResponse.Merge(m, src)
}
func (m *GetAllRelaysResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllRelaysResponse.Size(m)
}
func (m *GetAllRelaysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllRelaysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllRelaysResponse proto.InternalMessageInfo

func (m *GetAllRelaysResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetAllRelaysResponse) GetConfigs() []*RelayConfig {
	if m != nil {
		return m.Configs
	}
	return nil
}

type GetRelayRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	RelayId              string       `protobuf:"bytes,1,opt,name=relay_id,json=relayId,proto3" json:"relay_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetRelayRequest) Reset()         { *m = GetRelayRequest{} }
func (m *GetRelayRequest) String() string { return proto.CompactTextString(m) }
func (*GetRelayRequest) ProtoMessage()    {}
func (*GetRelayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{4}
}

func (m *GetRelayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRelayRequest.Unmarshal(m, b)
}
func (m *GetRelayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRelayRequest.Marshal(b, m, deterministic)
}
func (m *GetRelayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRelayRequest.Merge(m, src)
}
func (m *GetRelayRequest) XXX_Size() int {
	return xxx_messageInfo_GetRelayRequest.Size(m)
}
func (m *GetRelayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRelayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRelayRequest proto.InternalMessageInfo

func (m *GetRelayRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *GetRelayRequest) GetRelayId() string {
	if m != nil {
		return m.RelayId
	}
	return ""
}

type GetRelayResponse struct {
	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	// Set only if status is OK
	Config               *RelayConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetRelayResponse) Reset()         { *m = GetRelayResponse{} }
func (m *GetRelayResponse) String() string { return proto.CompactTextString(m) }
func (*GetRelayResponse) ProtoMessage()    {}
func (*GetRelayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{5}
}

func (m *GetRelayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRelayResponse.Unmarshal(m, b)
}
func (m *GetRelayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRelayResponse.Marshal(b, m, deterministic)
}
func (m *GetRelayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRelayResponse.Merge(m, src)
}
func (m *GetRelayResponse) XXX_Size() int {
	return xxx_messageInfo_GetRelayResponse.Size(m)
}
func (m *GetRelayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRelayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRelayResponse proto.InternalMessageInfo

func (m *GetRelayResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetRelayResponse) GetConfig() *RelayConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type CreateRelayRequest struct {
	// Every gRPC request must have a valid auth config
	Auth   *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Config *RelayConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Types that are valid to be assigned to Backends:
	//	*CreateRelayRequest_Kafka
	//	*CreateRelayRequest_Mqtt
	//	*CreateRelayRequest_Awssqs
	//	*CreateRelayRequest_Mongo
	//	*CreateRelayRequest_GcpPubsub
	//	*CreateRelayRequest_AzureServiceBus
	//	*CreateRelayRequest_Nsq
	//	*CreateRelayRequest_Postgres
	//	*CreateRelayRequest_Rabbit
	//	*CreateRelayRequest_RedisPubsub
	//	*CreateRelayRequest_RedisStreams
	Backends             isCreateRelayRequest_Backends `protobuf_oneof:"Backends"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *CreateRelayRequest) Reset()         { *m = CreateRelayRequest{} }
func (m *CreateRelayRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRelayRequest) ProtoMessage()    {}
func (*CreateRelayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{6}
}

func (m *CreateRelayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRelayRequest.Unmarshal(m, b)
}
func (m *CreateRelayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRelayRequest.Marshal(b, m, deterministic)
}
func (m *CreateRelayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRelayRequest.Merge(m, src)
}
func (m *CreateRelayRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRelayRequest.Size(m)
}
func (m *CreateRelayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRelayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRelayRequest proto.InternalMessageInfo

func (m *CreateRelayRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *CreateRelayRequest) GetConfig() *RelayConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type isCreateRelayRequest_Backends interface {
	isCreateRelayRequest_Backends()
}

type CreateRelayRequest_Kafka struct {
	Kafka *backends.KafkaReadArgs `protobuf:"bytes,100,opt,name=kafka,proto3,oneof"`
}

type CreateRelayRequest_Mqtt struct {
	Mqtt *backends.MQTTReadArgs `protobuf:"bytes,101,opt,name=mqtt,proto3,oneof"`
}

type CreateRelayRequest_Awssqs struct {
	Awssqs *backends.AWSSQSReadArgs `protobuf:"bytes,102,opt,name=awssqs,proto3,oneof"`
}

type CreateRelayRequest_Mongo struct {
	Mongo *backends.MongoReadArgs `protobuf:"bytes,104,opt,name=mongo,proto3,oneof"`
}

type CreateRelayRequest_GcpPubsub struct {
	GcpPubsub *backends.GCPPubSubReadArgs `protobuf:"bytes,105,opt,name=gcp_pubsub,json=gcpPubsub,proto3,oneof"`
}

type CreateRelayRequest_AzureServiceBus struct {
	AzureServiceBus *backends.AzureServiceBusReadArgs `protobuf:"bytes,106,opt,name=azure_service_bus,json=azureServiceBus,proto3,oneof"`
}

type CreateRelayRequest_Nsq struct {
	Nsq *backends.NSQReadArgs `protobuf:"bytes,107,opt,name=nsq,proto3,oneof"`
}

type CreateRelayRequest_Postgres struct {
	Postgres *backends.PostgresReadArgs `protobuf:"bytes,108,opt,name=postgres,proto3,oneof"`
}

type CreateRelayRequest_Rabbit struct {
	Rabbit *backends.RabbitReadArgs `protobuf:"bytes,109,opt,name=rabbit,proto3,oneof"`
}

type CreateRelayRequest_RedisPubsub struct {
	RedisPubsub *backends.RedisPubSubReadArgs `protobuf:"bytes,111,opt,name=redis_pubsub,json=redisPubsub,proto3,oneof"`
}

type CreateRelayRequest_RedisStreams struct {
	RedisStreams *backends.RedisStreamsReadArgs `protobuf:"bytes,112,opt,name=redis_streams,json=redisStreams,proto3,oneof"`
}

func (*CreateRelayRequest_Kafka) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_Mqtt) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_Awssqs) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_Mongo) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_GcpPubsub) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_AzureServiceBus) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_Nsq) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_Postgres) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_Rabbit) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_RedisPubsub) isCreateRelayRequest_Backends() {}

func (*CreateRelayRequest_RedisStreams) isCreateRelayRequest_Backends() {}

func (m *CreateRelayRequest) GetBackends() isCreateRelayRequest_Backends {
	if m != nil {
		return m.Backends
	}
	return nil
}

func (m *CreateRelayRequest) GetKafka() *backends.KafkaReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_Kafka); ok {
		return x.Kafka
	}
	return nil
}

func (m *CreateRelayRequest) GetMqtt() *backends.MQTTReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_Mqtt); ok {
		return x.Mqtt
	}
	return nil
}

func (m *CreateRelayRequest) GetAwssqs() *backends.AWSSQSReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_Awssqs); ok {
		return x.Awssqs
	}
	return nil
}

func (m *CreateRelayRequest) GetMongo() *backends.MongoReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_Mongo); ok {
		return x.Mongo
	}
	return nil
}

func (m *CreateRelayRequest) GetGcpPubsub() *backends.GCPPubSubReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_GcpPubsub); ok {
		return x.GcpPubsub
	}
	return nil
}

func (m *CreateRelayRequest) GetAzureServiceBus() *backends.AzureServiceBusReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_AzureServiceBus); ok {
		return x.AzureServiceBus
	}
	return nil
}

func (m *CreateRelayRequest) GetNsq() *backends.NSQReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_Nsq); ok {
		return x.Nsq
	}
	return nil
}

func (m *CreateRelayRequest) GetPostgres() *backends.PostgresReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_Postgres); ok {
		return x.Postgres
	}
	return nil
}

func (m *CreateRelayRequest) GetRabbit() *backends.RabbitReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_Rabbit); ok {
		return x.Rabbit
	}
	return nil
}

func (m *CreateRelayRequest) GetRedisPubsub() *backends.RedisPubSubReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_RedisPubsub); ok {
		return x.RedisPubsub
	}
	return nil
}

func (m *CreateRelayRequest) GetRedisStreams() *backends.RedisStreamsReadArgs {
	if x, ok := m.GetBackends().(*CreateRelayRequest_RedisStreams); ok {
		return x.RedisStreams
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateRelayRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateRelayRequest_Kafka)(nil),
		(*CreateRelayRequest_Mqtt)(nil),
		(*CreateRelayRequest_Awssqs)(nil),
		(*CreateRelayRequest_Mongo)(nil),
		(*CreateRelayRequest_GcpPubsub)(nil),
		(*CreateRelayRequest_AzureServiceBus)(nil),
		(*CreateRelayRequest_Nsq)(nil),
		(*CreateRelayRequest_Postgres)(nil),
		(*CreateRelayRequest_Rabbit)(nil),
		(*CreateRelayRequest_RedisPubsub)(nil),
		(*CreateRelayRequest_RedisStreams)(nil),
	}
}

type CreateRelayResponse struct {
	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	// ID of the created relay entry
	RelayId              string   `protobuf:"bytes,1,opt,name=relay_id,json=relayId,proto3" json:"relay_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRelayResponse) Reset()         { *m = CreateRelayResponse{} }
func (m *CreateRelayResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRelayResponse) ProtoMessage()    {}
func (*CreateRelayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{7}
}

func (m *CreateRelayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRelayResponse.Unmarshal(m, b)
}
func (m *CreateRelayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRelayResponse.Marshal(b, m, deterministic)
}
func (m *CreateRelayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRelayResponse.Merge(m, src)
}
func (m *CreateRelayResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRelayResponse.Size(m)
}
func (m *CreateRelayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRelayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRelayResponse proto.InternalMessageInfo

func (m *CreateRelayResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateRelayResponse) GetRelayId() string {
	if m != nil {
		return m.RelayId
	}
	return ""
}

// WARNING: Any in-progress relay will be interrupted/restarted
type UpdateRelayRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	RelayId              string       `protobuf:"bytes,1,opt,name=relay_id,json=relayId,proto3" json:"relay_id,omitempty"`
	Config               *RelayConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateRelayRequest) Reset()         { *m = UpdateRelayRequest{} }
func (m *UpdateRelayRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRelayRequest) ProtoMessage()    {}
func (*UpdateRelayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{8}
}

func (m *UpdateRelayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRelayRequest.Unmarshal(m, b)
}
func (m *UpdateRelayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRelayRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRelayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRelayRequest.Merge(m, src)
}
func (m *UpdateRelayRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRelayRequest.Size(m)
}
func (m *UpdateRelayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRelayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRelayRequest proto.InternalMessageInfo

func (m *UpdateRelayRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *UpdateRelayRequest) GetRelayId() string {
	if m != nil {
		return m.RelayId
	}
	return ""
}

func (m *UpdateRelayRequest) GetConfig() *RelayConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type UpdateRelayResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateRelayResponse) Reset()         { *m = UpdateRelayResponse{} }
func (m *UpdateRelayResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRelayResponse) ProtoMessage()    {}
func (*UpdateRelayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{9}
}

func (m *UpdateRelayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRelayResponse.Unmarshal(m, b)
}
func (m *UpdateRelayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRelayResponse.Marshal(b, m, deterministic)
}
func (m *UpdateRelayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRelayResponse.Merge(m, src)
}
func (m *UpdateRelayResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRelayResponse.Size(m)
}
func (m *UpdateRelayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRelayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRelayResponse proto.InternalMessageInfo

func (m *UpdateRelayResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// Resume a paused relay
type ResumeRelayRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	RelayId              string       `protobuf:"bytes,1,opt,name=relay_id,json=relayId,proto3" json:"relay_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResumeRelayRequest) Reset()         { *m = ResumeRelayRequest{} }
func (m *ResumeRelayRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeRelayRequest) ProtoMessage()    {}
func (*ResumeRelayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{10}
}

func (m *ResumeRelayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRelayRequest.Unmarshal(m, b)
}
func (m *ResumeRelayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRelayRequest.Marshal(b, m, deterministic)
}
func (m *ResumeRelayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRelayRequest.Merge(m, src)
}
func (m *ResumeRelayRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeRelayRequest.Size(m)
}
func (m *ResumeRelayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRelayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRelayRequest proto.InternalMessageInfo

func (m *ResumeRelayRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *ResumeRelayRequest) GetRelayId() string {
	if m != nil {
		return m.RelayId
	}
	return ""
}

type ResumeRelayResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResumeRelayResponse) Reset()         { *m = ResumeRelayResponse{} }
func (m *ResumeRelayResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeRelayResponse) ProtoMessage()    {}
func (*ResumeRelayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{11}
}

func (m *ResumeRelayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeRelayResponse.Unmarshal(m, b)
}
func (m *ResumeRelayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeRelayResponse.Marshal(b, m, deterministic)
}
func (m *ResumeRelayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeRelayResponse.Merge(m, src)
}
func (m *ResumeRelayResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeRelayResponse.Size(m)
}
func (m *ResumeRelayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeRelayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeRelayResponse proto.InternalMessageInfo

func (m *ResumeRelayResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// Temporarily stop/pause a relay
type StopRelayRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	RelayId              string       `protobuf:"bytes,1,opt,name=relay_id,json=relayId,proto3" json:"relay_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StopRelayRequest) Reset()         { *m = StopRelayRequest{} }
func (m *StopRelayRequest) String() string { return proto.CompactTextString(m) }
func (*StopRelayRequest) ProtoMessage()    {}
func (*StopRelayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{12}
}

func (m *StopRelayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRelayRequest.Unmarshal(m, b)
}
func (m *StopRelayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRelayRequest.Marshal(b, m, deterministic)
}
func (m *StopRelayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRelayRequest.Merge(m, src)
}
func (m *StopRelayRequest) XXX_Size() int {
	return xxx_messageInfo_StopRelayRequest.Size(m)
}
func (m *StopRelayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRelayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRelayRequest proto.InternalMessageInfo

func (m *StopRelayRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *StopRelayRequest) GetRelayId() string {
	if m != nil {
		return m.RelayId
	}
	return ""
}

type StopRelayResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StopRelayResponse) Reset()         { *m = StopRelayResponse{} }
func (m *StopRelayResponse) String() string { return proto.CompactTextString(m) }
func (*StopRelayResponse) ProtoMessage()    {}
func (*StopRelayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{13}
}

func (m *StopRelayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRelayResponse.Unmarshal(m, b)
}
func (m *StopRelayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRelayResponse.Marshal(b, m, deterministic)
}
func (m *StopRelayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRelayResponse.Merge(m, src)
}
func (m *StopRelayResponse) XXX_Size() int {
	return xxx_messageInfo_StopRelayResponse.Size(m)
}
func (m *StopRelayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRelayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopRelayResponse proto.InternalMessageInfo

func (m *StopRelayResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type DeleteRelayRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	RelayId              string       `protobuf:"bytes,1,opt,name=relay_id,json=relayId,proto3" json:"relay_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteRelayRequest) Reset()         { *m = DeleteRelayRequest{} }
func (m *DeleteRelayRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRelayRequest) ProtoMessage()    {}
func (*DeleteRelayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{14}
}

func (m *DeleteRelayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRelayRequest.Unmarshal(m, b)
}
func (m *DeleteRelayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRelayRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRelayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRelayRequest.Merge(m, src)
}
func (m *DeleteRelayRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRelayRequest.Size(m)
}
func (m *DeleteRelayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRelayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRelayRequest proto.InternalMessageInfo

func (m *DeleteRelayRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *DeleteRelayRequest) GetRelayId() string {
	if m != nil {
		return m.RelayId
	}
	return ""
}

type DeleteRelayResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeleteRelayResponse) Reset()         { *m = DeleteRelayResponse{} }
func (m *DeleteRelayResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRelayResponse) ProtoMessage()    {}
func (*DeleteRelayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f69a7d5a802d584, []int{15}
}

func (m *DeleteRelayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRelayResponse.Unmarshal(m, b)
}
func (m *DeleteRelayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRelayResponse.Marshal(b, m, deterministic)
}
func (m *DeleteRelayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRelayResponse.Merge(m, src)
}
func (m *DeleteRelayResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRelayResponse.Size(m)
}
func (m *DeleteRelayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRelayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRelayResponse proto.InternalMessageInfo

func (m *DeleteRelayResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*CLIRelayConfig)(nil), "protos.CLIRelayConfig")
	proto.RegisterType((*CLIRelayConfig_RelayBackend)(nil), "protos.CLIRelayConfig.RelayBackend")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_Kafka)(nil), "protos.CLIRelayConfig.RelayBackend.Kafka")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_AWSSQS)(nil), "protos.CLIRelayConfig.RelayBackend.AWSSQS")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_Mongo)(nil), "protos.CLIRelayConfig.RelayBackend.Mongo")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_NSQ)(nil), "protos.CLIRelayConfig.RelayBackend.NSQ")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_Postgres)(nil), "protos.CLIRelayConfig.RelayBackend.Postgres")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_Rabbit)(nil), "protos.CLIRelayConfig.RelayBackend.Rabbit")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_RedisPubSub)(nil), "protos.CLIRelayConfig.RelayBackend.RedisPubSub")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_RedisStreams)(nil), "protos.CLIRelayConfig.RelayBackend.RedisStreams")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_AzureServiceBus)(nil), "protos.CLIRelayConfig.RelayBackend.AzureServiceBus")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_MQTT)(nil), "protos.CLIRelayConfig.RelayBackend.MQTT")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_GCPPubSub)(nil), "protos.CLIRelayConfig.RelayBackend.GCPPubSub")
	proto.RegisterType((*CLIRelayConfig_RelayBackend_KubeMQQueue)(nil), "protos.CLIRelayConfig.RelayBackend.KubeMQQueue")
	proto.RegisterType((*RelayConfig)(nil), "protos.RelayConfig")
	proto.RegisterType((*GetAllRelaysRequest)(nil), "protos.GetAllRelaysRequest")
	proto.RegisterType((*GetAllRelaysResponse)(nil), "protos.GetAllRelaysResponse")
	proto.RegisterType((*GetRelayRequest)(nil), "protos.GetRelayRequest")
	proto.RegisterType((*GetRelayResponse)(nil), "protos.GetRelayResponse")
	proto.RegisterType((*CreateRelayRequest)(nil), "protos.CreateRelayRequest")
	proto.RegisterType((*CreateRelayResponse)(nil), "protos.CreateRelayResponse")
	proto.RegisterType((*UpdateRelayRequest)(nil), "protos.UpdateRelayRequest")
	proto.RegisterType((*UpdateRelayResponse)(nil), "protos.UpdateRelayResponse")
	proto.RegisterType((*ResumeRelayRequest)(nil), "protos.ResumeRelayRequest")
	proto.RegisterType((*ResumeRelayResponse)(nil), "protos.ResumeRelayResponse")
	proto.RegisterType((*StopRelayRequest)(nil), "protos.StopRelayRequest")
	proto.RegisterType((*StopRelayResponse)(nil), "protos.StopRelayResponse")
	proto.RegisterType((*DeleteRelayRequest)(nil), "protos.DeleteRelayRequest")
	proto.RegisterType((*DeleteRelayResponse)(nil), "protos.DeleteRelayResponse")
}

func init() { proto.RegisterFile("relay.proto", fileDescriptor_9f69a7d5a802d584) }

var fileDescriptor_9f69a7d5a802d584 = []byte{
	// 1526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdf, 0x52, 0xdb, 0x46,
	0x17, 0xb7, 0x03, 0x36, 0xf8, 0x18, 0x42, 0x58, 0x42, 0x3e, 0xe3, 0x84, 0x2f, 0xc4, 0xf9, 0xbe,
	0x96, 0xb4, 0xb1, 0x9d, 0x40, 0xc2, 0x84, 0x99, 0xcc, 0xa4, 0xe0, 0x74, 0x30, 0x53, 0xc2, 0xe0,
	0xb5, 0x93, 0x4c, 0x7b, 0xa3, 0x4a, 0xf2, 0xc6, 0x56, 0x2d, 0x4b, 0xb2, 0x56, 0x2a, 0x21, 0x33,
	0x9d, 0xe9, 0x55, 0x67, 0x7a, 0xd5, 0xe9, 0xf3, 0xf4, 0x05, 0xfa, 0x0c, 0x7d, 0x82, 0x3e, 0x46,
	0x67, 0xff, 0xc8, 0xd6, 0xda, 0x10, 0x84, 0x27, 0xbd, 0xc2, 0xda, 0x3d, 0xbf, 0x3f, 0xab, 0xdd,
	0xb3, 0x3a, 0x07, 0xc8, 0xfb, 0xc4, 0xd6, 0xcf, 0x2a, 0x9e, 0xef, 0x06, 0x2e, 0xca, 0xf2, 0x3f,
	0xb4, 0xf8, 0x1f, 0x43, 0x37, 0x7b, 0xc4, 0x69, 0xd3, 0x6a, 0xf4, 0x43, 0x04, 0x14, 0x6f, 0x0e,
	0x27, 0x7a, 0xfa, 0xbb, 0x9e, 0x2e, 0x47, 0x6f, 0x0d, 0x47, 0xf5, 0x53, 0x5a, 0xa6, 0x83, 0xc9,
	0xe8, 0xbe, 0xeb, 0x74, 0x5c, 0x39, 0x8a, 0x86, 0xa3, 0x0e, 0x1d, 0xc8, 0xb1, 0x91, 0xa0, 0xe7,
	0xd2, 0xa0, 0xe3, 0x93, 0x88, 0x62, 0x75, 0x38, 0xe1, 0xeb, 0x86, 0x61, 0x05, 0x72, 0xf8, 0xf6,
	0x68, 0x98, 0xb4, 0x2d, 0x5a, 0xf6, 0x42, 0x83, 0x86, 0x86, 0x9c, 0xbc, 0x33, 0x36, 0x49, 0x03,
	0x9f, 0xe8, 0xfd, 0x88, 0x71, 0x63, 0x64, 0xf6, 0x43, 0xe8, 0x93, 0x32, 0x25, 0xfe, 0x8f, 0x96,
	0x49, 0xca, 0x46, 0x18, 0x45, 0xac, 0x8c, 0x6c, 0x0f, 0x82, 0x48, 0x71, 0x6d, 0x38, 0xd8, 0x31,
	0x3d, 0x55, 0x6f, 0x64, 0xa6, 0x17, 0x1a, 0xa4, 0x3f, 0x28, 0x0f, 0x42, 0x12, 0x12, 0x39, 0xb9,
	0x6c, 0xba, 0xfd, 0xbe, 0xeb, 0x54, 0xf5, 0x30, 0xe8, 0x46, 0xfc, 0x72, 0x88, 0x06, 0x7a, 0x10,
	0x89, 0x96, 0xfe, 0x5a, 0x81, 0xeb, 0xb5, 0xa3, 0x43, 0xcc, 0x76, 0xa3, 0xe6, 0x3a, 0xef, 0xac,
	0x0e, 0xaa, 0xc0, 0x4a, 0x37, 0x08, 0x3c, 0xcd, 0xb6, 0x68, 0x40, 0x1c, 0x4d, 0x6f, 0xb7, 0x7d,
	0x42, 0x69, 0x21, 0xbd, 0x91, 0xde, 0xcc, 0xe1, 0x65, 0x36, 0x75, 0xc4, 0x67, 0xf6, 0xc4, 0x04,
	0xda, 0x85, 0x45, 0x4d, 0x5a, 0xd1, 0x82, 0x33, 0x8f, 0x14, 0xae, 0x6d, 0xa4, 0x37, 0xaf, 0x6f,
	0xad, 0x0a, 0x05, 0x5a, 0x19, 0xee, 0x65, 0xeb, 0xcc, 0x23, 0x38, 0xbf, 0x2f, 0x1e, 0xd9, 0x03,
	0x3a, 0x84, 0xeb, 0x1a, 0x3f, 0x08, 0x11, 0x41, 0x61, 0x66, 0x23, 0xbd, 0x99, 0xdf, 0xba, 0x1f,
	0x61, 0x55, 0x6b, 0x15, 0xfe, 0x5b, 0x12, 0xe0, 0x85, 0xf8, 0x53, 0xf1, 0x77, 0x04, 0xca, 0x00,
	0x7a, 0x01, 0x19, 0x7e, 0x58, 0xb8, 0xf1, 0xfc, 0xd6, 0x83, 0x04, 0x94, 0x95, 0x6f, 0x18, 0x00,
	0x0b, 0x1c, 0xda, 0x87, 0xac, 0x7e, 0x4a, 0xe9, 0x80, 0xf2, 0x05, 0xe5, 0xb7, 0xbe, 0x48, 0xc2,
	0xb0, 0xf7, 0xb6, 0xd9, 0x6c, 0x34, 0xb1, 0x44, 0x32, 0x13, 0xfc, 0x0c, 0xca, 0x75, 0x25, 0x32,
	0xf1, 0x8a, 0x01, 0xb0, 0xc0, 0xa1, 0x5d, 0x98, 0x71, 0xe8, 0xa0, 0x30, 0xcb, 0xe1, 0x9f, 0x27,
	0x81, 0x1f, 0x37, 0x1b, 0x98, 0x61, 0x98, 0x7f, 0x71, 0x78, 0x0b, 0x99, 0xe4, 0xfe, 0x31, 0x47,
	0x60, 0x89, 0x44, 0xcf, 0x61, 0x96, 0x1d, 0xc6, 0x42, 0x96, 0x33, 0x6c, 0x26, 0xb2, 0xdf, 0x68,
	0xb5, 0x30, 0x47, 0x21, 0x0d, 0x96, 0xf9, 0x61, 0xd7, 0xe4, 0x61, 0xd7, 0x8c, 0x90, 0x16, 0xe6,
	0x38, 0xd5, 0x76, 0xa2, 0x97, 0xc9, 0xc0, 0x4d, 0x81, 0xdd, 0x0f, 0x29, 0x5e, 0xd2, 0xd5, 0x01,
	0x74, 0x04, 0xd0, 0x31, 0x3d, 0x4d, 0xa4, 0x45, 0x61, 0x9e, 0x33, 0x97, 0x93, 0x30, 0x1f, 0xd4,
	0x4e, 0x4e, 0x42, 0xa3, 0x19, 0x1a, 0x38, 0xd7, 0x31, 0xbd, 0x13, 0x8e, 0x47, 0x18, 0x16, 0x44,
	0x26, 0x69, 0x3c, 0x93, 0x0a, 0x39, 0xce, 0x57, 0x4d, 0x74, 0x70, 0x42, 0x83, 0xbc, 0x6a, 0x34,
	0x18, 0x0c, 0xe7, 0x05, 0x09, 0x7f, 0x60, 0x9c, 0xfc, 0x36, 0x88, 0x3c, 0x42, 0x72, 0x4e, 0xcc,
	0x70, 0xd2, 0x65, 0xde, 0x97, 0x0f, 0xcc, 0xe7, 0x6b, 0x58, 0x14, 0x9c, 0xf2, 0x86, 0x29, 0xe4,
	0x39, 0xe9, 0xa3, 0xc4, 0xa4, 0x4d, 0x81, 0xc3, 0xc2, 0x9a, 0x7c, 0x42, 0x75, 0x98, 0x8f, 0x6e,
	0xc1, 0xc2, 0x02, 0x67, 0x7c, 0x98, 0x84, 0xf1, 0x44, 0x62, 0xf0, 0x10, 0x5d, 0xec, 0x41, 0x86,
	0x67, 0x12, 0xaa, 0xc0, 0xac, 0xe9, 0x3a, 0x8e, 0x4c, 0xc1, 0xe2, 0xc4, 0x8d, 0xc0, 0xa3, 0x6a,
	0xae, 0xe3, 0x60, 0x1e, 0x87, 0xb6, 0x60, 0x56, 0xf7, 0x3b, 0x51, 0xc2, 0xfd, 0xf7, 0xfc, 0x78,
	0x4c, 0xf4, 0xf6, 0x9e, 0xdf, 0xa1, 0x98, 0xc7, 0x16, 0x5d, 0xc8, 0x8a, 0xa4, 0x43, 0x55, 0x45,
	0xed, 0xf6, 0x04, 0x5a, 0x84, 0xc5, 0xe4, 0x9e, 0x28, 0x72, 0x1b, 0x17, 0x00, 0xf8, 0x6a, 0x63,
	0x82, 0x3d, 0xc8, 0xf0, 0x14, 0xbd, 0x74, 0x75, 0x3c, 0xea, 0x0a, 0xab, 0x13, 0x89, 0xaf, 0xae,
	0x8e, 0xc0, 0xcc, 0x71, 0xb3, 0x81, 0x1e, 0x2a, 0x52, 0x85, 0x09, 0xe8, 0x71, 0xb3, 0x11, 0x13,
	0x7a, 0xa4, 0x08, 0xdd, 0x39, 0x2f, 0x7a, 0x4c, 0x26, 0x80, 0xf9, 0x68, 0x1f, 0xd1, 0x63, 0x45,
	0x6b, 0x7d, 0x02, 0x1d, 0x05, 0xc6, 0x04, 0x9f, 0x2a, 0x82, 0xf7, 0x2e, 0x84, 0x8c, 0xa9, 0x3a,
	0x90, 0x15, 0xf7, 0xcd, 0xa5, 0x5b, 0x27, 0xc2, 0x62, 0x8a, 0xdb, 0x8a, 0xe2, 0xdd, 0x0b, 0x00,
	0x63, 0x7a, 0x3f, 0x41, 0x3e, 0x96, 0x54, 0x6c, 0xfb, 0x63, 0xa2, 0x93, 0xdb, 0x1f, 0x8b, 0x8d,
	0x29, 0x3f, 0x53, 0x94, 0xff, 0xf7, 0x31, 0xd4, 0x98, 0xfc, 0xcf, 0x69, 0xf6, 0x89, 0x8a, 0x65,
	0xdc, 0x53, 0xc5, 0xc0, 0xbd, 0xf3, 0xa9, 0x64, 0x70, 0xcc, 0xc1, 0xae, 0xe2, 0xe0, 0xff, 0x1f,
	0x85, 0x8d, 0x59, 0xf8, 0x35, 0x0d, 0x4b, 0x63, 0xb7, 0x2a, 0x5b, 0x50, 0xcc, 0xc5, 0xe4, 0x82,
	0xc6, 0xe2, 0x63, 0x46, 0x9e, 0x2b, 0x46, 0x36, 0x2f, 0x43, 0x8e, 0x79, 0xe9, 0xc2, 0x2c, 0xfb,
	0x56, 0xa0, 0xb2, 0xa2, 0xbf, 0x36, 0x99, 0x16, 0x8d, 0x56, 0x2b, 0x26, 0xfa, 0x58, 0x11, 0x5d,
	0x3f, 0x37, 0x7c, 0x4c, 0xe9, 0x14, 0x72, 0xc3, 0x0b, 0x9f, 0x65, 0x61, 0x4c, 0x6e, 0x32, 0x0b,
	0x87, 0x91, 0x31, 0xcd, 0x1d, 0x45, 0xb3, 0x74, 0x31, 0x66, 0xf2, 0xc0, 0xc5, 0xbe, 0x0c, 0x97,
	0x1e, 0xb8, 0x58, 0xec, 0x15, 0x0e, 0x5c, 0xfc, 0xdb, 0xa3, 0xc8, 0x97, 0xfe, 0x9c, 0x61, 0x07,
	0x7e, 0x54, 0xd9, 0x3d, 0x80, 0x1b, 0xa6, 0x6b, 0xdb, 0xc4, 0x0c, 0x2c, 0xd7, 0xd1, 0x02, 0xb7,
	0x47, 0x1c, 0x59, 0xd6, 0x2d, 0x8d, 0xc6, 0x5b, 0x6c, 0x18, 0xad, 0x03, 0x18, 0x7a, 0x60, 0x76,
	0x35, 0x6a, 0x7d, 0x10, 0x15, 0x5d, 0x06, 0xe7, 0xf8, 0x48, 0xd3, 0xfa, 0x40, 0xd0, 0x67, 0xb0,
	0x24, 0xa6, 0xfb, 0xfa, 0x7b, 0xcd, 0x27, 0x81, 0x7f, 0xc6, 0x2b, 0x9c, 0x0c, 0x5e, 0xe4, 0xc3,
	0xaf, 0xf4, 0xf7, 0x98, 0x0d, 0xa2, 0xfb, 0xb0, 0xc8, 0xd6, 0x20, 0x15, 0xad, 0x36, 0x2f, 0x64,
	0x72, 0x78, 0x61, 0x34, 0x78, 0xd8, 0x46, 0x77, 0x21, 0xef, 0x84, 0x7d, 0xed, 0xd4, 0xf5, 0x7b,
	0xc4, 0xa7, 0xbc, 0x5a, 0xc9, 0x60, 0x70, 0xc2, 0xfe, 0x5b, 0x31, 0x82, 0x1e, 0xc3, 0xaa, 0xc6,
	0x79, 0x69, 0x57, 0xeb, 0xf8, 0x9e, 0x39, 0xac, 0x49, 0xb3, 0x9c, 0x0d, 0xed, 0x8b, 0xb9, 0x03,
	0xdf, 0x33, 0xa3, 0xa2, 0xf4, 0x19, 0xac, 0xa9, 0x90, 0xb6, 0x45, 0x75, 0xc3, 0x26, 0x5a, 0x60,
	0x8b, 0x12, 0x64, 0x1e, 0xaf, 0xc6, 0x60, 0x2f, 0xc5, 0x6c, 0xcb, 0xa6, 0xe8, 0x2b, 0x58, 0x57,
	0x91, 0x81, 0xd5, 0x27, 0x6e, 0x18, 0x68, 0x94, 0x98, 0xae, 0xd3, 0xa6, 0xbc, 0xcc, 0xc8, 0xe0,
	0xb5, 0x18, 0xba, 0x25, 0x22, 0x9a, 0x22, 0x00, 0x15, 0x21, 0x27, 0xab, 0x5a, 0xab, 0xcd, 0x8b,
	0x88, 0x1c, 0x9e, 0xe3, 0xdb, 0x70, 0xd8, 0x46, 0x3b, 0x90, 0xd7, 0x4c, 0xdb, 0xd2, 0x4c, 0xbe,
	0x23, 0xb2, 0x1c, 0xb8, 0x75, 0xfe, 0x77, 0x16, 0xe7, 0x6a, 0xb6, 0x25, 0x7e, 0x96, 0x5e, 0xc0,
	0xca, 0x01, 0x09, 0xf6, 0x6c, 0x9b, 0xcf, 0x53, 0x4c, 0x06, 0x21, 0xa1, 0x01, 0xda, 0x84, 0x59,
	0x56, 0xe1, 0x17, 0x7e, 0x3b, 0xe6, 0x44, 0x2b, 0x11, 0x91, 0x28, 0xf5, 0x2b, 0x7b, 0x61, 0xd0,
	0xc5, 0x3c, 0xa2, 0x14, 0xc2, 0x4d, 0x95, 0x80, 0x7a, 0xae, 0x43, 0x09, 0xaa, 0x40, 0x56, 0x34,
	0x04, 0x85, 0xbf, 0x45, 0x65, 0xb6, 0x3a, 0xc6, 0xd1, 0xe4, 0xb3, 0x58, 0x46, 0xa1, 0x32, 0xcc,
	0x09, 0xef, 0xac, 0x23, 0x98, 0x89, 0x6b, 0xc6, 0x9d, 0x47, 0x31, 0xa5, 0x37, 0xb0, 0x74, 0x40,
	0x02, 0x3e, 0x75, 0x65, 0xcf, 0x68, 0x0d, 0xe6, 0x87, 0xef, 0x51, 0x9c, 0xd3, 0x39, 0x5f, 0xbc,
	0xc7, 0x92, 0x0b, 0x37, 0x46, 0xbc, 0x53, 0x2e, 0xe5, 0x4b, 0xc8, 0xca, 0x6d, 0x48, 0xab, 0x4e,
	0xe2, 0x2b, 0x91, 0x21, 0xa5, 0x3f, 0xb2, 0x80, 0x6a, 0x3e, 0xd1, 0x03, 0x32, 0xe5, 0x62, 0xae,
	0xa2, 0x86, 0x76, 0xa2, 0xe6, 0xa5, 0x9d, 0xa4, 0x12, 0xaa, 0xa7, 0xa2, 0x9e, 0x65, 0x5b, 0xd6,
	0xeb, 0x24, 0xc1, 0xe5, 0x58, 0x4f, 0xc9, 0x32, 0x7d, 0x77, 0xd8, 0xe8, 0xbc, 0xbb, 0xe0, 0x6b,
	0x1a, 0x15, 0x42, 0x43, 0x60, 0xd4, 0xdf, 0xec, 0x44, 0xfd, 0x4d, 0x37, 0x49, 0x4d, 0xc3, 0x7c,
	0x8a, 0xb6, 0xa6, 0xa6, 0x14, 0xee, 0x56, 0xd2, 0x6b, 0xb5, 0x9e, 0x8a, 0xd7, 0xeb, 0x6f, 0xce,
	0x6b, 0x2f, 0x7e, 0xb8, 0xda, 0xb7, 0xa8, 0x9e, 0x9a, 0xec, 0x2a, 0x1e, 0x89, 0x9e, 0xab, 0x77,
	0x79, 0xf5, 0x54, 0x4f, 0x89, 0x56, 0xeb, 0x45, 0xac, 0x74, 0xb6, 0x13, 0xd6, 0x40, 0xf5, 0xd4,
	0xa8, 0x62, 0x66, 0x5b, 0x20, 0x7b, 0xb5, 0x7e, 0xa2, 0x82, 0x86, 0x6d, 0x81, 0x6c, 0xd1, 0x0e,
	0xc7, 0x3a, 0x0c, 0x37, 0x79, 0x5d, 0x52, 0x4f, 0xa9, 0x8d, 0xc5, 0xd1, 0x78, 0x63, 0xe1, 0x5d,
	0xa1, 0xc2, 0xa8, 0xa7, 0xd4, 0x7e, 0x62, 0x1f, 0x60, 0x5e, 0xf6, 0x08, 0xb4, 0xf4, 0x3d, 0xac,
	0x28, 0xc9, 0x33, 0x65, 0xc6, 0x7e, 0xe4, 0x42, 0xf8, 0x25, 0x0d, 0xe8, 0xb5, 0xd7, 0x9e, 0x3e,
	0x3f, 0x2f, 0xe6, 0x8e, 0xa5, 0xee, 0xb5, 0xcb, 0x2f, 0x8a, 0xaf, 0x61, 0x45, 0xf1, 0x31, 0xdd,
	0x52, 0x4b, 0xdf, 0x02, 0xc2, 0x84, 0x86, 0xfd, 0x4f, 0xbf, 0x1c, 0xe6, 0x50, 0xa1, 0x9e, 0xd2,
	0xe1, 0x5b, 0xb8, 0xd1, 0x0c, 0x5c, 0xef, 0xd3, 0xfb, 0xab, 0xc1, 0x72, 0x8c, 0x78, 0xfa, 0xf7,
	0xf7, 0x92, 0xd8, 0x24, 0xf8, 0x77, 0xde, 0x9f, 0x42, 0x3d, 0x9d, 0xc3, 0xfd, 0x9d, 0xef, 0x9e,
	0x74, 0xac, 0xa0, 0x1b, 0x1a, 0x6c, 0xbe, 0xca, 0x4b, 0x0e, 0xd3, 0xf5, 0xbd, 0xaa, 0x67, 0x87,
	0x7d, 0x83, 0xf8, 0x65, 0x6a, 0x76, 0x49, 0x5f, 0xa7, 0x55, 0x23, 0xb4, 0xec, 0x76, 0xb5, 0xe3,
	0x56, 0x05, 0x9b, 0x21, 0xfe, 0x5b, 0xba, 0xfd, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x54, 0xf7,
	0xa0, 0x49, 0x43, 0x15, 0x00, 0x00,
}
