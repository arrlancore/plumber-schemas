// Code generated by protoc-gen-go. DO NOT EDIT.
// source: x_relay.proto

package protos

import (
	fmt "fmt"
	args "github.com/batchcorp/plumber-schemas/build/go/protos/args"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RelayOpts struct {
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *RelayOptsKafka `protobuf:"bytes,100,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	Awssqs *RelayOptsAWSSQS `protobuf:"bytes,101,opt,name=awssqs,proto3" json:"awssqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='MongoDB (CDC)'"
	Mongo *RelayOptsMongo `protobuf:"bytes,102,opt,name=mongo,proto3" json:"mongo,omitempty" kong:"cmd,help='MongoDB (CDC)'"`
	// @gotags: kong:"cmd,help='NSQ'"
	Nsq *RelayOptsNSQ `protobuf:"bytes,103,opt,name=nsq,proto3" json:"nsq,omitempty" kong:"cmd,help='NSQ'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Rabbit *RelayOptsRabbit `protobuf:"bytes,104,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Mqtt *RelayOptsMQTT `protobuf:"bytes,105,opt,name=mqtt,proto3" json:"mqtt,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='Azure Service Bus'"
	AzureServiceBus *RelayOptsAzureServiceBus `protobuf:"bytes,106,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty" kong:"cmd,help='Azure Service Bus'"`
	// @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
	GcpPubsub *RelayOptsGCPPubSub `protobuf:"bytes,107,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty" kong:"cmd,help='Google Cloud Platform Pub/Sub'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *RelayOptsKubeMQQueue `protobuf:"bytes,108,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='Redis PubSub'"
	RedisPubsub *RelayOptsRedisPubSub `protobuf:"bytes,109,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty" kong:"cmd,help='Redis PubSub'"`
	// @gotags: kong:"cmd,help='Redis Streams'"
	RedisStreams *RelayOptsRedisStreams `protobuf:"bytes,111,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty" kong:"cmd,help='Redis Streams'"`
	// @gotags: kong:"cmd,help='PostgreSQL (CDC)'"
	Postgres             *RelayOptsPostgres `protobuf:"bytes,112,opt,name=postgres,proto3" json:"postgres,omitempty" kong:"cmd,help='PostgreSQL (CDC)'"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RelayOpts) Reset()         { *m = RelayOpts{} }
func (m *RelayOpts) String() string { return proto.CompactTextString(m) }
func (*RelayOpts) ProtoMessage()    {}
func (*RelayOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{0}
}

func (m *RelayOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOpts.Unmarshal(m, b)
}
func (m *RelayOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOpts.Marshal(b, m, deterministic)
}
func (m *RelayOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOpts.Merge(m, src)
}
func (m *RelayOpts) XXX_Size() int {
	return xxx_messageInfo_RelayOpts.Size(m)
}
func (m *RelayOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOpts.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOpts proto.InternalMessageInfo

func (m *RelayOpts) GetKafka() *RelayOptsKafka {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *RelayOpts) GetAwssqs() *RelayOptsAWSSQS {
	if m != nil {
		return m.Awssqs
	}
	return nil
}

func (m *RelayOpts) GetMongo() *RelayOptsMongo {
	if m != nil {
		return m.Mongo
	}
	return nil
}

func (m *RelayOpts) GetNsq() *RelayOptsNSQ {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *RelayOpts) GetRabbit() *RelayOptsRabbit {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *RelayOpts) GetMqtt() *RelayOptsMQTT {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *RelayOpts) GetAzureServiceBus() *RelayOptsAzureServiceBus {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *RelayOpts) GetGcpPubsub() *RelayOptsGCPPubSub {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *RelayOpts) GetKubemqQueue() *RelayOptsKubeMQQueue {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *RelayOpts) GetRedisPubsub() *RelayOptsRedisPubSub {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *RelayOpts) GetRedisStreams() *RelayOptsRedisStreams {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

func (m *RelayOpts) GetPostgres() *RelayOptsPostgres {
	if m != nil {
		return m.Postgres
	}
	return nil
}

type RelayOptsKafka struct {
	// @gotags: kong:"embed"
	XConn *args.KafkaConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KafkaRelayArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RelayOptsKafka) Reset()         { *m = RelayOptsKafka{} }
func (m *RelayOptsKafka) String() string { return proto.CompactTextString(m) }
func (*RelayOptsKafka) ProtoMessage()    {}
func (*RelayOptsKafka) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{1}
}

func (m *RelayOptsKafka) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsKafka.Unmarshal(m, b)
}
func (m *RelayOptsKafka) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsKafka.Marshal(b, m, deterministic)
}
func (m *RelayOptsKafka) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsKafka.Merge(m, src)
}
func (m *RelayOptsKafka) XXX_Size() int {
	return xxx_messageInfo_RelayOptsKafka.Size(m)
}
func (m *RelayOptsKafka) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsKafka.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsKafka proto.InternalMessageInfo

func (m *RelayOptsKafka) GetXConn() *args.KafkaConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsKafka) GetArgs() *args.KafkaRelayArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsAWSSQS struct {
	// @gotags: kong:"embed"
	XConn *args.AWSSQSConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AWSSQSRelayArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RelayOptsAWSSQS) Reset()         { *m = RelayOptsAWSSQS{} }
func (m *RelayOptsAWSSQS) String() string { return proto.CompactTextString(m) }
func (*RelayOptsAWSSQS) ProtoMessage()    {}
func (*RelayOptsAWSSQS) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{2}
}

func (m *RelayOptsAWSSQS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsAWSSQS.Unmarshal(m, b)
}
func (m *RelayOptsAWSSQS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsAWSSQS.Marshal(b, m, deterministic)
}
func (m *RelayOptsAWSSQS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsAWSSQS.Merge(m, src)
}
func (m *RelayOptsAWSSQS) XXX_Size() int {
	return xxx_messageInfo_RelayOptsAWSSQS.Size(m)
}
func (m *RelayOptsAWSSQS) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsAWSSQS.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsAWSSQS proto.InternalMessageInfo

func (m *RelayOptsAWSSQS) GetXConn() *args.AWSSQSConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsAWSSQS) GetArgs() *args.AWSSQSRelayArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsMongo struct {
	// @gotags: kong:"embed"
	XConn *args.MongoConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.MongoReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RelayOptsMongo) Reset()         { *m = RelayOptsMongo{} }
func (m *RelayOptsMongo) String() string { return proto.CompactTextString(m) }
func (*RelayOptsMongo) ProtoMessage()    {}
func (*RelayOptsMongo) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{3}
}

func (m *RelayOptsMongo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsMongo.Unmarshal(m, b)
}
func (m *RelayOptsMongo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsMongo.Marshal(b, m, deterministic)
}
func (m *RelayOptsMongo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsMongo.Merge(m, src)
}
func (m *RelayOptsMongo) XXX_Size() int {
	return xxx_messageInfo_RelayOptsMongo.Size(m)
}
func (m *RelayOptsMongo) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsMongo.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsMongo proto.InternalMessageInfo

func (m *RelayOptsMongo) GetXConn() *args.MongoConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsMongo) GetArgs() *args.MongoReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsNSQ struct {
	// @gotags: kong:"embed"
	XConn *args.NSQConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.NSQReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RelayOptsNSQ) Reset()         { *m = RelayOptsNSQ{} }
func (m *RelayOptsNSQ) String() string { return proto.CompactTextString(m) }
func (*RelayOptsNSQ) ProtoMessage()    {}
func (*RelayOptsNSQ) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{4}
}

func (m *RelayOptsNSQ) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsNSQ.Unmarshal(m, b)
}
func (m *RelayOptsNSQ) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsNSQ.Marshal(b, m, deterministic)
}
func (m *RelayOptsNSQ) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsNSQ.Merge(m, src)
}
func (m *RelayOptsNSQ) XXX_Size() int {
	return xxx_messageInfo_RelayOptsNSQ.Size(m)
}
func (m *RelayOptsNSQ) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsNSQ.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsNSQ proto.InternalMessageInfo

func (m *RelayOptsNSQ) GetXConn() *args.NSQConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsNSQ) GetArgs() *args.NSQReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsPostgres struct {
	// @gotags: kong:"embed"
	XConn *args.PostgresConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.PostgresReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RelayOptsPostgres) Reset()         { *m = RelayOptsPostgres{} }
func (m *RelayOptsPostgres) String() string { return proto.CompactTextString(m) }
func (*RelayOptsPostgres) ProtoMessage()    {}
func (*RelayOptsPostgres) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{5}
}

func (m *RelayOptsPostgres) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsPostgres.Unmarshal(m, b)
}
func (m *RelayOptsPostgres) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsPostgres.Marshal(b, m, deterministic)
}
func (m *RelayOptsPostgres) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsPostgres.Merge(m, src)
}
func (m *RelayOptsPostgres) XXX_Size() int {
	return xxx_messageInfo_RelayOptsPostgres.Size(m)
}
func (m *RelayOptsPostgres) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsPostgres.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsPostgres proto.InternalMessageInfo

func (m *RelayOptsPostgres) GetXConn() *args.PostgresConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsPostgres) GetArgs() *args.PostgresReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsRabbit struct {
	// @gotags: kong:"embed"
	XConn *args.RabbitConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RabbitReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RelayOptsRabbit) Reset()         { *m = RelayOptsRabbit{} }
func (m *RelayOptsRabbit) String() string { return proto.CompactTextString(m) }
func (*RelayOptsRabbit) ProtoMessage()    {}
func (*RelayOptsRabbit) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{6}
}

func (m *RelayOptsRabbit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsRabbit.Unmarshal(m, b)
}
func (m *RelayOptsRabbit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsRabbit.Marshal(b, m, deterministic)
}
func (m *RelayOptsRabbit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsRabbit.Merge(m, src)
}
func (m *RelayOptsRabbit) XXX_Size() int {
	return xxx_messageInfo_RelayOptsRabbit.Size(m)
}
func (m *RelayOptsRabbit) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsRabbit.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsRabbit proto.InternalMessageInfo

func (m *RelayOptsRabbit) GetXConn() *args.RabbitConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsRabbit) GetArgs() *args.RabbitReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsRedisPubSub struct {
	// @gotags: kong:"embed"
	XConn *args.RedisPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisPubSubReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RelayOptsRedisPubSub) Reset()         { *m = RelayOptsRedisPubSub{} }
func (m *RelayOptsRedisPubSub) String() string { return proto.CompactTextString(m) }
func (*RelayOptsRedisPubSub) ProtoMessage()    {}
func (*RelayOptsRedisPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{7}
}

func (m *RelayOptsRedisPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsRedisPubSub.Unmarshal(m, b)
}
func (m *RelayOptsRedisPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsRedisPubSub.Marshal(b, m, deterministic)
}
func (m *RelayOptsRedisPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsRedisPubSub.Merge(m, src)
}
func (m *RelayOptsRedisPubSub) XXX_Size() int {
	return xxx_messageInfo_RelayOptsRedisPubSub.Size(m)
}
func (m *RelayOptsRedisPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsRedisPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsRedisPubSub proto.InternalMessageInfo

func (m *RelayOptsRedisPubSub) GetXConn() *args.RedisPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsRedisPubSub) GetArgs() *args.RedisPubSubReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsRedisStreams struct {
	// @gotags: kong:"embed"
	XConn *args.RedisStreamsConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.RedisStreamsReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RelayOptsRedisStreams) Reset()         { *m = RelayOptsRedisStreams{} }
func (m *RelayOptsRedisStreams) String() string { return proto.CompactTextString(m) }
func (*RelayOptsRedisStreams) ProtoMessage()    {}
func (*RelayOptsRedisStreams) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{8}
}

func (m *RelayOptsRedisStreams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsRedisStreams.Unmarshal(m, b)
}
func (m *RelayOptsRedisStreams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsRedisStreams.Marshal(b, m, deterministic)
}
func (m *RelayOptsRedisStreams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsRedisStreams.Merge(m, src)
}
func (m *RelayOptsRedisStreams) XXX_Size() int {
	return xxx_messageInfo_RelayOptsRedisStreams.Size(m)
}
func (m *RelayOptsRedisStreams) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsRedisStreams.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsRedisStreams proto.InternalMessageInfo

func (m *RelayOptsRedisStreams) GetXConn() *args.RedisStreamsConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsRedisStreams) GetArgs() *args.RedisStreamsReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsAzureServiceBus struct {
	// @gotags: kong:"embed"
	XConn *args.AzureServiceBusConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.AzureServiceBusReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *RelayOptsAzureServiceBus) Reset()         { *m = RelayOptsAzureServiceBus{} }
func (m *RelayOptsAzureServiceBus) String() string { return proto.CompactTextString(m) }
func (*RelayOptsAzureServiceBus) ProtoMessage()    {}
func (*RelayOptsAzureServiceBus) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{9}
}

func (m *RelayOptsAzureServiceBus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsAzureServiceBus.Unmarshal(m, b)
}
func (m *RelayOptsAzureServiceBus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsAzureServiceBus.Marshal(b, m, deterministic)
}
func (m *RelayOptsAzureServiceBus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsAzureServiceBus.Merge(m, src)
}
func (m *RelayOptsAzureServiceBus) XXX_Size() int {
	return xxx_messageInfo_RelayOptsAzureServiceBus.Size(m)
}
func (m *RelayOptsAzureServiceBus) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsAzureServiceBus.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsAzureServiceBus proto.InternalMessageInfo

func (m *RelayOptsAzureServiceBus) GetXConn() *args.AzureServiceBusConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsAzureServiceBus) GetArgs() *args.AzureServiceBusReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsMQTT struct {
	// @gotags: kong:"embed"
	XConn *args.MQTTConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.MQTTReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RelayOptsMQTT) Reset()         { *m = RelayOptsMQTT{} }
func (m *RelayOptsMQTT) String() string { return proto.CompactTextString(m) }
func (*RelayOptsMQTT) ProtoMessage()    {}
func (*RelayOptsMQTT) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{10}
}

func (m *RelayOptsMQTT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsMQTT.Unmarshal(m, b)
}
func (m *RelayOptsMQTT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsMQTT.Marshal(b, m, deterministic)
}
func (m *RelayOptsMQTT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsMQTT.Merge(m, src)
}
func (m *RelayOptsMQTT) XXX_Size() int {
	return xxx_messageInfo_RelayOptsMQTT.Size(m)
}
func (m *RelayOptsMQTT) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsMQTT.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsMQTT proto.InternalMessageInfo

func (m *RelayOptsMQTT) GetXConn() *args.MQTTConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsMQTT) GetArgs() *args.MQTTReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsGCPPubSub struct {
	// @gotags: kong:"embed"
	XConn *args.GCPPubSubConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.GCPPubSubReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RelayOptsGCPPubSub) Reset()         { *m = RelayOptsGCPPubSub{} }
func (m *RelayOptsGCPPubSub) String() string { return proto.CompactTextString(m) }
func (*RelayOptsGCPPubSub) ProtoMessage()    {}
func (*RelayOptsGCPPubSub) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{11}
}

func (m *RelayOptsGCPPubSub) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsGCPPubSub.Unmarshal(m, b)
}
func (m *RelayOptsGCPPubSub) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsGCPPubSub.Marshal(b, m, deterministic)
}
func (m *RelayOptsGCPPubSub) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsGCPPubSub.Merge(m, src)
}
func (m *RelayOptsGCPPubSub) XXX_Size() int {
	return xxx_messageInfo_RelayOptsGCPPubSub.Size(m)
}
func (m *RelayOptsGCPPubSub) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsGCPPubSub.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsGCPPubSub proto.InternalMessageInfo

func (m *RelayOptsGCPPubSub) GetXConn() *args.GCPPubSubConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsGCPPubSub) GetArgs() *args.GCPPubSubReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

type RelayOptsKubeMQQueue struct {
	// @gotags: kong:"embed"
	XConn *args.KubeMQQueueConn `protobuf:"bytes,1,opt,name=_conn,json=Conn,proto3" json:"_conn,omitempty" kong:"embed"`
	// @gotags: kong:"embed"
	Args                 *args.KubeMQQueueReadArgs `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty" kong:"embed"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RelayOptsKubeMQQueue) Reset()         { *m = RelayOptsKubeMQQueue{} }
func (m *RelayOptsKubeMQQueue) String() string { return proto.CompactTextString(m) }
func (*RelayOptsKubeMQQueue) ProtoMessage()    {}
func (*RelayOptsKubeMQQueue) Descriptor() ([]byte, []int) {
	return fileDescriptor_73f3fd91232031a7, []int{12}
}

func (m *RelayOptsKubeMQQueue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelayOptsKubeMQQueue.Unmarshal(m, b)
}
func (m *RelayOptsKubeMQQueue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelayOptsKubeMQQueue.Marshal(b, m, deterministic)
}
func (m *RelayOptsKubeMQQueue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelayOptsKubeMQQueue.Merge(m, src)
}
func (m *RelayOptsKubeMQQueue) XXX_Size() int {
	return xxx_messageInfo_RelayOptsKubeMQQueue.Size(m)
}
func (m *RelayOptsKubeMQQueue) XXX_DiscardUnknown() {
	xxx_messageInfo_RelayOptsKubeMQQueue.DiscardUnknown(m)
}

var xxx_messageInfo_RelayOptsKubeMQQueue proto.InternalMessageInfo

func (m *RelayOptsKubeMQQueue) GetXConn() *args.KubeMQQueueConn {
	if m != nil {
		return m.XConn
	}
	return nil
}

func (m *RelayOptsKubeMQQueue) GetArgs() *args.KubeMQQueueReadArgs {
	if m != nil {
		return m.Args
	}
	return nil
}

func init() {
	proto.RegisterType((*RelayOpts)(nil), "protos.RelayOpts")
	proto.RegisterType((*RelayOptsKafka)(nil), "protos.RelayOptsKafka")
	proto.RegisterType((*RelayOptsAWSSQS)(nil), "protos.RelayOptsAWSSQS")
	proto.RegisterType((*RelayOptsMongo)(nil), "protos.RelayOptsMongo")
	proto.RegisterType((*RelayOptsNSQ)(nil), "protos.RelayOptsNSQ")
	proto.RegisterType((*RelayOptsPostgres)(nil), "protos.RelayOptsPostgres")
	proto.RegisterType((*RelayOptsRabbit)(nil), "protos.RelayOptsRabbit")
	proto.RegisterType((*RelayOptsRedisPubSub)(nil), "protos.RelayOptsRedisPubSub")
	proto.RegisterType((*RelayOptsRedisStreams)(nil), "protos.RelayOptsRedisStreams")
	proto.RegisterType((*RelayOptsAzureServiceBus)(nil), "protos.RelayOptsAzureServiceBus")
	proto.RegisterType((*RelayOptsMQTT)(nil), "protos.RelayOptsMQTT")
	proto.RegisterType((*RelayOptsGCPPubSub)(nil), "protos.RelayOptsGCPPubSub")
	proto.RegisterType((*RelayOptsKubeMQQueue)(nil), "protos.RelayOptsKubeMQQueue")
}

func init() { proto.RegisterFile("x_relay.proto", fileDescriptor_73f3fd91232031a7) }

var fileDescriptor_73f3fd91232031a7 = []byte{
	// 788 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x96, 0xcd, 0x4f, 0x1b, 0x39,
	0x18, 0xc6, 0x95, 0x5d, 0x40, 0x8b, 0xf9, 0x5a, 0xbc, 0x64, 0x31, 0x59, 0x58, 0xb1, 0x68, 0x55,
	0x95, 0x96, 0x64, 0x0a, 0x85, 0xaa, 0x3d, 0x55, 0xc0, 0xa1, 0x87, 0x16, 0x9a, 0x78, 0x22, 0x55,
	0xea, 0x25, 0x9a, 0x99, 0x98, 0x49, 0x20, 0xf3, 0xe9, 0x31, 0x94, 0x5e, 0x2a, 0xf5, 0xda, 0xff,
	0xa2, 0x7f, 0x69, 0xe5, 0x8f, 0x20, 0xbf, 0x33, 0x49, 0xc4, 0x05, 0xe4, 0xd7, 0x3f, 0xbf, 0xcf,
	0xe3, 0xf1, 0xe3, 0x99, 0xa0, 0x95, 0x2f, 0xbd, 0x9c, 0x8d, 0xbc, 0xfb, 0x56, 0x9a, 0x27, 0x45,
	0x82, 0x17, 0xd4, 0x3f, 0xde, 0xd8, 0xf6, 0xf2, 0x90, 0x3b, 0xde, 0x57, 0x91, 0xb3, 0x26, 0x67,
	0xf9, 0xed, 0x30, 0x60, 0x4d, 0x5f, 0x70, 0x4d, 0x35, 0xb0, 0x9e, 0xbd, 0xe3, 0x4d, 0x9e, 0x8d,
	0x6b, 0x75, 0x55, 0x0b, 0x83, 0xb4, 0x99, 0x0a, 0x9f, 0x0b, 0xdf, 0x94, 0xff, 0x54, 0xe5, 0x1b,
	0xef, 0xea, 0xc6, 0x33, 0x95, 0x4d, 0x5d, 0x11, 0x3e, 0x8b, 0xb2, 0x66, 0x26, 0x98, 0x60, 0x00,
	0x8d, 0x92, 0x38, 0x4c, 0x4c, 0x65, 0x4d, 0x57, 0xb2, 0xa2, 0x30, 0x85, 0x55, 0x55, 0x88, 0x79,
	0x66, 0xc6, 0x7f, 0xa9, 0x71, 0x9a, 0xf0, 0x22, 0xcc, 0xd9, 0xd8, 0xc9, 0xba, 0x2a, 0xe6, 0x9e,
	0xef, 0x0f, 0x0b, 0xa0, 0x99, 0xb3, 0xfe, 0x90, 0x43, 0x7b, 0xc4, 0x9a, 0xe0, 0x45, 0xce, 0xbc,
	0xc8, 0x74, 0xd9, 0xfb, 0x39, 0x8f, 0x16, 0xa9, 0x7c, 0x32, 0x1f, 0xd3, 0x82, 0xe3, 0x03, 0x34,
	0xaf, 0xf6, 0x40, 0xfa, 0xbb, 0xb5, 0xa7, 0x4b, 0x47, 0x7f, 0x6b, 0x88, 0xb7, 0x1e, 0x88, 0xf7,
	0x72, 0x96, 0x6a, 0x08, 0x3b, 0x68, 0xc1, 0xbb, 0xe3, 0x3c, 0xe3, 0x84, 0x29, 0x7c, 0xb3, 0x82,
	0x9f, 0x7e, 0x72, 0xdd, 0x8e, 0x4b, 0x0d, 0x26, 0xdb, 0xab, 0x7d, 0x93, 0xab, 0x29, 0xed, 0x2f,
	0xe4, 0x2c, 0xd5, 0x10, 0x7e, 0x82, 0x7e, 0x8f, 0x79, 0x46, 0x42, 0xc5, 0x6e, 0x54, 0xd8, 0x4b,
	0xb7, 0x43, 0x25, 0x20, 0x6d, 0xe8, 0xa7, 0x40, 0x06, 0x53, 0x6c, 0x50, 0x35, 0x4d, 0x0d, 0x86,
	0xf7, 0xd1, 0x9c, 0x7c, 0xd8, 0x64, 0xa8, 0xf0, 0x7a, 0xd5, 0x45, 0xa7, 0xdb, 0xa5, 0x0a, 0xc1,
	0x1f, 0xd0, 0xba, 0x4a, 0x47, 0xcf, 0xa4, 0xa3, 0xe7, 0x0b, 0x4e, 0xae, 0xd5, 0xba, 0xdd, 0xea,
	0x6e, 0x25, 0xe9, 0x6a, 0xf0, 0x4c, 0x70, 0xba, 0xe6, 0xc1, 0x02, 0x7e, 0x83, 0x50, 0x18, 0xa4,
	0x3d, 0x7d, 0x34, 0xe4, 0x46, 0xb5, 0x69, 0x54, 0xda, 0xbc, 0x3b, 0x6f, 0xb7, 0x85, 0xef, 0x0a,
	0x9f, 0x2e, 0x86, 0x41, 0xda, 0x56, 0x30, 0x7e, 0x8b, 0x96, 0x75, 0x96, 0x7a, 0x2a, 0x4b, 0x64,
	0xa4, 0x16, 0x6f, 0x57, 0x0f, 0x48, 0xf8, 0xec, 0xa2, 0xd3, 0x91, 0x0c, 0x5d, 0xd2, 0x2b, 0xd4,
	0x40, 0x36, 0x50, 0xe7, 0x3f, 0x56, 0x8f, 0xa6, 0x34, 0xa0, 0x12, 0x32, 0xfa, 0x4b, 0xb9, 0x19,
	0x48, 0x07, 0x67, 0x68, 0x45, 0x37, 0x30, 0x01, 0x22, 0x89, 0xea, 0xb0, 0x33, 0xb9, 0x83, 0xab,
	0x21, 0xaa, 0x45, 0xcd, 0x08, 0x9f, 0xa0, 0x3f, 0xc6, 0x29, 0x26, 0xa9, 0x5a, 0xbe, 0x55, 0x59,
	0xde, 0x36, 0x00, 0x7d, 0x40, 0xf7, 0x62, 0xb4, 0x0a, 0x13, 0x88, 0x9f, 0xa3, 0xf9, 0x5e, 0x90,
	0xc4, 0x31, 0xa9, 0xc1, 0x24, 0xc9, 0x9c, 0xb7, 0x14, 0x72, 0x9e, 0xc4, 0x31, 0x9d, 0x93, 0x7f,
	0xb1, 0x83, 0xe6, 0x64, 0x9d, 0xfc, 0xa6, 0xd8, 0x7f, 0xaa, 0xac, 0x6a, 0x7e, 0x9a, 0x87, 0x9c,
	0x2a, 0x70, 0x2f, 0x43, 0x6b, 0xa5, 0x08, 0xcb, 0xe8, 0xda, 0x82, 0x9b, 0xa0, 0x89, 0x66, 0x2c,
	0xc5, 0x17, 0x40, 0x71, 0x7b, 0x02, 0x5c, 0x96, 0x8c, 0xac, 0x2d, 0xaa, 0x5b, 0x30, 0x7b, 0x8b,
	0x0a, 0xb1, 0x04, 0x5b, 0x40, 0xb0, 0x51, 0x65, 0x29, 0xf3, 0xfa, 0x96, 0x5c, 0x88, 0x96, 0xed,
	0x8b, 0x84, 0xf7, 0xa1, 0xd8, 0x06, 0x68, 0x70, 0xe9, 0x76, 0x2c, 0xa9, 0x03, 0x20, 0x45, 0xca,
	0x64, 0x49, 0xe8, 0x16, 0xad, 0x57, 0x4e, 0x16, 0xb7, 0xa0, 0xda, 0x16, 0xe8, 0x31, 0xa6, 0x2c,
	0xc9, 0x43, 0x20, 0xb9, 0x33, 0x11, 0x2f, 0xe9, 0xa6, 0xd6, 0x11, 0xea, 0xeb, 0x3f, 0xfb, 0x08,
	0x35, 0xf3, 0xc8, 0xd0, 0x98, 0xf7, 0x09, 0x54, 0xfc, 0x86, 0x36, 0x26, 0x5d, 0x22, 0x7c, 0x08,
	0x65, 0x61, 0x18, 0x2c, 0xd0, 0xd2, 0x3e, 0x06, 0xda, 0xbb, 0xd3, 0x56, 0x94, 0x0c, 0x7c, 0xaf,
	0xa1, 0xfa, 0xc4, 0x4b, 0x88, 0x8f, 0xa0, 0x85, 0x9d, 0x6a, 0x43, 0x43, 0x5a, 0x1e, 0x4e, 0x80,
	0x87, 0xff, 0xa6, 0x2e, 0x29, 0x99, 0xf8, 0x51, 0x43, 0x64, 0xda, 0x0b, 0x11, 0x9f, 0x40, 0x1f,
	0x70, 0x63, 0x25, 0xd8, 0xb2, 0xf2, 0x1a, 0x58, 0xf9, 0x7f, 0xd6, 0xaa, 0x92, 0x9b, 0x6b, 0xb4,
	0x02, 0xde, 0xea, 0xf8, 0x19, 0x74, 0x50, 0x87, 0x17, 0xa5, 0xd3, 0xed, 0x5a, 0xb2, 0x4d, 0x20,
	0xbb, 0x55, 0x41, 0x4b, 0x5a, 0xf7, 0x08, 0x57, 0x5f, 0xe1, 0xd8, 0x81, 0x82, 0xf0, 0x66, 0x3e,
	0x60, 0x96, 0xea, 0x11, 0x50, 0xfd, 0x77, 0x32, 0x3f, 0x23, 0x7a, 0xd6, 0x07, 0x60, 0x76, 0xf4,
	0x2c, 0xf0, 0x91, 0xd1, 0xb3, 0xbf, 0x2d, 0xc0, 0xc0, 0xd9, 0xab, 0xcf, 0xc7, 0xe1, 0xb0, 0x18,
	0x08, 0xbf, 0x15, 0x24, 0x91, 0xe3, 0x7b, 0x45, 0x30, 0x08, 0x92, 0x3c, 0x75, 0xd2, 0x91, 0x88,
	0x7c, 0x96, 0x37, 0x79, 0x30, 0x60, 0x91, 0xc7, 0x1d, 0x5f, 0x0c, 0x47, 0x7d, 0x27, 0x4c, 0x1c,
	0xdd, 0xd6, 0xd7, 0xbf, 0xc3, 0x5e, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x6c, 0xde, 0x82, 0x19,
	0x9f, 0x09, 0x00, 0x00,
}
