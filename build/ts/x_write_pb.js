// source: x_write.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var records_base_pb = require('./records/base_pb.js');
goog.object.extend(proto, records_base_pb);
var args_activemq_pb = require('./args/activemq_pb.js');
goog.object.extend(proto, args_activemq_pb);
var args_azure$service$bus_pb = require('./args/azure-service-bus_pb.js');
goog.object.extend(proto, args_azure$service$bus_pb);
var args_azure$event$hub_pb = require('./args/azure-event-hub_pb.js');
goog.object.extend(proto, args_azure$event$hub_pb);
var args_aws$sns_pb = require('./args/aws-sns_pb.js');
goog.object.extend(proto, args_aws$sns_pb);
var args_aws$sqs_pb = require('./args/aws-sqs_pb.js');
goog.object.extend(proto, args_aws$sqs_pb);
var args_gcp$pubsub_pb = require('./args/gcp-pubsub_pb.js');
goog.object.extend(proto, args_gcp$pubsub_pb);
var args_kafka_pb = require('./args/kafka_pb.js');
goog.object.extend(proto, args_kafka_pb);
var args_kubemq$queue_pb = require('./args/kubemq-queue_pb.js');
goog.object.extend(proto, args_kubemq$queue_pb);
var args_mqtt_pb = require('./args/mqtt_pb.js');
goog.object.extend(proto, args_mqtt_pb);
var args_nats_pb = require('./args/nats_pb.js');
goog.object.extend(proto, args_nats_pb);
var args_nats$streaming_pb = require('./args/nats-streaming_pb.js');
goog.object.extend(proto, args_nats$streaming_pb);
var args_nsq_pb = require('./args/nsq_pb.js');
goog.object.extend(proto, args_nsq_pb);
var args_pulsar_pb = require('./args/pulsar_pb.js');
goog.object.extend(proto, args_pulsar_pb);
var args_rabbit_pb = require('./args/rabbit_pb.js');
goog.object.extend(proto, args_rabbit_pb);
var args_rabbit$streams_pb = require('./args/rabbit-streams_pb.js');
goog.object.extend(proto, args_rabbit$streams_pb);
var args_redis$pubsub_pb = require('./args/redis-pubsub_pb.js');
goog.object.extend(proto, args_redis$pubsub_pb);
var args_redis$streams_pb = require('./args/redis-streams_pb.js');
goog.object.extend(proto, args_redis$streams_pb);
goog.exportSymbol('proto.protos.WriteOpts', null, global);
goog.exportSymbol('proto.protos.WriteOptsAWSSNS', null, global);
goog.exportSymbol('proto.protos.WriteOptsAWSSQS', null, global);
goog.exportSymbol('proto.protos.WriteOptsActiveMQ', null, global);
goog.exportSymbol('proto.protos.WriteOptsAzureEventHub', null, global);
goog.exportSymbol('proto.protos.WriteOptsAzureServiceBus', null, global);
goog.exportSymbol('proto.protos.WriteOptsGCPPubSub', null, global);
goog.exportSymbol('proto.protos.WriteOptsKafka', null, global);
goog.exportSymbol('proto.protos.WriteOptsKubeMQQueue', null, global);
goog.exportSymbol('proto.protos.WriteOptsMQTT', null, global);
goog.exportSymbol('proto.protos.WriteOptsNSQ', null, global);
goog.exportSymbol('proto.protos.WriteOptsNats', null, global);
goog.exportSymbol('proto.protos.WriteOptsNatsStreaming', null, global);
goog.exportSymbol('proto.protos.WriteOptsPulsar', null, global);
goog.exportSymbol('proto.protos.WriteOptsRabbit', null, global);
goog.exportSymbol('proto.protos.WriteOptsRabbitStreams', null, global);
goog.exportSymbol('proto.protos.WriteOptsRedisPubSub', null, global);
goog.exportSymbol('proto.protos.WriteOptsRedisStreams', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOpts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOpts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOpts.displayName = 'proto.protos.WriteOpts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsKafka = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsKafka, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsKafka.displayName = 'proto.protos.WriteOptsKafka';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsActiveMQ = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsActiveMQ, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsActiveMQ.displayName = 'proto.protos.WriteOptsActiveMQ';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsAWSSQS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsAWSSQS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsAWSSQS.displayName = 'proto.protos.WriteOptsAWSSQS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsAWSSNS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsAWSSNS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsAWSSNS.displayName = 'proto.protos.WriteOptsAWSSNS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsNats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsNats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsNats.displayName = 'proto.protos.WriteOptsNats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsNatsStreaming = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsNatsStreaming, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsNatsStreaming.displayName = 'proto.protos.WriteOptsNatsStreaming';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsNSQ = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsNSQ, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsNSQ.displayName = 'proto.protos.WriteOptsNSQ';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsPulsar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsPulsar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsPulsar.displayName = 'proto.protos.WriteOptsPulsar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsRabbit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsRabbit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsRabbit.displayName = 'proto.protos.WriteOptsRabbit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsRabbitStreams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsRabbitStreams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsRabbitStreams.displayName = 'proto.protos.WriteOptsRabbitStreams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsRedisPubSub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsRedisPubSub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsRedisPubSub.displayName = 'proto.protos.WriteOptsRedisPubSub';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsRedisStreams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsRedisStreams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsRedisStreams.displayName = 'proto.protos.WriteOptsRedisStreams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsAzureEventHub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsAzureEventHub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsAzureEventHub.displayName = 'proto.protos.WriteOptsAzureEventHub';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsAzureServiceBus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsAzureServiceBus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsAzureServiceBus.displayName = 'proto.protos.WriteOptsAzureServiceBus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsMQTT = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsMQTT, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsMQTT.displayName = 'proto.protos.WriteOptsMQTT';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsGCPPubSub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsGCPPubSub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsGCPPubSub.displayName = 'proto.protos.WriteOptsGCPPubSub';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.WriteOptsKubeMQQueue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.WriteOptsKubeMQQueue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.WriteOptsKubeMQQueue.displayName = 'proto.protos.WriteOptsKubeMQQueue';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOpts.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOpts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOpts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOpts.toObject = function(includeInstance, msg) {
  var f, obj = {
    record: (f = msg.getRecord()) && records_base_pb.WriteRecord.toObject(includeInstance, f),
    kafka: (f = msg.getKafka()) && proto.protos.WriteOptsKafka.toObject(includeInstance, f),
    activemq: (f = msg.getActivemq()) && proto.protos.WriteOptsActiveMQ.toObject(includeInstance, f),
    awssqs: (f = msg.getAwssqs()) && proto.protos.WriteOptsAWSSQS.toObject(includeInstance, f),
    awssns: (f = msg.getAwssns()) && proto.protos.WriteOptsAWSSNS.toObject(includeInstance, f),
    nats: (f = msg.getNats()) && proto.protos.WriteOptsNats.toObject(includeInstance, f),
    natsStreaming: (f = msg.getNatsStreaming()) && proto.protos.WriteOptsNatsStreaming.toObject(includeInstance, f),
    nsq: (f = msg.getNsq()) && proto.protos.WriteOptsNSQ.toObject(includeInstance, f),
    pulsar: (f = msg.getPulsar()) && proto.protos.WriteOptsPulsar.toObject(includeInstance, f),
    rabbit: (f = msg.getRabbit()) && proto.protos.WriteOptsRabbit.toObject(includeInstance, f),
    rabbitStreams: (f = msg.getRabbitStreams()) && proto.protos.WriteOptsRabbitStreams.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && proto.protos.WriteOptsMQTT.toObject(includeInstance, f),
    azureServiceBus: (f = msg.getAzureServiceBus()) && proto.protos.WriteOptsAzureServiceBus.toObject(includeInstance, f),
    azureEventHub: (f = msg.getAzureEventHub()) && proto.protos.WriteOptsAzureEventHub.toObject(includeInstance, f),
    gcpPubsub: (f = msg.getGcpPubsub()) && proto.protos.WriteOptsGCPPubSub.toObject(includeInstance, f),
    kubemqQueue: (f = msg.getKubemqQueue()) && proto.protos.WriteOptsKubeMQQueue.toObject(includeInstance, f),
    redisPubsub: (f = msg.getRedisPubsub()) && proto.protos.WriteOptsRedisPubSub.toObject(includeInstance, f),
    redisStreams: (f = msg.getRedisStreams()) && proto.protos.WriteOptsRedisStreams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOpts}
 */
proto.protos.WriteOpts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOpts;
  return proto.protos.WriteOpts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOpts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOpts}
 */
proto.protos.WriteOpts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new records_base_pb.WriteRecord;
      reader.readMessage(value,records_base_pb.WriteRecord.deserializeBinaryFromReader);
      msg.setRecord(value);
      break;
    case 100:
      var value = new proto.protos.WriteOptsKafka;
      reader.readMessage(value,proto.protos.WriteOptsKafka.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 101:
      var value = new proto.protos.WriteOptsActiveMQ;
      reader.readMessage(value,proto.protos.WriteOptsActiveMQ.deserializeBinaryFromReader);
      msg.setActivemq(value);
      break;
    case 102:
      var value = new proto.protos.WriteOptsAWSSQS;
      reader.readMessage(value,proto.protos.WriteOptsAWSSQS.deserializeBinaryFromReader);
      msg.setAwssqs(value);
      break;
    case 103:
      var value = new proto.protos.WriteOptsAWSSNS;
      reader.readMessage(value,proto.protos.WriteOptsAWSSNS.deserializeBinaryFromReader);
      msg.setAwssns(value);
      break;
    case 104:
      var value = new proto.protos.WriteOptsNats;
      reader.readMessage(value,proto.protos.WriteOptsNats.deserializeBinaryFromReader);
      msg.setNats(value);
      break;
    case 105:
      var value = new proto.protos.WriteOptsNatsStreaming;
      reader.readMessage(value,proto.protos.WriteOptsNatsStreaming.deserializeBinaryFromReader);
      msg.setNatsStreaming(value);
      break;
    case 106:
      var value = new proto.protos.WriteOptsNSQ;
      reader.readMessage(value,proto.protos.WriteOptsNSQ.deserializeBinaryFromReader);
      msg.setNsq(value);
      break;
    case 107:
      var value = new proto.protos.WriteOptsPulsar;
      reader.readMessage(value,proto.protos.WriteOptsPulsar.deserializeBinaryFromReader);
      msg.setPulsar(value);
      break;
    case 108:
      var value = new proto.protos.WriteOptsRabbit;
      reader.readMessage(value,proto.protos.WriteOptsRabbit.deserializeBinaryFromReader);
      msg.setRabbit(value);
      break;
    case 109:
      var value = new proto.protos.WriteOptsRabbitStreams;
      reader.readMessage(value,proto.protos.WriteOptsRabbitStreams.deserializeBinaryFromReader);
      msg.setRabbitStreams(value);
      break;
    case 110:
      var value = new proto.protos.WriteOptsMQTT;
      reader.readMessage(value,proto.protos.WriteOptsMQTT.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    case 111:
      var value = new proto.protos.WriteOptsAzureServiceBus;
      reader.readMessage(value,proto.protos.WriteOptsAzureServiceBus.deserializeBinaryFromReader);
      msg.setAzureServiceBus(value);
      break;
    case 112:
      var value = new proto.protos.WriteOptsAzureEventHub;
      reader.readMessage(value,proto.protos.WriteOptsAzureEventHub.deserializeBinaryFromReader);
      msg.setAzureEventHub(value);
      break;
    case 113:
      var value = new proto.protos.WriteOptsGCPPubSub;
      reader.readMessage(value,proto.protos.WriteOptsGCPPubSub.deserializeBinaryFromReader);
      msg.setGcpPubsub(value);
      break;
    case 114:
      var value = new proto.protos.WriteOptsKubeMQQueue;
      reader.readMessage(value,proto.protos.WriteOptsKubeMQQueue.deserializeBinaryFromReader);
      msg.setKubemqQueue(value);
      break;
    case 115:
      var value = new proto.protos.WriteOptsRedisPubSub;
      reader.readMessage(value,proto.protos.WriteOptsRedisPubSub.deserializeBinaryFromReader);
      msg.setRedisPubsub(value);
      break;
    case 116:
      var value = new proto.protos.WriteOptsRedisStreams;
      reader.readMessage(value,proto.protos.WriteOptsRedisStreams.deserializeBinaryFromReader);
      msg.setRedisStreams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOpts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOpts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOpts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOpts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecord();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      records_base_pb.WriteRecord.serializeBinaryToWriter
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.protos.WriteOptsKafka.serializeBinaryToWriter
    );
  }
  f = message.getActivemq();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.protos.WriteOptsActiveMQ.serializeBinaryToWriter
    );
  }
  f = message.getAwssqs();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.protos.WriteOptsAWSSQS.serializeBinaryToWriter
    );
  }
  f = message.getAwssns();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.protos.WriteOptsAWSSNS.serializeBinaryToWriter
    );
  }
  f = message.getNats();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.protos.WriteOptsNats.serializeBinaryToWriter
    );
  }
  f = message.getNatsStreaming();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      proto.protos.WriteOptsNatsStreaming.serializeBinaryToWriter
    );
  }
  f = message.getNsq();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      proto.protos.WriteOptsNSQ.serializeBinaryToWriter
    );
  }
  f = message.getPulsar();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      proto.protos.WriteOptsPulsar.serializeBinaryToWriter
    );
  }
  f = message.getRabbit();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      proto.protos.WriteOptsRabbit.serializeBinaryToWriter
    );
  }
  f = message.getRabbitStreams();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      proto.protos.WriteOptsRabbitStreams.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto.protos.WriteOptsMQTT.serializeBinaryToWriter
    );
  }
  f = message.getAzureServiceBus();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      proto.protos.WriteOptsAzureServiceBus.serializeBinaryToWriter
    );
  }
  f = message.getAzureEventHub();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto.protos.WriteOptsAzureEventHub.serializeBinaryToWriter
    );
  }
  f = message.getGcpPubsub();
  if (f != null) {
    writer.writeMessage(
      113,
      f,
      proto.protos.WriteOptsGCPPubSub.serializeBinaryToWriter
    );
  }
  f = message.getKubemqQueue();
  if (f != null) {
    writer.writeMessage(
      114,
      f,
      proto.protos.WriteOptsKubeMQQueue.serializeBinaryToWriter
    );
  }
  f = message.getRedisPubsub();
  if (f != null) {
    writer.writeMessage(
      115,
      f,
      proto.protos.WriteOptsRedisPubSub.serializeBinaryToWriter
    );
  }
  f = message.getRedisStreams();
  if (f != null) {
    writer.writeMessage(
      116,
      f,
      proto.protos.WriteOptsRedisStreams.serializeBinaryToWriter
    );
  }
};


/**
 * optional records.WriteRecord record = 1;
 * @return {?proto.protos.records.WriteRecord}
 */
proto.protos.WriteOpts.prototype.getRecord = function() {
  return /** @type{?proto.protos.records.WriteRecord} */ (
    jspb.Message.getWrapperField(this, records_base_pb.WriteRecord, 1));
};


/**
 * @param {?proto.protos.records.WriteRecord|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setRecord = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearRecord = function() {
  return this.setRecord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasRecord = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional WriteOptsKafka kafka = 100;
 * @return {?proto.protos.WriteOptsKafka}
 */
proto.protos.WriteOpts.prototype.getKafka = function() {
  return /** @type{?proto.protos.WriteOptsKafka} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsKafka, 100));
};


/**
 * @param {?proto.protos.WriteOptsKafka|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setKafka = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional WriteOptsActiveMQ activemq = 101;
 * @return {?proto.protos.WriteOptsActiveMQ}
 */
proto.protos.WriteOpts.prototype.getActivemq = function() {
  return /** @type{?proto.protos.WriteOptsActiveMQ} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsActiveMQ, 101));
};


/**
 * @param {?proto.protos.WriteOptsActiveMQ|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setActivemq = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearActivemq = function() {
  return this.setActivemq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasActivemq = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional WriteOptsAWSSQS awssqs = 102;
 * @return {?proto.protos.WriteOptsAWSSQS}
 */
proto.protos.WriteOpts.prototype.getAwssqs = function() {
  return /** @type{?proto.protos.WriteOptsAWSSQS} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsAWSSQS, 102));
};


/**
 * @param {?proto.protos.WriteOptsAWSSQS|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setAwssqs = function(value) {
  return jspb.Message.setWrapperField(this, 102, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearAwssqs = function() {
  return this.setAwssqs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasAwssqs = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional WriteOptsAWSSNS awssns = 103;
 * @return {?proto.protos.WriteOptsAWSSNS}
 */
proto.protos.WriteOpts.prototype.getAwssns = function() {
  return /** @type{?proto.protos.WriteOptsAWSSNS} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsAWSSNS, 103));
};


/**
 * @param {?proto.protos.WriteOptsAWSSNS|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setAwssns = function(value) {
  return jspb.Message.setWrapperField(this, 103, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearAwssns = function() {
  return this.setAwssns(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasAwssns = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional WriteOptsNats nats = 104;
 * @return {?proto.protos.WriteOptsNats}
 */
proto.protos.WriteOpts.prototype.getNats = function() {
  return /** @type{?proto.protos.WriteOptsNats} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsNats, 104));
};


/**
 * @param {?proto.protos.WriteOptsNats|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setNats = function(value) {
  return jspb.Message.setWrapperField(this, 104, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearNats = function() {
  return this.setNats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasNats = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional WriteOptsNatsStreaming nats_streaming = 105;
 * @return {?proto.protos.WriteOptsNatsStreaming}
 */
proto.protos.WriteOpts.prototype.getNatsStreaming = function() {
  return /** @type{?proto.protos.WriteOptsNatsStreaming} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsNatsStreaming, 105));
};


/**
 * @param {?proto.protos.WriteOptsNatsStreaming|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setNatsStreaming = function(value) {
  return jspb.Message.setWrapperField(this, 105, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearNatsStreaming = function() {
  return this.setNatsStreaming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasNatsStreaming = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional WriteOptsNSQ nsq = 106;
 * @return {?proto.protos.WriteOptsNSQ}
 */
proto.protos.WriteOpts.prototype.getNsq = function() {
  return /** @type{?proto.protos.WriteOptsNSQ} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsNSQ, 106));
};


/**
 * @param {?proto.protos.WriteOptsNSQ|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setNsq = function(value) {
  return jspb.Message.setWrapperField(this, 106, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearNsq = function() {
  return this.setNsq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasNsq = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional WriteOptsPulsar pulsar = 107;
 * @return {?proto.protos.WriteOptsPulsar}
 */
proto.protos.WriteOpts.prototype.getPulsar = function() {
  return /** @type{?proto.protos.WriteOptsPulsar} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsPulsar, 107));
};


/**
 * @param {?proto.protos.WriteOptsPulsar|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setPulsar = function(value) {
  return jspb.Message.setWrapperField(this, 107, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearPulsar = function() {
  return this.setPulsar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasPulsar = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional WriteOptsRabbit rabbit = 108;
 * @return {?proto.protos.WriteOptsRabbit}
 */
proto.protos.WriteOpts.prototype.getRabbit = function() {
  return /** @type{?proto.protos.WriteOptsRabbit} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsRabbit, 108));
};


/**
 * @param {?proto.protos.WriteOptsRabbit|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setRabbit = function(value) {
  return jspb.Message.setWrapperField(this, 108, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearRabbit = function() {
  return this.setRabbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasRabbit = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional WriteOptsRabbitStreams rabbit_streams = 109;
 * @return {?proto.protos.WriteOptsRabbitStreams}
 */
proto.protos.WriteOpts.prototype.getRabbitStreams = function() {
  return /** @type{?proto.protos.WriteOptsRabbitStreams} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsRabbitStreams, 109));
};


/**
 * @param {?proto.protos.WriteOptsRabbitStreams|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setRabbitStreams = function(value) {
  return jspb.Message.setWrapperField(this, 109, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearRabbitStreams = function() {
  return this.setRabbitStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasRabbitStreams = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional WriteOptsMQTT mqtt = 110;
 * @return {?proto.protos.WriteOptsMQTT}
 */
proto.protos.WriteOpts.prototype.getMqtt = function() {
  return /** @type{?proto.protos.WriteOptsMQTT} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsMQTT, 110));
};


/**
 * @param {?proto.protos.WriteOptsMQTT|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setMqtt = function(value) {
  return jspb.Message.setWrapperField(this, 110, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearMqtt = function() {
  return this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional WriteOptsAzureServiceBus azure_service_bus = 111;
 * @return {?proto.protos.WriteOptsAzureServiceBus}
 */
proto.protos.WriteOpts.prototype.getAzureServiceBus = function() {
  return /** @type{?proto.protos.WriteOptsAzureServiceBus} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsAzureServiceBus, 111));
};


/**
 * @param {?proto.protos.WriteOptsAzureServiceBus|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setAzureServiceBus = function(value) {
  return jspb.Message.setWrapperField(this, 111, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearAzureServiceBus = function() {
  return this.setAzureServiceBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasAzureServiceBus = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional WriteOptsAzureEventHub azure_event_hub = 112;
 * @return {?proto.protos.WriteOptsAzureEventHub}
 */
proto.protos.WriteOpts.prototype.getAzureEventHub = function() {
  return /** @type{?proto.protos.WriteOptsAzureEventHub} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsAzureEventHub, 112));
};


/**
 * @param {?proto.protos.WriteOptsAzureEventHub|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setAzureEventHub = function(value) {
  return jspb.Message.setWrapperField(this, 112, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearAzureEventHub = function() {
  return this.setAzureEventHub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasAzureEventHub = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional WriteOptsGCPPubSub gcp_pubsub = 113;
 * @return {?proto.protos.WriteOptsGCPPubSub}
 */
proto.protos.WriteOpts.prototype.getGcpPubsub = function() {
  return /** @type{?proto.protos.WriteOptsGCPPubSub} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsGCPPubSub, 113));
};


/**
 * @param {?proto.protos.WriteOptsGCPPubSub|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setGcpPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 113, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearGcpPubsub = function() {
  return this.setGcpPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasGcpPubsub = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional WriteOptsKubeMQQueue kubemq_queue = 114;
 * @return {?proto.protos.WriteOptsKubeMQQueue}
 */
proto.protos.WriteOpts.prototype.getKubemqQueue = function() {
  return /** @type{?proto.protos.WriteOptsKubeMQQueue} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsKubeMQQueue, 114));
};


/**
 * @param {?proto.protos.WriteOptsKubeMQQueue|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setKubemqQueue = function(value) {
  return jspb.Message.setWrapperField(this, 114, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearKubemqQueue = function() {
  return this.setKubemqQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasKubemqQueue = function() {
  return jspb.Message.getField(this, 114) != null;
};


/**
 * optional WriteOptsRedisPubSub redis_pubsub = 115;
 * @return {?proto.protos.WriteOptsRedisPubSub}
 */
proto.protos.WriteOpts.prototype.getRedisPubsub = function() {
  return /** @type{?proto.protos.WriteOptsRedisPubSub} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsRedisPubSub, 115));
};


/**
 * @param {?proto.protos.WriteOptsRedisPubSub|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setRedisPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 115, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearRedisPubsub = function() {
  return this.setRedisPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasRedisPubsub = function() {
  return jspb.Message.getField(this, 115) != null;
};


/**
 * optional WriteOptsRedisStreams redis_streams = 116;
 * @return {?proto.protos.WriteOptsRedisStreams}
 */
proto.protos.WriteOpts.prototype.getRedisStreams = function() {
  return /** @type{?proto.protos.WriteOptsRedisStreams} */ (
    jspb.Message.getWrapperField(this, proto.protos.WriteOptsRedisStreams, 116));
};


/**
 * @param {?proto.protos.WriteOptsRedisStreams|undefined} value
 * @return {!proto.protos.WriteOpts} returns this
*/
proto.protos.WriteOpts.prototype.setRedisStreams = function(value) {
  return jspb.Message.setWrapperField(this, 116, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOpts} returns this
 */
proto.protos.WriteOpts.prototype.clearRedisStreams = function() {
  return this.setRedisStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOpts.prototype.hasRedisStreams = function() {
  return jspb.Message.getField(this, 116) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsKafka.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsKafka.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsKafka} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsKafka.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kafka_pb.KafkaConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kafka_pb.KafkaWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsKafka}
 */
proto.protos.WriteOptsKafka.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsKafka;
  return proto.protos.WriteOptsKafka.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsKafka} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsKafka}
 */
proto.protos.WriteOptsKafka.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kafka_pb.KafkaConn;
      reader.readMessage(value,args_kafka_pb.KafkaConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kafka_pb.KafkaWriteOpts;
      reader.readMessage(value,args_kafka_pb.KafkaWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsKafka.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsKafka.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsKafka} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsKafka.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kafka_pb.KafkaConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kafka_pb.KafkaWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.KafkaConn _conn = 1;
 * @return {?proto.protos.args.KafkaConn}
 */
proto.protos.WriteOptsKafka.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KafkaConn} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaConn, 1));
};


/**
 * @param {?proto.protos.args.KafkaConn|undefined} value
 * @return {!proto.protos.WriteOptsKafka} returns this
*/
proto.protos.WriteOptsKafka.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsKafka} returns this
 */
proto.protos.WriteOptsKafka.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsKafka.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.KafkaWriteOpts args = 2;
 * @return {?proto.protos.args.KafkaWriteOpts}
 */
proto.protos.WriteOptsKafka.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KafkaWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.KafkaWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsKafka} returns this
*/
proto.protos.WriteOptsKafka.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsKafka} returns this
 */
proto.protos.WriteOptsKafka.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsKafka.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsActiveMQ.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsActiveMQ.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsActiveMQ} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsActiveMQ.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_activemq_pb.ActiveMQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_activemq_pb.ActiveMQWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsActiveMQ}
 */
proto.protos.WriteOptsActiveMQ.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsActiveMQ;
  return proto.protos.WriteOptsActiveMQ.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsActiveMQ} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsActiveMQ}
 */
proto.protos.WriteOptsActiveMQ.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_activemq_pb.ActiveMQConn;
      reader.readMessage(value,args_activemq_pb.ActiveMQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_activemq_pb.ActiveMQWriteOpts;
      reader.readMessage(value,args_activemq_pb.ActiveMQWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsActiveMQ.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsActiveMQ.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsActiveMQ} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsActiveMQ.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_activemq_pb.ActiveMQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_activemq_pb.ActiveMQWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.ActiveMQConn _conn = 1;
 * @return {?proto.protos.args.ActiveMQConn}
 */
proto.protos.WriteOptsActiveMQ.prototype.getConn = function() {
  return /** @type{?proto.protos.args.ActiveMQConn} */ (
    jspb.Message.getWrapperField(this, args_activemq_pb.ActiveMQConn, 1));
};


/**
 * @param {?proto.protos.args.ActiveMQConn|undefined} value
 * @return {!proto.protos.WriteOptsActiveMQ} returns this
*/
proto.protos.WriteOptsActiveMQ.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsActiveMQ} returns this
 */
proto.protos.WriteOptsActiveMQ.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsActiveMQ.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.ActiveMQWriteOpts args = 2;
 * @return {?proto.protos.args.ActiveMQWriteOpts}
 */
proto.protos.WriteOptsActiveMQ.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.ActiveMQWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_activemq_pb.ActiveMQWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.ActiveMQWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsActiveMQ} returns this
*/
proto.protos.WriteOptsActiveMQ.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsActiveMQ} returns this
 */
proto.protos.WriteOptsActiveMQ.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsActiveMQ.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsAWSSQS.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsAWSSQS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsAWSSQS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsAWSSQS.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_aws$sqs_pb.AWSSQSConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_aws$sqs_pb.AWSSQSWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsAWSSQS}
 */
proto.protos.WriteOptsAWSSQS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsAWSSQS;
  return proto.protos.WriteOptsAWSSQS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsAWSSQS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsAWSSQS}
 */
proto.protos.WriteOptsAWSSQS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_aws$sqs_pb.AWSSQSConn;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_aws$sqs_pb.AWSSQSWriteOpts;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsAWSSQS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsAWSSQS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsAWSSQS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsAWSSQS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_aws$sqs_pb.AWSSQSConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_aws$sqs_pb.AWSSQSWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.AWSSQSConn _conn = 1;
 * @return {?proto.protos.args.AWSSQSConn}
 */
proto.protos.WriteOptsAWSSQS.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AWSSQSConn} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSConn, 1));
};


/**
 * @param {?proto.protos.args.AWSSQSConn|undefined} value
 * @return {!proto.protos.WriteOptsAWSSQS} returns this
*/
proto.protos.WriteOptsAWSSQS.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsAWSSQS} returns this
 */
proto.protos.WriteOptsAWSSQS.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsAWSSQS.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.AWSSQSWriteOpts args = 2;
 * @return {?proto.protos.args.AWSSQSWriteOpts}
 */
proto.protos.WriteOptsAWSSQS.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AWSSQSWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.AWSSQSWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsAWSSQS} returns this
*/
proto.protos.WriteOptsAWSSQS.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsAWSSQS} returns this
 */
proto.protos.WriteOptsAWSSQS.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsAWSSQS.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsAWSSNS.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsAWSSNS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsAWSSNS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsAWSSNS.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_aws$sns_pb.AWSSNSConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_aws$sns_pb.AWSSNSWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsAWSSNS}
 */
proto.protos.WriteOptsAWSSNS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsAWSSNS;
  return proto.protos.WriteOptsAWSSNS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsAWSSNS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsAWSSNS}
 */
proto.protos.WriteOptsAWSSNS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_aws$sns_pb.AWSSNSConn;
      reader.readMessage(value,args_aws$sns_pb.AWSSNSConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_aws$sns_pb.AWSSNSWriteOpts;
      reader.readMessage(value,args_aws$sns_pb.AWSSNSWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsAWSSNS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsAWSSNS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsAWSSNS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsAWSSNS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_aws$sns_pb.AWSSNSConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_aws$sns_pb.AWSSNSWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.AWSSNSConn _conn = 1;
 * @return {?proto.protos.args.AWSSNSConn}
 */
proto.protos.WriteOptsAWSSNS.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AWSSNSConn} */ (
    jspb.Message.getWrapperField(this, args_aws$sns_pb.AWSSNSConn, 1));
};


/**
 * @param {?proto.protos.args.AWSSNSConn|undefined} value
 * @return {!proto.protos.WriteOptsAWSSNS} returns this
*/
proto.protos.WriteOptsAWSSNS.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsAWSSNS} returns this
 */
proto.protos.WriteOptsAWSSNS.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsAWSSNS.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.AWSSNSWriteOpts args = 2;
 * @return {?proto.protos.args.AWSSNSWriteOpts}
 */
proto.protos.WriteOptsAWSSNS.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AWSSNSWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_aws$sns_pb.AWSSNSWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.AWSSNSWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsAWSSNS} returns this
*/
proto.protos.WriteOptsAWSSNS.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsAWSSNS} returns this
 */
proto.protos.WriteOptsAWSSNS.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsAWSSNS.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsNats.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsNats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsNats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsNats.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nats_pb.NatsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nats_pb.NatsWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsNats}
 */
proto.protos.WriteOptsNats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsNats;
  return proto.protos.WriteOptsNats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsNats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsNats}
 */
proto.protos.WriteOptsNats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nats_pb.NatsConn;
      reader.readMessage(value,args_nats_pb.NatsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nats_pb.NatsWriteOpts;
      reader.readMessage(value,args_nats_pb.NatsWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsNats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsNats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsNats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsNats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nats_pb.NatsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nats_pb.NatsWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.NatsConn _conn = 1;
 * @return {?proto.protos.args.NatsConn}
 */
proto.protos.WriteOptsNats.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NatsConn} */ (
    jspb.Message.getWrapperField(this, args_nats_pb.NatsConn, 1));
};


/**
 * @param {?proto.protos.args.NatsConn|undefined} value
 * @return {!proto.protos.WriteOptsNats} returns this
*/
proto.protos.WriteOptsNats.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsNats} returns this
 */
proto.protos.WriteOptsNats.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsNats.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.NatsWriteOpts args = 2;
 * @return {?proto.protos.args.NatsWriteOpts}
 */
proto.protos.WriteOptsNats.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NatsWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_nats_pb.NatsWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.NatsWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsNats} returns this
*/
proto.protos.WriteOptsNats.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsNats} returns this
 */
proto.protos.WriteOptsNats.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsNats.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsNatsStreaming.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsNatsStreaming.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsNatsStreaming} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsNatsStreaming.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nats$streaming_pb.NatsStreamingConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nats$streaming_pb.NatsStreamingWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsNatsStreaming}
 */
proto.protos.WriteOptsNatsStreaming.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsNatsStreaming;
  return proto.protos.WriteOptsNatsStreaming.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsNatsStreaming} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsNatsStreaming}
 */
proto.protos.WriteOptsNatsStreaming.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nats$streaming_pb.NatsStreamingConn;
      reader.readMessage(value,args_nats$streaming_pb.NatsStreamingConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nats$streaming_pb.NatsStreamingWriteOpts;
      reader.readMessage(value,args_nats$streaming_pb.NatsStreamingWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsNatsStreaming.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsNatsStreaming.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsNatsStreaming} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsNatsStreaming.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nats$streaming_pb.NatsStreamingConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nats$streaming_pb.NatsStreamingWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.NatsStreamingConn _conn = 1;
 * @return {?proto.protos.args.NatsStreamingConn}
 */
proto.protos.WriteOptsNatsStreaming.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NatsStreamingConn} */ (
    jspb.Message.getWrapperField(this, args_nats$streaming_pb.NatsStreamingConn, 1));
};


/**
 * @param {?proto.protos.args.NatsStreamingConn|undefined} value
 * @return {!proto.protos.WriteOptsNatsStreaming} returns this
*/
proto.protos.WriteOptsNatsStreaming.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsNatsStreaming} returns this
 */
proto.protos.WriteOptsNatsStreaming.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsNatsStreaming.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.NatsStreamingWriteOpts args = 2;
 * @return {?proto.protos.args.NatsStreamingWriteOpts}
 */
proto.protos.WriteOptsNatsStreaming.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NatsStreamingWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_nats$streaming_pb.NatsStreamingWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.NatsStreamingWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsNatsStreaming} returns this
*/
proto.protos.WriteOptsNatsStreaming.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsNatsStreaming} returns this
 */
proto.protos.WriteOptsNatsStreaming.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsNatsStreaming.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsNSQ.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsNSQ.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsNSQ} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsNSQ.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nsq_pb.NSQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nsq_pb.NSQWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsNSQ}
 */
proto.protos.WriteOptsNSQ.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsNSQ;
  return proto.protos.WriteOptsNSQ.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsNSQ} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsNSQ}
 */
proto.protos.WriteOptsNSQ.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nsq_pb.NSQConn;
      reader.readMessage(value,args_nsq_pb.NSQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nsq_pb.NSQWriteOpts;
      reader.readMessage(value,args_nsq_pb.NSQWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsNSQ.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsNSQ.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsNSQ} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsNSQ.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nsq_pb.NSQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nsq_pb.NSQWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.NSQConn _conn = 1;
 * @return {?proto.protos.args.NSQConn}
 */
proto.protos.WriteOptsNSQ.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NSQConn} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQConn, 1));
};


/**
 * @param {?proto.protos.args.NSQConn|undefined} value
 * @return {!proto.protos.WriteOptsNSQ} returns this
*/
proto.protos.WriteOptsNSQ.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsNSQ} returns this
 */
proto.protos.WriteOptsNSQ.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsNSQ.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.NSQWriteOpts args = 2;
 * @return {?proto.protos.args.NSQWriteOpts}
 */
proto.protos.WriteOptsNSQ.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NSQWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.NSQWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsNSQ} returns this
*/
proto.protos.WriteOptsNSQ.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsNSQ} returns this
 */
proto.protos.WriteOptsNSQ.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsNSQ.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsPulsar.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsPulsar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsPulsar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsPulsar.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_pulsar_pb.PulsarConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_pulsar_pb.PulsarWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsPulsar}
 */
proto.protos.WriteOptsPulsar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsPulsar;
  return proto.protos.WriteOptsPulsar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsPulsar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsPulsar}
 */
proto.protos.WriteOptsPulsar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_pulsar_pb.PulsarConn;
      reader.readMessage(value,args_pulsar_pb.PulsarConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_pulsar_pb.PulsarWriteOpts;
      reader.readMessage(value,args_pulsar_pb.PulsarWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsPulsar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsPulsar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsPulsar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsPulsar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_pulsar_pb.PulsarConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_pulsar_pb.PulsarWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.PulsarConn _conn = 1;
 * @return {?proto.protos.args.PulsarConn}
 */
proto.protos.WriteOptsPulsar.prototype.getConn = function() {
  return /** @type{?proto.protos.args.PulsarConn} */ (
    jspb.Message.getWrapperField(this, args_pulsar_pb.PulsarConn, 1));
};


/**
 * @param {?proto.protos.args.PulsarConn|undefined} value
 * @return {!proto.protos.WriteOptsPulsar} returns this
*/
proto.protos.WriteOptsPulsar.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsPulsar} returns this
 */
proto.protos.WriteOptsPulsar.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsPulsar.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.PulsarWriteOpts args = 2;
 * @return {?proto.protos.args.PulsarWriteOpts}
 */
proto.protos.WriteOptsPulsar.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.PulsarWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_pulsar_pb.PulsarWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.PulsarWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsPulsar} returns this
*/
proto.protos.WriteOptsPulsar.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsPulsar} returns this
 */
proto.protos.WriteOptsPulsar.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsPulsar.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsRabbit.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsRabbit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsRabbit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsRabbit.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit_pb.RabbitConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit_pb.RabbitWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsRabbit}
 */
proto.protos.WriteOptsRabbit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsRabbit;
  return proto.protos.WriteOptsRabbit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsRabbit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsRabbit}
 */
proto.protos.WriteOptsRabbit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit_pb.RabbitConn;
      reader.readMessage(value,args_rabbit_pb.RabbitConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit_pb.RabbitWriteOpts;
      reader.readMessage(value,args_rabbit_pb.RabbitWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsRabbit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsRabbit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsRabbit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsRabbit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit_pb.RabbitConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit_pb.RabbitWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.RabbitConn _conn = 1;
 * @return {?proto.protos.args.RabbitConn}
 */
proto.protos.WriteOptsRabbit.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitConn|undefined} value
 * @return {!proto.protos.WriteOptsRabbit} returns this
*/
proto.protos.WriteOptsRabbit.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsRabbit} returns this
 */
proto.protos.WriteOptsRabbit.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsRabbit.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.RabbitWriteOpts args = 2;
 * @return {?proto.protos.args.RabbitWriteOpts}
 */
proto.protos.WriteOptsRabbit.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.RabbitWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsRabbit} returns this
*/
proto.protos.WriteOptsRabbit.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsRabbit} returns this
 */
proto.protos.WriteOptsRabbit.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsRabbit.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsRabbitStreams.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsRabbitStreams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsRabbitStreams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsRabbitStreams.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit$streams_pb.RabbitStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit$streams_pb.RabbitStreamsWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsRabbitStreams}
 */
proto.protos.WriteOptsRabbitStreams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsRabbitStreams;
  return proto.protos.WriteOptsRabbitStreams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsRabbitStreams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsRabbitStreams}
 */
proto.protos.WriteOptsRabbitStreams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit$streams_pb.RabbitStreamsConn;
      reader.readMessage(value,args_rabbit$streams_pb.RabbitStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit$streams_pb.RabbitStreamsWriteOpts;
      reader.readMessage(value,args_rabbit$streams_pb.RabbitStreamsWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsRabbitStreams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsRabbitStreams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsRabbitStreams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsRabbitStreams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit$streams_pb.RabbitStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit$streams_pb.RabbitStreamsWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.RabbitStreamsConn _conn = 1;
 * @return {?proto.protos.args.RabbitStreamsConn}
 */
proto.protos.WriteOptsRabbitStreams.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit$streams_pb.RabbitStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitStreamsConn|undefined} value
 * @return {!proto.protos.WriteOptsRabbitStreams} returns this
*/
proto.protos.WriteOptsRabbitStreams.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsRabbitStreams} returns this
 */
proto.protos.WriteOptsRabbitStreams.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsRabbitStreams.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.RabbitStreamsWriteOpts args = 2;
 * @return {?proto.protos.args.RabbitStreamsWriteOpts}
 */
proto.protos.WriteOptsRabbitStreams.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitStreamsWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_rabbit$streams_pb.RabbitStreamsWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.RabbitStreamsWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsRabbitStreams} returns this
*/
proto.protos.WriteOptsRabbitStreams.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsRabbitStreams} returns this
 */
proto.protos.WriteOptsRabbitStreams.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsRabbitStreams.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsRedisPubSub.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsRedisPubSub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsRedisPubSub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsRedisPubSub.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$pubsub_pb.RedisPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$pubsub_pb.RedisPubSubWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsRedisPubSub}
 */
proto.protos.WriteOptsRedisPubSub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsRedisPubSub;
  return proto.protos.WriteOptsRedisPubSub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsRedisPubSub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsRedisPubSub}
 */
proto.protos.WriteOptsRedisPubSub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$pubsub_pb.RedisPubSubConn;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$pubsub_pb.RedisPubSubWriteOpts;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsRedisPubSub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsRedisPubSub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsRedisPubSub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsRedisPubSub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$pubsub_pb.RedisPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$pubsub_pb.RedisPubSubWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.RedisPubSubConn _conn = 1;
 * @return {?proto.protos.args.RedisPubSubConn}
 */
proto.protos.WriteOptsRedisPubSub.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.RedisPubSubConn|undefined} value
 * @return {!proto.protos.WriteOptsRedisPubSub} returns this
*/
proto.protos.WriteOptsRedisPubSub.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsRedisPubSub} returns this
 */
proto.protos.WriteOptsRedisPubSub.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsRedisPubSub.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.RedisPubSubWriteOpts args = 2;
 * @return {?proto.protos.args.RedisPubSubWriteOpts}
 */
proto.protos.WriteOptsRedisPubSub.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisPubSubWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.RedisPubSubWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsRedisPubSub} returns this
*/
proto.protos.WriteOptsRedisPubSub.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsRedisPubSub} returns this
 */
proto.protos.WriteOptsRedisPubSub.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsRedisPubSub.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsRedisStreams.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsRedisStreams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsRedisStreams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsRedisStreams.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$streams_pb.RedisStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$streams_pb.RedisStreamsWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsRedisStreams}
 */
proto.protos.WriteOptsRedisStreams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsRedisStreams;
  return proto.protos.WriteOptsRedisStreams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsRedisStreams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsRedisStreams}
 */
proto.protos.WriteOptsRedisStreams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$streams_pb.RedisStreamsConn;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$streams_pb.RedisStreamsWriteOpts;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsRedisStreams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsRedisStreams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsRedisStreams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsRedisStreams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$streams_pb.RedisStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$streams_pb.RedisStreamsWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.RedisStreamsConn _conn = 1;
 * @return {?proto.protos.args.RedisStreamsConn}
 */
proto.protos.WriteOptsRedisStreams.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RedisStreamsConn|undefined} value
 * @return {!proto.protos.WriteOptsRedisStreams} returns this
*/
proto.protos.WriteOptsRedisStreams.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsRedisStreams} returns this
 */
proto.protos.WriteOptsRedisStreams.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsRedisStreams.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.RedisStreamsWriteOpts args = 2;
 * @return {?proto.protos.args.RedisStreamsWriteOpts}
 */
proto.protos.WriteOptsRedisStreams.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisStreamsWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.RedisStreamsWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsRedisStreams} returns this
*/
proto.protos.WriteOptsRedisStreams.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsRedisStreams} returns this
 */
proto.protos.WriteOptsRedisStreams.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsRedisStreams.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsAzureEventHub.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsAzureEventHub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsAzureEventHub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsAzureEventHub.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$event$hub_pb.AzureEventHubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$event$hub_pb.AzureEventHubWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsAzureEventHub}
 */
proto.protos.WriteOptsAzureEventHub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsAzureEventHub;
  return proto.protos.WriteOptsAzureEventHub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsAzureEventHub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsAzureEventHub}
 */
proto.protos.WriteOptsAzureEventHub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$event$hub_pb.AzureEventHubConn;
      reader.readMessage(value,args_azure$event$hub_pb.AzureEventHubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$event$hub_pb.AzureEventHubWriteOpts;
      reader.readMessage(value,args_azure$event$hub_pb.AzureEventHubWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsAzureEventHub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsAzureEventHub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsAzureEventHub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsAzureEventHub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$event$hub_pb.AzureEventHubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$event$hub_pb.AzureEventHubWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.AzureEventHubConn _conn = 1;
 * @return {?proto.protos.args.AzureEventHubConn}
 */
proto.protos.WriteOptsAzureEventHub.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureEventHubConn} */ (
    jspb.Message.getWrapperField(this, args_azure$event$hub_pb.AzureEventHubConn, 1));
};


/**
 * @param {?proto.protos.args.AzureEventHubConn|undefined} value
 * @return {!proto.protos.WriteOptsAzureEventHub} returns this
*/
proto.protos.WriteOptsAzureEventHub.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsAzureEventHub} returns this
 */
proto.protos.WriteOptsAzureEventHub.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsAzureEventHub.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.AzureEventHubWriteOpts args = 2;
 * @return {?proto.protos.args.AzureEventHubWriteOpts}
 */
proto.protos.WriteOptsAzureEventHub.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureEventHubWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_azure$event$hub_pb.AzureEventHubWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.AzureEventHubWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsAzureEventHub} returns this
*/
proto.protos.WriteOptsAzureEventHub.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsAzureEventHub} returns this
 */
proto.protos.WriteOptsAzureEventHub.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsAzureEventHub.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsAzureServiceBus.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsAzureServiceBus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsAzureServiceBus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsAzureServiceBus.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$service$bus_pb.AzureServiceBusConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$service$bus_pb.AzureServiceBusWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsAzureServiceBus}
 */
proto.protos.WriteOptsAzureServiceBus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsAzureServiceBus;
  return proto.protos.WriteOptsAzureServiceBus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsAzureServiceBus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsAzureServiceBus}
 */
proto.protos.WriteOptsAzureServiceBus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$service$bus_pb.AzureServiceBusConn;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$service$bus_pb.AzureServiceBusWriteOpts;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsAzureServiceBus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsAzureServiceBus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsAzureServiceBus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsAzureServiceBus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$service$bus_pb.AzureServiceBusConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$service$bus_pb.AzureServiceBusWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.AzureServiceBusConn _conn = 1;
 * @return {?proto.protos.args.AzureServiceBusConn}
 */
proto.protos.WriteOptsAzureServiceBus.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureServiceBusConn} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusConn, 1));
};


/**
 * @param {?proto.protos.args.AzureServiceBusConn|undefined} value
 * @return {!proto.protos.WriteOptsAzureServiceBus} returns this
*/
proto.protos.WriteOptsAzureServiceBus.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsAzureServiceBus} returns this
 */
proto.protos.WriteOptsAzureServiceBus.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsAzureServiceBus.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.AzureServiceBusWriteOpts args = 2;
 * @return {?proto.protos.args.AzureServiceBusWriteOpts}
 */
proto.protos.WriteOptsAzureServiceBus.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureServiceBusWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.AzureServiceBusWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsAzureServiceBus} returns this
*/
proto.protos.WriteOptsAzureServiceBus.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsAzureServiceBus} returns this
 */
proto.protos.WriteOptsAzureServiceBus.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsAzureServiceBus.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsMQTT.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsMQTT.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsMQTT} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsMQTT.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_mqtt_pb.MQTTConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_mqtt_pb.MQTTWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsMQTT}
 */
proto.protos.WriteOptsMQTT.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsMQTT;
  return proto.protos.WriteOptsMQTT.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsMQTT} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsMQTT}
 */
proto.protos.WriteOptsMQTT.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_mqtt_pb.MQTTConn;
      reader.readMessage(value,args_mqtt_pb.MQTTConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_mqtt_pb.MQTTWriteOpts;
      reader.readMessage(value,args_mqtt_pb.MQTTWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsMQTT.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsMQTT.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsMQTT} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsMQTT.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_mqtt_pb.MQTTConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_mqtt_pb.MQTTWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.MQTTConn _conn = 1;
 * @return {?proto.protos.args.MQTTConn}
 */
proto.protos.WriteOptsMQTT.prototype.getConn = function() {
  return /** @type{?proto.protos.args.MQTTConn} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTConn, 1));
};


/**
 * @param {?proto.protos.args.MQTTConn|undefined} value
 * @return {!proto.protos.WriteOptsMQTT} returns this
*/
proto.protos.WriteOptsMQTT.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsMQTT} returns this
 */
proto.protos.WriteOptsMQTT.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsMQTT.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.MQTTWriteOpts args = 2;
 * @return {?proto.protos.args.MQTTWriteOpts}
 */
proto.protos.WriteOptsMQTT.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.MQTTWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.MQTTWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsMQTT} returns this
*/
proto.protos.WriteOptsMQTT.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsMQTT} returns this
 */
proto.protos.WriteOptsMQTT.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsMQTT.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsGCPPubSub.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsGCPPubSub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsGCPPubSub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsGCPPubSub.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_gcp$pubsub_pb.GCPPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_gcp$pubsub_pb.GCPPubSubWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsGCPPubSub}
 */
proto.protos.WriteOptsGCPPubSub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsGCPPubSub;
  return proto.protos.WriteOptsGCPPubSub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsGCPPubSub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsGCPPubSub}
 */
proto.protos.WriteOptsGCPPubSub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_gcp$pubsub_pb.GCPPubSubConn;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_gcp$pubsub_pb.GCPPubSubWriteOpts;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsGCPPubSub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsGCPPubSub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsGCPPubSub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsGCPPubSub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_gcp$pubsub_pb.GCPPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_gcp$pubsub_pb.GCPPubSubWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.GCPPubSubConn _conn = 1;
 * @return {?proto.protos.args.GCPPubSubConn}
 */
proto.protos.WriteOptsGCPPubSub.prototype.getConn = function() {
  return /** @type{?proto.protos.args.GCPPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.GCPPubSubConn|undefined} value
 * @return {!proto.protos.WriteOptsGCPPubSub} returns this
*/
proto.protos.WriteOptsGCPPubSub.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsGCPPubSub} returns this
 */
proto.protos.WriteOptsGCPPubSub.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsGCPPubSub.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.GCPPubSubWriteOpts args = 2;
 * @return {?proto.protos.args.GCPPubSubWriteOpts}
 */
proto.protos.WriteOptsGCPPubSub.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.GCPPubSubWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.GCPPubSubWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsGCPPubSub} returns this
*/
proto.protos.WriteOptsGCPPubSub.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsGCPPubSub} returns this
 */
proto.protos.WriteOptsGCPPubSub.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsGCPPubSub.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.WriteOptsKubeMQQueue.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.WriteOptsKubeMQQueue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.WriteOptsKubeMQQueue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsKubeMQQueue.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kubemq$queue_pb.KubeMQQueueConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kubemq$queue_pb.KubeMQQueueWriteOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.WriteOptsKubeMQQueue}
 */
proto.protos.WriteOptsKubeMQQueue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.WriteOptsKubeMQQueue;
  return proto.protos.WriteOptsKubeMQQueue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.WriteOptsKubeMQQueue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.WriteOptsKubeMQQueue}
 */
proto.protos.WriteOptsKubeMQQueue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kubemq$queue_pb.KubeMQQueueConn;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kubemq$queue_pb.KubeMQQueueWriteOpts;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueWriteOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.WriteOptsKubeMQQueue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.WriteOptsKubeMQQueue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.WriteOptsKubeMQQueue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.WriteOptsKubeMQQueue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kubemq$queue_pb.KubeMQQueueConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kubemq$queue_pb.KubeMQQueueWriteOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.KubeMQQueueConn _conn = 1;
 * @return {?proto.protos.args.KubeMQQueueConn}
 */
proto.protos.WriteOptsKubeMQQueue.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KubeMQQueueConn} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueConn, 1));
};


/**
 * @param {?proto.protos.args.KubeMQQueueConn|undefined} value
 * @return {!proto.protos.WriteOptsKubeMQQueue} returns this
*/
proto.protos.WriteOptsKubeMQQueue.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsKubeMQQueue} returns this
 */
proto.protos.WriteOptsKubeMQQueue.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsKubeMQQueue.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.KubeMQQueueWriteOpts args = 2;
 * @return {?proto.protos.args.KubeMQQueueWriteOpts}
 */
proto.protos.WriteOptsKubeMQQueue.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KubeMQQueueWriteOpts} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueWriteOpts, 2));
};


/**
 * @param {?proto.protos.args.KubeMQQueueWriteOpts|undefined} value
 * @return {!proto.protos.WriteOptsKubeMQQueue} returns this
*/
proto.protos.WriteOptsKubeMQQueue.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.WriteOptsKubeMQQueue} returns this
 */
proto.protos.WriteOptsKubeMQQueue.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.WriteOptsKubeMQQueue.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.protos);
