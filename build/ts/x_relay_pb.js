// source: x_relay.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var args_azure$service$bus_pb = require('./args/azure-service-bus_pb.js');
goog.object.extend(proto, args_azure$service$bus_pb);
var args_aws$sqs_pb = require('./args/aws-sqs_pb.js');
goog.object.extend(proto, args_aws$sqs_pb);
var args_gcp$pubsub_pb = require('./args/gcp-pubsub_pb.js');
goog.object.extend(proto, args_gcp$pubsub_pb);
var args_kafka_pb = require('./args/kafka_pb.js');
goog.object.extend(proto, args_kafka_pb);
var args_kubemq$queue_pb = require('./args/kubemq-queue_pb.js');
goog.object.extend(proto, args_kubemq$queue_pb);
var args_mongo_pb = require('./args/mongo_pb.js');
goog.object.extend(proto, args_mongo_pb);
var args_mqtt_pb = require('./args/mqtt_pb.js');
goog.object.extend(proto, args_mqtt_pb);
var args_nsq_pb = require('./args/nsq_pb.js');
goog.object.extend(proto, args_nsq_pb);
var args_postgres_pb = require('./args/postgres_pb.js');
goog.object.extend(proto, args_postgres_pb);
var args_rabbit_pb = require('./args/rabbit_pb.js');
goog.object.extend(proto, args_rabbit_pb);
var args_redis$pubsub_pb = require('./args/redis-pubsub_pb.js');
goog.object.extend(proto, args_redis$pubsub_pb);
var args_redis$streams_pb = require('./args/redis-streams_pb.js');
goog.object.extend(proto, args_redis$streams_pb);
goog.exportSymbol('proto.protos.RelayOpts', null, global);
goog.exportSymbol('proto.protos.RelayOptsAWSSQS', null, global);
goog.exportSymbol('proto.protos.RelayOptsAzureServiceBus', null, global);
goog.exportSymbol('proto.protos.RelayOptsGCPPubSub', null, global);
goog.exportSymbol('proto.protos.RelayOptsKafka', null, global);
goog.exportSymbol('proto.protos.RelayOptsKubeMQQueue', null, global);
goog.exportSymbol('proto.protos.RelayOptsMQTT', null, global);
goog.exportSymbol('proto.protos.RelayOptsMongo', null, global);
goog.exportSymbol('proto.protos.RelayOptsNSQ', null, global);
goog.exportSymbol('proto.protos.RelayOptsPostgres', null, global);
goog.exportSymbol('proto.protos.RelayOptsRabbit', null, global);
goog.exportSymbol('proto.protos.RelayOptsRedisPubSub', null, global);
goog.exportSymbol('proto.protos.RelayOptsRedisStreams', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOpts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOpts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOpts.displayName = 'proto.protos.RelayOpts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsKafka = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsKafka, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsKafka.displayName = 'proto.protos.RelayOptsKafka';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsAWSSQS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsAWSSQS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsAWSSQS.displayName = 'proto.protos.RelayOptsAWSSQS';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsMongo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsMongo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsMongo.displayName = 'proto.protos.RelayOptsMongo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsNSQ = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsNSQ, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsNSQ.displayName = 'proto.protos.RelayOptsNSQ';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsPostgres = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsPostgres, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsPostgres.displayName = 'proto.protos.RelayOptsPostgres';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsRabbit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsRabbit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsRabbit.displayName = 'proto.protos.RelayOptsRabbit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsRedisPubSub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsRedisPubSub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsRedisPubSub.displayName = 'proto.protos.RelayOptsRedisPubSub';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsRedisStreams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsRedisStreams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsRedisStreams.displayName = 'proto.protos.RelayOptsRedisStreams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsAzureServiceBus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsAzureServiceBus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsAzureServiceBus.displayName = 'proto.protos.RelayOptsAzureServiceBus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsMQTT = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsMQTT, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsMQTT.displayName = 'proto.protos.RelayOptsMQTT';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsGCPPubSub = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsGCPPubSub, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsGCPPubSub.displayName = 'proto.protos.RelayOptsGCPPubSub';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.RelayOptsKubeMQQueue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.RelayOptsKubeMQQueue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.RelayOptsKubeMQQueue.displayName = 'proto.protos.RelayOptsKubeMQQueue';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOpts.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOpts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOpts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOpts.toObject = function(includeInstance, msg) {
  var f, obj = {
    kafka: (f = msg.getKafka()) && proto.protos.RelayOptsKafka.toObject(includeInstance, f),
    awssqs: (f = msg.getAwssqs()) && proto.protos.RelayOptsAWSSQS.toObject(includeInstance, f),
    mongo: (f = msg.getMongo()) && proto.protos.RelayOptsMongo.toObject(includeInstance, f),
    nsq: (f = msg.getNsq()) && proto.protos.RelayOptsNSQ.toObject(includeInstance, f),
    rabbit: (f = msg.getRabbit()) && proto.protos.RelayOptsRabbit.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && proto.protos.RelayOptsMQTT.toObject(includeInstance, f),
    azureServiceBus: (f = msg.getAzureServiceBus()) && proto.protos.RelayOptsAzureServiceBus.toObject(includeInstance, f),
    gcpPubsub: (f = msg.getGcpPubsub()) && proto.protos.RelayOptsGCPPubSub.toObject(includeInstance, f),
    kubemqQueue: (f = msg.getKubemqQueue()) && proto.protos.RelayOptsKubeMQQueue.toObject(includeInstance, f),
    redisPubsub: (f = msg.getRedisPubsub()) && proto.protos.RelayOptsRedisPubSub.toObject(includeInstance, f),
    redisStreams: (f = msg.getRedisStreams()) && proto.protos.RelayOptsRedisStreams.toObject(includeInstance, f),
    postgres: (f = msg.getPostgres()) && proto.protos.RelayOptsPostgres.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOpts}
 */
proto.protos.RelayOpts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOpts;
  return proto.protos.RelayOpts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOpts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOpts}
 */
proto.protos.RelayOpts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new proto.protos.RelayOptsKafka;
      reader.readMessage(value,proto.protos.RelayOptsKafka.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 101:
      var value = new proto.protos.RelayOptsAWSSQS;
      reader.readMessage(value,proto.protos.RelayOptsAWSSQS.deserializeBinaryFromReader);
      msg.setAwssqs(value);
      break;
    case 102:
      var value = new proto.protos.RelayOptsMongo;
      reader.readMessage(value,proto.protos.RelayOptsMongo.deserializeBinaryFromReader);
      msg.setMongo(value);
      break;
    case 103:
      var value = new proto.protos.RelayOptsNSQ;
      reader.readMessage(value,proto.protos.RelayOptsNSQ.deserializeBinaryFromReader);
      msg.setNsq(value);
      break;
    case 104:
      var value = new proto.protos.RelayOptsRabbit;
      reader.readMessage(value,proto.protos.RelayOptsRabbit.deserializeBinaryFromReader);
      msg.setRabbit(value);
      break;
    case 105:
      var value = new proto.protos.RelayOptsMQTT;
      reader.readMessage(value,proto.protos.RelayOptsMQTT.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    case 106:
      var value = new proto.protos.RelayOptsAzureServiceBus;
      reader.readMessage(value,proto.protos.RelayOptsAzureServiceBus.deserializeBinaryFromReader);
      msg.setAzureServiceBus(value);
      break;
    case 107:
      var value = new proto.protos.RelayOptsGCPPubSub;
      reader.readMessage(value,proto.protos.RelayOptsGCPPubSub.deserializeBinaryFromReader);
      msg.setGcpPubsub(value);
      break;
    case 108:
      var value = new proto.protos.RelayOptsKubeMQQueue;
      reader.readMessage(value,proto.protos.RelayOptsKubeMQQueue.deserializeBinaryFromReader);
      msg.setKubemqQueue(value);
      break;
    case 109:
      var value = new proto.protos.RelayOptsRedisPubSub;
      reader.readMessage(value,proto.protos.RelayOptsRedisPubSub.deserializeBinaryFromReader);
      msg.setRedisPubsub(value);
      break;
    case 111:
      var value = new proto.protos.RelayOptsRedisStreams;
      reader.readMessage(value,proto.protos.RelayOptsRedisStreams.deserializeBinaryFromReader);
      msg.setRedisStreams(value);
      break;
    case 112:
      var value = new proto.protos.RelayOptsPostgres;
      reader.readMessage(value,proto.protos.RelayOptsPostgres.deserializeBinaryFromReader);
      msg.setPostgres(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOpts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOpts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOpts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOpts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.protos.RelayOptsKafka.serializeBinaryToWriter
    );
  }
  f = message.getAwssqs();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.protos.RelayOptsAWSSQS.serializeBinaryToWriter
    );
  }
  f = message.getMongo();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.protos.RelayOptsMongo.serializeBinaryToWriter
    );
  }
  f = message.getNsq();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.protos.RelayOptsNSQ.serializeBinaryToWriter
    );
  }
  f = message.getRabbit();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.protos.RelayOptsRabbit.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      proto.protos.RelayOptsMQTT.serializeBinaryToWriter
    );
  }
  f = message.getAzureServiceBus();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      proto.protos.RelayOptsAzureServiceBus.serializeBinaryToWriter
    );
  }
  f = message.getGcpPubsub();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      proto.protos.RelayOptsGCPPubSub.serializeBinaryToWriter
    );
  }
  f = message.getKubemqQueue();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      proto.protos.RelayOptsKubeMQQueue.serializeBinaryToWriter
    );
  }
  f = message.getRedisPubsub();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      proto.protos.RelayOptsRedisPubSub.serializeBinaryToWriter
    );
  }
  f = message.getRedisStreams();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      proto.protos.RelayOptsRedisStreams.serializeBinaryToWriter
    );
  }
  f = message.getPostgres();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto.protos.RelayOptsPostgres.serializeBinaryToWriter
    );
  }
};


/**
 * optional RelayOptsKafka kafka = 100;
 * @return {?proto.protos.RelayOptsKafka}
 */
proto.protos.RelayOpts.prototype.getKafka = function() {
  return /** @type{?proto.protos.RelayOptsKafka} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsKafka, 100));
};


/**
 * @param {?proto.protos.RelayOptsKafka|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setKafka = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional RelayOptsAWSSQS awssqs = 101;
 * @return {?proto.protos.RelayOptsAWSSQS}
 */
proto.protos.RelayOpts.prototype.getAwssqs = function() {
  return /** @type{?proto.protos.RelayOptsAWSSQS} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsAWSSQS, 101));
};


/**
 * @param {?proto.protos.RelayOptsAWSSQS|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setAwssqs = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearAwssqs = function() {
  return this.setAwssqs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasAwssqs = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional RelayOptsMongo mongo = 102;
 * @return {?proto.protos.RelayOptsMongo}
 */
proto.protos.RelayOpts.prototype.getMongo = function() {
  return /** @type{?proto.protos.RelayOptsMongo} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsMongo, 102));
};


/**
 * @param {?proto.protos.RelayOptsMongo|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setMongo = function(value) {
  return jspb.Message.setWrapperField(this, 102, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearMongo = function() {
  return this.setMongo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasMongo = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional RelayOptsNSQ nsq = 103;
 * @return {?proto.protos.RelayOptsNSQ}
 */
proto.protos.RelayOpts.prototype.getNsq = function() {
  return /** @type{?proto.protos.RelayOptsNSQ} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsNSQ, 103));
};


/**
 * @param {?proto.protos.RelayOptsNSQ|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setNsq = function(value) {
  return jspb.Message.setWrapperField(this, 103, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearNsq = function() {
  return this.setNsq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasNsq = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional RelayOptsRabbit rabbit = 104;
 * @return {?proto.protos.RelayOptsRabbit}
 */
proto.protos.RelayOpts.prototype.getRabbit = function() {
  return /** @type{?proto.protos.RelayOptsRabbit} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsRabbit, 104));
};


/**
 * @param {?proto.protos.RelayOptsRabbit|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setRabbit = function(value) {
  return jspb.Message.setWrapperField(this, 104, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearRabbit = function() {
  return this.setRabbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasRabbit = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional RelayOptsMQTT mqtt = 105;
 * @return {?proto.protos.RelayOptsMQTT}
 */
proto.protos.RelayOpts.prototype.getMqtt = function() {
  return /** @type{?proto.protos.RelayOptsMQTT} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsMQTT, 105));
};


/**
 * @param {?proto.protos.RelayOptsMQTT|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setMqtt = function(value) {
  return jspb.Message.setWrapperField(this, 105, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearMqtt = function() {
  return this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional RelayOptsAzureServiceBus azure_service_bus = 106;
 * @return {?proto.protos.RelayOptsAzureServiceBus}
 */
proto.protos.RelayOpts.prototype.getAzureServiceBus = function() {
  return /** @type{?proto.protos.RelayOptsAzureServiceBus} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsAzureServiceBus, 106));
};


/**
 * @param {?proto.protos.RelayOptsAzureServiceBus|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setAzureServiceBus = function(value) {
  return jspb.Message.setWrapperField(this, 106, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearAzureServiceBus = function() {
  return this.setAzureServiceBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasAzureServiceBus = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional RelayOptsGCPPubSub gcp_pubsub = 107;
 * @return {?proto.protos.RelayOptsGCPPubSub}
 */
proto.protos.RelayOpts.prototype.getGcpPubsub = function() {
  return /** @type{?proto.protos.RelayOptsGCPPubSub} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsGCPPubSub, 107));
};


/**
 * @param {?proto.protos.RelayOptsGCPPubSub|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setGcpPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 107, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearGcpPubsub = function() {
  return this.setGcpPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasGcpPubsub = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional RelayOptsKubeMQQueue kubemq_queue = 108;
 * @return {?proto.protos.RelayOptsKubeMQQueue}
 */
proto.protos.RelayOpts.prototype.getKubemqQueue = function() {
  return /** @type{?proto.protos.RelayOptsKubeMQQueue} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsKubeMQQueue, 108));
};


/**
 * @param {?proto.protos.RelayOptsKubeMQQueue|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setKubemqQueue = function(value) {
  return jspb.Message.setWrapperField(this, 108, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearKubemqQueue = function() {
  return this.setKubemqQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasKubemqQueue = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional RelayOptsRedisPubSub redis_pubsub = 109;
 * @return {?proto.protos.RelayOptsRedisPubSub}
 */
proto.protos.RelayOpts.prototype.getRedisPubsub = function() {
  return /** @type{?proto.protos.RelayOptsRedisPubSub} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsRedisPubSub, 109));
};


/**
 * @param {?proto.protos.RelayOptsRedisPubSub|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setRedisPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 109, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearRedisPubsub = function() {
  return this.setRedisPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasRedisPubsub = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional RelayOptsRedisStreams redis_streams = 111;
 * @return {?proto.protos.RelayOptsRedisStreams}
 */
proto.protos.RelayOpts.prototype.getRedisStreams = function() {
  return /** @type{?proto.protos.RelayOptsRedisStreams} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsRedisStreams, 111));
};


/**
 * @param {?proto.protos.RelayOptsRedisStreams|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setRedisStreams = function(value) {
  return jspb.Message.setWrapperField(this, 111, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearRedisStreams = function() {
  return this.setRedisStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasRedisStreams = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional RelayOptsPostgres postgres = 112;
 * @return {?proto.protos.RelayOptsPostgres}
 */
proto.protos.RelayOpts.prototype.getPostgres = function() {
  return /** @type{?proto.protos.RelayOptsPostgres} */ (
    jspb.Message.getWrapperField(this, proto.protos.RelayOptsPostgres, 112));
};


/**
 * @param {?proto.protos.RelayOptsPostgres|undefined} value
 * @return {!proto.protos.RelayOpts} returns this
*/
proto.protos.RelayOpts.prototype.setPostgres = function(value) {
  return jspb.Message.setWrapperField(this, 112, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOpts} returns this
 */
proto.protos.RelayOpts.prototype.clearPostgres = function() {
  return this.setPostgres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOpts.prototype.hasPostgres = function() {
  return jspb.Message.getField(this, 112) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsKafka.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsKafka.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsKafka} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsKafka.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kafka_pb.KafkaConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kafka_pb.KafkaRelayOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsKafka}
 */
proto.protos.RelayOptsKafka.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsKafka;
  return proto.protos.RelayOptsKafka.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsKafka} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsKafka}
 */
proto.protos.RelayOptsKafka.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kafka_pb.KafkaConn;
      reader.readMessage(value,args_kafka_pb.KafkaConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kafka_pb.KafkaRelayOpts;
      reader.readMessage(value,args_kafka_pb.KafkaRelayOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsKafka.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsKafka.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsKafka} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsKafka.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kafka_pb.KafkaConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kafka_pb.KafkaRelayOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.KafkaConn conn = 1;
 * @return {?proto.protos.args.KafkaConn}
 */
proto.protos.RelayOptsKafka.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KafkaConn} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaConn, 1));
};


/**
 * @param {?proto.protos.args.KafkaConn|undefined} value
 * @return {!proto.protos.RelayOptsKafka} returns this
*/
proto.protos.RelayOptsKafka.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsKafka} returns this
 */
proto.protos.RelayOptsKafka.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsKafka.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.KafkaRelayOpts args = 2;
 * @return {?proto.protos.args.KafkaRelayOpts}
 */
proto.protos.RelayOptsKafka.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KafkaRelayOpts} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaRelayOpts, 2));
};


/**
 * @param {?proto.protos.args.KafkaRelayOpts|undefined} value
 * @return {!proto.protos.RelayOptsKafka} returns this
*/
proto.protos.RelayOptsKafka.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsKafka} returns this
 */
proto.protos.RelayOptsKafka.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsKafka.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsAWSSQS.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsAWSSQS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsAWSSQS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsAWSSQS.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_aws$sqs_pb.AWSSQSConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_aws$sqs_pb.AWSSQSRelayOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsAWSSQS}
 */
proto.protos.RelayOptsAWSSQS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsAWSSQS;
  return proto.protos.RelayOptsAWSSQS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsAWSSQS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsAWSSQS}
 */
proto.protos.RelayOptsAWSSQS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_aws$sqs_pb.AWSSQSConn;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_aws$sqs_pb.AWSSQSRelayOpts;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSRelayOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsAWSSQS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsAWSSQS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsAWSSQS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsAWSSQS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_aws$sqs_pb.AWSSQSConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_aws$sqs_pb.AWSSQSRelayOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.AWSSQSConn conn = 1;
 * @return {?proto.protos.args.AWSSQSConn}
 */
proto.protos.RelayOptsAWSSQS.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AWSSQSConn} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSConn, 1));
};


/**
 * @param {?proto.protos.args.AWSSQSConn|undefined} value
 * @return {!proto.protos.RelayOptsAWSSQS} returns this
*/
proto.protos.RelayOptsAWSSQS.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsAWSSQS} returns this
 */
proto.protos.RelayOptsAWSSQS.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsAWSSQS.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.AWSSQSRelayOpts args = 2;
 * @return {?proto.protos.args.AWSSQSRelayOpts}
 */
proto.protos.RelayOptsAWSSQS.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AWSSQSRelayOpts} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSRelayOpts, 2));
};


/**
 * @param {?proto.protos.args.AWSSQSRelayOpts|undefined} value
 * @return {!proto.protos.RelayOptsAWSSQS} returns this
*/
proto.protos.RelayOptsAWSSQS.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsAWSSQS} returns this
 */
proto.protos.RelayOptsAWSSQS.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsAWSSQS.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsMongo.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsMongo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsMongo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsMongo.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_mongo_pb.MongoConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_mongo_pb.MongoReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsMongo}
 */
proto.protos.RelayOptsMongo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsMongo;
  return proto.protos.RelayOptsMongo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsMongo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsMongo}
 */
proto.protos.RelayOptsMongo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_mongo_pb.MongoConn;
      reader.readMessage(value,args_mongo_pb.MongoConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_mongo_pb.MongoReadOpts;
      reader.readMessage(value,args_mongo_pb.MongoReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsMongo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsMongo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsMongo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsMongo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_mongo_pb.MongoConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_mongo_pb.MongoReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.MongoConn conn = 1;
 * @return {?proto.protos.args.MongoConn}
 */
proto.protos.RelayOptsMongo.prototype.getConn = function() {
  return /** @type{?proto.protos.args.MongoConn} */ (
    jspb.Message.getWrapperField(this, args_mongo_pb.MongoConn, 1));
};


/**
 * @param {?proto.protos.args.MongoConn|undefined} value
 * @return {!proto.protos.RelayOptsMongo} returns this
*/
proto.protos.RelayOptsMongo.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsMongo} returns this
 */
proto.protos.RelayOptsMongo.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsMongo.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.MongoReadOpts args = 2;
 * @return {?proto.protos.args.MongoReadOpts}
 */
proto.protos.RelayOptsMongo.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.MongoReadOpts} */ (
    jspb.Message.getWrapperField(this, args_mongo_pb.MongoReadOpts, 2));
};


/**
 * @param {?proto.protos.args.MongoReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsMongo} returns this
*/
proto.protos.RelayOptsMongo.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsMongo} returns this
 */
proto.protos.RelayOptsMongo.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsMongo.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsNSQ.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsNSQ.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsNSQ} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsNSQ.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nsq_pb.NSQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nsq_pb.NSQReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsNSQ}
 */
proto.protos.RelayOptsNSQ.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsNSQ;
  return proto.protos.RelayOptsNSQ.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsNSQ} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsNSQ}
 */
proto.protos.RelayOptsNSQ.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nsq_pb.NSQConn;
      reader.readMessage(value,args_nsq_pb.NSQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nsq_pb.NSQReadOpts;
      reader.readMessage(value,args_nsq_pb.NSQReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsNSQ.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsNSQ.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsNSQ} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsNSQ.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nsq_pb.NSQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nsq_pb.NSQReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.NSQConn conn = 1;
 * @return {?proto.protos.args.NSQConn}
 */
proto.protos.RelayOptsNSQ.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NSQConn} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQConn, 1));
};


/**
 * @param {?proto.protos.args.NSQConn|undefined} value
 * @return {!proto.protos.RelayOptsNSQ} returns this
*/
proto.protos.RelayOptsNSQ.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsNSQ} returns this
 */
proto.protos.RelayOptsNSQ.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsNSQ.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.NSQReadOpts args = 2;
 * @return {?proto.protos.args.NSQReadOpts}
 */
proto.protos.RelayOptsNSQ.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NSQReadOpts} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQReadOpts, 2));
};


/**
 * @param {?proto.protos.args.NSQReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsNSQ} returns this
*/
proto.protos.RelayOptsNSQ.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsNSQ} returns this
 */
proto.protos.RelayOptsNSQ.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsNSQ.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsPostgres.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsPostgres.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsPostgres} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsPostgres.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_postgres_pb.PostgresConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_postgres_pb.PostgresReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsPostgres}
 */
proto.protos.RelayOptsPostgres.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsPostgres;
  return proto.protos.RelayOptsPostgres.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsPostgres} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsPostgres}
 */
proto.protos.RelayOptsPostgres.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_postgres_pb.PostgresConn;
      reader.readMessage(value,args_postgres_pb.PostgresConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_postgres_pb.PostgresReadOpts;
      reader.readMessage(value,args_postgres_pb.PostgresReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsPostgres.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsPostgres.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsPostgres} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsPostgres.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_postgres_pb.PostgresConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_postgres_pb.PostgresReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.PostgresConn conn = 1;
 * @return {?proto.protos.args.PostgresConn}
 */
proto.protos.RelayOptsPostgres.prototype.getConn = function() {
  return /** @type{?proto.protos.args.PostgresConn} */ (
    jspb.Message.getWrapperField(this, args_postgres_pb.PostgresConn, 1));
};


/**
 * @param {?proto.protos.args.PostgresConn|undefined} value
 * @return {!proto.protos.RelayOptsPostgres} returns this
*/
proto.protos.RelayOptsPostgres.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsPostgres} returns this
 */
proto.protos.RelayOptsPostgres.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsPostgres.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.PostgresReadOpts args = 2;
 * @return {?proto.protos.args.PostgresReadOpts}
 */
proto.protos.RelayOptsPostgres.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.PostgresReadOpts} */ (
    jspb.Message.getWrapperField(this, args_postgres_pb.PostgresReadOpts, 2));
};


/**
 * @param {?proto.protos.args.PostgresReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsPostgres} returns this
*/
proto.protos.RelayOptsPostgres.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsPostgres} returns this
 */
proto.protos.RelayOptsPostgres.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsPostgres.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsRabbit.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsRabbit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsRabbit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsRabbit.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit_pb.RabbitConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit_pb.RabbitReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsRabbit}
 */
proto.protos.RelayOptsRabbit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsRabbit;
  return proto.protos.RelayOptsRabbit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsRabbit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsRabbit}
 */
proto.protos.RelayOptsRabbit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit_pb.RabbitConn;
      reader.readMessage(value,args_rabbit_pb.RabbitConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit_pb.RabbitReadOpts;
      reader.readMessage(value,args_rabbit_pb.RabbitReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsRabbit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsRabbit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsRabbit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsRabbit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit_pb.RabbitConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit_pb.RabbitReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.RabbitConn conn = 1;
 * @return {?proto.protos.args.RabbitConn}
 */
proto.protos.RelayOptsRabbit.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitConn|undefined} value
 * @return {!proto.protos.RelayOptsRabbit} returns this
*/
proto.protos.RelayOptsRabbit.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsRabbit} returns this
 */
proto.protos.RelayOptsRabbit.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsRabbit.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.RabbitReadOpts args = 2;
 * @return {?proto.protos.args.RabbitReadOpts}
 */
proto.protos.RelayOptsRabbit.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitReadOpts} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitReadOpts, 2));
};


/**
 * @param {?proto.protos.args.RabbitReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsRabbit} returns this
*/
proto.protos.RelayOptsRabbit.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsRabbit} returns this
 */
proto.protos.RelayOptsRabbit.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsRabbit.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsRedisPubSub.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsRedisPubSub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsRedisPubSub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsRedisPubSub.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$pubsub_pb.RedisPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$pubsub_pb.RedisPubSubReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsRedisPubSub}
 */
proto.protos.RelayOptsRedisPubSub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsRedisPubSub;
  return proto.protos.RelayOptsRedisPubSub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsRedisPubSub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsRedisPubSub}
 */
proto.protos.RelayOptsRedisPubSub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$pubsub_pb.RedisPubSubConn;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$pubsub_pb.RedisPubSubReadOpts;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsRedisPubSub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsRedisPubSub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsRedisPubSub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsRedisPubSub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$pubsub_pb.RedisPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$pubsub_pb.RedisPubSubReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.RedisPubSubConn conn = 1;
 * @return {?proto.protos.args.RedisPubSubConn}
 */
proto.protos.RelayOptsRedisPubSub.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.RedisPubSubConn|undefined} value
 * @return {!proto.protos.RelayOptsRedisPubSub} returns this
*/
proto.protos.RelayOptsRedisPubSub.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsRedisPubSub} returns this
 */
proto.protos.RelayOptsRedisPubSub.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsRedisPubSub.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.RedisPubSubReadOpts args = 2;
 * @return {?proto.protos.args.RedisPubSubReadOpts}
 */
proto.protos.RelayOptsRedisPubSub.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisPubSubReadOpts} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubReadOpts, 2));
};


/**
 * @param {?proto.protos.args.RedisPubSubReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsRedisPubSub} returns this
*/
proto.protos.RelayOptsRedisPubSub.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsRedisPubSub} returns this
 */
proto.protos.RelayOptsRedisPubSub.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsRedisPubSub.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsRedisStreams.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsRedisStreams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsRedisStreams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsRedisStreams.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$streams_pb.RedisStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$streams_pb.RedisStreamsReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsRedisStreams}
 */
proto.protos.RelayOptsRedisStreams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsRedisStreams;
  return proto.protos.RelayOptsRedisStreams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsRedisStreams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsRedisStreams}
 */
proto.protos.RelayOptsRedisStreams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$streams_pb.RedisStreamsConn;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$streams_pb.RedisStreamsReadOpts;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsRedisStreams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsRedisStreams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsRedisStreams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsRedisStreams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$streams_pb.RedisStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$streams_pb.RedisStreamsReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.RedisStreamsConn conn = 1;
 * @return {?proto.protos.args.RedisStreamsConn}
 */
proto.protos.RelayOptsRedisStreams.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RedisStreamsConn|undefined} value
 * @return {!proto.protos.RelayOptsRedisStreams} returns this
*/
proto.protos.RelayOptsRedisStreams.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsRedisStreams} returns this
 */
proto.protos.RelayOptsRedisStreams.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsRedisStreams.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.RedisStreamsReadOpts args = 2;
 * @return {?proto.protos.args.RedisStreamsReadOpts}
 */
proto.protos.RelayOptsRedisStreams.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisStreamsReadOpts} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsReadOpts, 2));
};


/**
 * @param {?proto.protos.args.RedisStreamsReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsRedisStreams} returns this
*/
proto.protos.RelayOptsRedisStreams.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsRedisStreams} returns this
 */
proto.protos.RelayOptsRedisStreams.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsRedisStreams.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsAzureServiceBus.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsAzureServiceBus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsAzureServiceBus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsAzureServiceBus.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$service$bus_pb.AzureServiceBusConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$service$bus_pb.AzureServiceBusReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsAzureServiceBus}
 */
proto.protos.RelayOptsAzureServiceBus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsAzureServiceBus;
  return proto.protos.RelayOptsAzureServiceBus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsAzureServiceBus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsAzureServiceBus}
 */
proto.protos.RelayOptsAzureServiceBus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$service$bus_pb.AzureServiceBusConn;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$service$bus_pb.AzureServiceBusReadOpts;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsAzureServiceBus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsAzureServiceBus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsAzureServiceBus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsAzureServiceBus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$service$bus_pb.AzureServiceBusConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$service$bus_pb.AzureServiceBusReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.AzureServiceBusConn conn = 1;
 * @return {?proto.protos.args.AzureServiceBusConn}
 */
proto.protos.RelayOptsAzureServiceBus.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureServiceBusConn} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusConn, 1));
};


/**
 * @param {?proto.protos.args.AzureServiceBusConn|undefined} value
 * @return {!proto.protos.RelayOptsAzureServiceBus} returns this
*/
proto.protos.RelayOptsAzureServiceBus.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsAzureServiceBus} returns this
 */
proto.protos.RelayOptsAzureServiceBus.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsAzureServiceBus.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.AzureServiceBusReadOpts args = 2;
 * @return {?proto.protos.args.AzureServiceBusReadOpts}
 */
proto.protos.RelayOptsAzureServiceBus.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureServiceBusReadOpts} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusReadOpts, 2));
};


/**
 * @param {?proto.protos.args.AzureServiceBusReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsAzureServiceBus} returns this
*/
proto.protos.RelayOptsAzureServiceBus.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsAzureServiceBus} returns this
 */
proto.protos.RelayOptsAzureServiceBus.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsAzureServiceBus.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsMQTT.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsMQTT.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsMQTT} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsMQTT.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_mqtt_pb.MQTTConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_mqtt_pb.MQTTReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsMQTT}
 */
proto.protos.RelayOptsMQTT.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsMQTT;
  return proto.protos.RelayOptsMQTT.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsMQTT} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsMQTT}
 */
proto.protos.RelayOptsMQTT.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_mqtt_pb.MQTTConn;
      reader.readMessage(value,args_mqtt_pb.MQTTConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_mqtt_pb.MQTTReadOpts;
      reader.readMessage(value,args_mqtt_pb.MQTTReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsMQTT.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsMQTT.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsMQTT} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsMQTT.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_mqtt_pb.MQTTConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_mqtt_pb.MQTTReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.MQTTConn conn = 1;
 * @return {?proto.protos.args.MQTTConn}
 */
proto.protos.RelayOptsMQTT.prototype.getConn = function() {
  return /** @type{?proto.protos.args.MQTTConn} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTConn, 1));
};


/**
 * @param {?proto.protos.args.MQTTConn|undefined} value
 * @return {!proto.protos.RelayOptsMQTT} returns this
*/
proto.protos.RelayOptsMQTT.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsMQTT} returns this
 */
proto.protos.RelayOptsMQTT.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsMQTT.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.MQTTReadOpts args = 2;
 * @return {?proto.protos.args.MQTTReadOpts}
 */
proto.protos.RelayOptsMQTT.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.MQTTReadOpts} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTReadOpts, 2));
};


/**
 * @param {?proto.protos.args.MQTTReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsMQTT} returns this
*/
proto.protos.RelayOptsMQTT.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsMQTT} returns this
 */
proto.protos.RelayOptsMQTT.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsMQTT.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsGCPPubSub.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsGCPPubSub.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsGCPPubSub} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsGCPPubSub.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_gcp$pubsub_pb.GCPPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_gcp$pubsub_pb.GCPPubSubReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsGCPPubSub}
 */
proto.protos.RelayOptsGCPPubSub.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsGCPPubSub;
  return proto.protos.RelayOptsGCPPubSub.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsGCPPubSub} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsGCPPubSub}
 */
proto.protos.RelayOptsGCPPubSub.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_gcp$pubsub_pb.GCPPubSubConn;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_gcp$pubsub_pb.GCPPubSubReadOpts;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsGCPPubSub.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsGCPPubSub.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsGCPPubSub} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsGCPPubSub.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_gcp$pubsub_pb.GCPPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_gcp$pubsub_pb.GCPPubSubReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.GCPPubSubConn conn = 1;
 * @return {?proto.protos.args.GCPPubSubConn}
 */
proto.protos.RelayOptsGCPPubSub.prototype.getConn = function() {
  return /** @type{?proto.protos.args.GCPPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.GCPPubSubConn|undefined} value
 * @return {!proto.protos.RelayOptsGCPPubSub} returns this
*/
proto.protos.RelayOptsGCPPubSub.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsGCPPubSub} returns this
 */
proto.protos.RelayOptsGCPPubSub.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsGCPPubSub.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.GCPPubSubReadOpts args = 2;
 * @return {?proto.protos.args.GCPPubSubReadOpts}
 */
proto.protos.RelayOptsGCPPubSub.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.GCPPubSubReadOpts} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubReadOpts, 2));
};


/**
 * @param {?proto.protos.args.GCPPubSubReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsGCPPubSub} returns this
*/
proto.protos.RelayOptsGCPPubSub.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsGCPPubSub} returns this
 */
proto.protos.RelayOptsGCPPubSub.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsGCPPubSub.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.RelayOptsKubeMQQueue.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.RelayOptsKubeMQQueue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.RelayOptsKubeMQQueue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsKubeMQQueue.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kubemq$queue_pb.KubeMQQueueConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kubemq$queue_pb.KubeMQQueueReadOpts.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.RelayOptsKubeMQQueue}
 */
proto.protos.RelayOptsKubeMQQueue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.RelayOptsKubeMQQueue;
  return proto.protos.RelayOptsKubeMQQueue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.RelayOptsKubeMQQueue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.RelayOptsKubeMQQueue}
 */
proto.protos.RelayOptsKubeMQQueue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kubemq$queue_pb.KubeMQQueueConn;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kubemq$queue_pb.KubeMQQueueReadOpts;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueReadOpts.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.RelayOptsKubeMQQueue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.RelayOptsKubeMQQueue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.RelayOptsKubeMQQueue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.RelayOptsKubeMQQueue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kubemq$queue_pb.KubeMQQueueConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kubemq$queue_pb.KubeMQQueueReadOpts.serializeBinaryToWriter
    );
  }
};


/**
 * optional args.KubeMQQueueConn conn = 1;
 * @return {?proto.protos.args.KubeMQQueueConn}
 */
proto.protos.RelayOptsKubeMQQueue.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KubeMQQueueConn} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueConn, 1));
};


/**
 * @param {?proto.protos.args.KubeMQQueueConn|undefined} value
 * @return {!proto.protos.RelayOptsKubeMQQueue} returns this
*/
proto.protos.RelayOptsKubeMQQueue.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsKubeMQQueue} returns this
 */
proto.protos.RelayOptsKubeMQQueue.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsKubeMQQueue.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional args.KubeMQQueueReadOpts args = 2;
 * @return {?proto.protos.args.KubeMQQueueReadOpts}
 */
proto.protos.RelayOptsKubeMQQueue.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KubeMQQueueReadOpts} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueReadOpts, 2));
};


/**
 * @param {?proto.protos.args.KubeMQQueueReadOpts|undefined} value
 * @return {!proto.protos.RelayOptsKubeMQQueue} returns this
*/
proto.protos.RelayOptsKubeMQQueue.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.RelayOptsKubeMQQueue} returns this
 */
proto.protos.RelayOptsKubeMQQueue.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.RelayOptsKubeMQQueue.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.protos);
