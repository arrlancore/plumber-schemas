// source: opts/ps_opts_connection.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var args_ps_args_kafka_pb = require('../args/ps_args_kafka_pb.js');
goog.object.extend(proto, args_ps_args_kafka_pb);
var args_ps_args_activemq_pb = require('../args/ps_args_activemq_pb.js');
goog.object.extend(proto, args_ps_args_activemq_pb);
var args_ps_args_aws_sns_pb = require('../args/ps_args_aws_sns_pb.js');
goog.object.extend(proto, args_ps_args_aws_sns_pb);
var args_ps_args_aws_sqs_pb = require('../args/ps_args_aws_sqs_pb.js');
goog.object.extend(proto, args_ps_args_aws_sqs_pb);
var args_ps_args_mongo_pb = require('../args/ps_args_mongo_pb.js');
goog.object.extend(proto, args_ps_args_mongo_pb);
var args_ps_args_nats_pb = require('../args/ps_args_nats_pb.js');
goog.object.extend(proto, args_ps_args_nats_pb);
var args_ps_args_nats_streaming_pb = require('../args/ps_args_nats_streaming_pb.js');
goog.object.extend(proto, args_ps_args_nats_streaming_pb);
var args_ps_args_nsq_pb = require('../args/ps_args_nsq_pb.js');
goog.object.extend(proto, args_ps_args_nsq_pb);
var args_ps_args_mqtt_pb = require('../args/ps_args_mqtt_pb.js');
goog.object.extend(proto, args_ps_args_mqtt_pb);
var args_ps_args_gcp_pubsub_pb = require('../args/ps_args_gcp_pubsub_pb.js');
goog.object.extend(proto, args_ps_args_gcp_pubsub_pb);
var args_ps_args_kubemq_queue_pb = require('../args/ps_args_kubemq_queue_pb.js');
goog.object.extend(proto, args_ps_args_kubemq_queue_pb);
var args_ps_args_postgres_pb = require('../args/ps_args_postgres_pb.js');
goog.object.extend(proto, args_ps_args_postgres_pb);
var args_ps_args_pulsar_pb = require('../args/ps_args_pulsar_pb.js');
goog.object.extend(proto, args_ps_args_pulsar_pb);
var args_ps_args_rabbit_pb = require('../args/ps_args_rabbit_pb.js');
goog.object.extend(proto, args_ps_args_rabbit_pb);
var args_ps_args_rabbit_streams_pb = require('../args/ps_args_rabbit_streams_pb.js');
goog.object.extend(proto, args_ps_args_rabbit_streams_pb);
var args_ps_args_redis_pubsub_pb = require('../args/ps_args_redis_pubsub_pb.js');
goog.object.extend(proto, args_ps_args_redis_pubsub_pb);
var args_ps_args_redis_streams_pb = require('../args/ps_args_redis_streams_pb.js');
goog.object.extend(proto, args_ps_args_redis_streams_pb);
var args_ps_args_azure_service_bus_pb = require('../args/ps_args_azure_service_bus_pb.js');
goog.object.extend(proto, args_ps_args_azure_service_bus_pb);
var args_ps_args_azure_event_hub_pb = require('../args/ps_args_azure_event_hub_pb.js');
goog.object.extend(proto, args_ps_args_azure_event_hub_pb);
goog.exportSymbol('proto.protos.opts.ConnectionOptions', null, global);
goog.exportSymbol('proto.protos.opts.ConnectionOptions.ConnCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ConnectionOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, proto.protos.opts.ConnectionOptions.oneofGroups_);
};
goog.inherits(proto.protos.opts.ConnectionOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ConnectionOptions.displayName = 'proto.protos.opts.ConnectionOptions';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.protos.opts.ConnectionOptions.oneofGroups_ = [[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118]];

/**
 * @enum {number}
 */
proto.protos.opts.ConnectionOptions.ConnCase = {
  CONN_NOT_SET: 0,
  KAFKA: 100,
  ACTIVE_MQ: 101,
  AWSSQS: 102,
  AWSSNS: 103,
  MONGO: 104,
  NATS: 105,
  NATS_STREAMING: 106,
  NSQ: 107,
  POSTGRES: 108,
  PULSAR: 109,
  RABBIT: 110,
  RABBIT_STREAMS: 111,
  REDIS_PUBSUB: 112,
  REDIS_STREAMS: 113,
  AZURE_EVENT_HUB: 114,
  AZURE_SERVICE_BUS: 115,
  MQTT: 116,
  KUBEMQ_QUEUE: 117,
  GCP_PUBSUB: 118
};

/**
 * @return {proto.protos.opts.ConnectionOptions.ConnCase}
 */
proto.protos.opts.ConnectionOptions.prototype.getConnCase = function() {
  return /** @type {proto.protos.opts.ConnectionOptions.ConnCase} */(jspb.Message.computeOneofCase(this, proto.protos.opts.ConnectionOptions.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ConnectionOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ConnectionOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ConnectionOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ConnectionOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    notes: jspb.Message.getFieldWithDefault(msg, 2, ""),
    kafka: (f = msg.getKafka()) && args_ps_args_kafka_pb.KafkaConn.toObject(includeInstance, f),
    activeMq: (f = msg.getActiveMq()) && args_ps_args_activemq_pb.ActiveMQConn.toObject(includeInstance, f),
    awssqs: (f = msg.getAwssqs()) && args_ps_args_aws_sqs_pb.AWSSQSConn.toObject(includeInstance, f),
    awssns: (f = msg.getAwssns()) && args_ps_args_aws_sns_pb.AWSSNSConn.toObject(includeInstance, f),
    mongo: (f = msg.getMongo()) && args_ps_args_mongo_pb.MongoConn.toObject(includeInstance, f),
    nats: (f = msg.getNats()) && args_ps_args_nats_pb.NatsConn.toObject(includeInstance, f),
    natsStreaming: (f = msg.getNatsStreaming()) && args_ps_args_nats_streaming_pb.NatsStreamingConn.toObject(includeInstance, f),
    nsq: (f = msg.getNsq()) && args_ps_args_nsq_pb.NSQConn.toObject(includeInstance, f),
    postgres: (f = msg.getPostgres()) && args_ps_args_postgres_pb.PostgresConn.toObject(includeInstance, f),
    pulsar: (f = msg.getPulsar()) && args_ps_args_pulsar_pb.PulsarConn.toObject(includeInstance, f),
    rabbit: (f = msg.getRabbit()) && args_ps_args_rabbit_pb.RabbitConn.toObject(includeInstance, f),
    rabbitStreams: (f = msg.getRabbitStreams()) && args_ps_args_rabbit_streams_pb.RabbitStreamsConn.toObject(includeInstance, f),
    redisPubsub: (f = msg.getRedisPubsub()) && args_ps_args_redis_pubsub_pb.RedisPubSubConn.toObject(includeInstance, f),
    redisStreams: (f = msg.getRedisStreams()) && args_ps_args_redis_streams_pb.RedisStreamsConn.toObject(includeInstance, f),
    azureEventHub: (f = msg.getAzureEventHub()) && args_ps_args_azure_event_hub_pb.AzureEventHubConn.toObject(includeInstance, f),
    azureServiceBus: (f = msg.getAzureServiceBus()) && args_ps_args_azure_service_bus_pb.AzureServiceBusConn.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && args_ps_args_mqtt_pb.MQTTConn.toObject(includeInstance, f),
    kubemqQueue: (f = msg.getKubemqQueue()) && args_ps_args_kubemq_queue_pb.KubeMQQueueConn.toObject(includeInstance, f),
    gcpPubsub: (f = msg.getGcpPubsub()) && args_ps_args_gcp_pubsub_pb.GCPPubSubConn.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 1000, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ConnectionOptions}
 */
proto.protos.opts.ConnectionOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ConnectionOptions;
  return proto.protos.opts.ConnectionOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ConnectionOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ConnectionOptions}
 */
proto.protos.opts.ConnectionOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNotes(value);
      break;
    case 100:
      var value = new args_ps_args_kafka_pb.KafkaConn;
      reader.readMessage(value,args_ps_args_kafka_pb.KafkaConn.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 101:
      var value = new args_ps_args_activemq_pb.ActiveMQConn;
      reader.readMessage(value,args_ps_args_activemq_pb.ActiveMQConn.deserializeBinaryFromReader);
      msg.setActiveMq(value);
      break;
    case 102:
      var value = new args_ps_args_aws_sqs_pb.AWSSQSConn;
      reader.readMessage(value,args_ps_args_aws_sqs_pb.AWSSQSConn.deserializeBinaryFromReader);
      msg.setAwssqs(value);
      break;
    case 103:
      var value = new args_ps_args_aws_sns_pb.AWSSNSConn;
      reader.readMessage(value,args_ps_args_aws_sns_pb.AWSSNSConn.deserializeBinaryFromReader);
      msg.setAwssns(value);
      break;
    case 104:
      var value = new args_ps_args_mongo_pb.MongoConn;
      reader.readMessage(value,args_ps_args_mongo_pb.MongoConn.deserializeBinaryFromReader);
      msg.setMongo(value);
      break;
    case 105:
      var value = new args_ps_args_nats_pb.NatsConn;
      reader.readMessage(value,args_ps_args_nats_pb.NatsConn.deserializeBinaryFromReader);
      msg.setNats(value);
      break;
    case 106:
      var value = new args_ps_args_nats_streaming_pb.NatsStreamingConn;
      reader.readMessage(value,args_ps_args_nats_streaming_pb.NatsStreamingConn.deserializeBinaryFromReader);
      msg.setNatsStreaming(value);
      break;
    case 107:
      var value = new args_ps_args_nsq_pb.NSQConn;
      reader.readMessage(value,args_ps_args_nsq_pb.NSQConn.deserializeBinaryFromReader);
      msg.setNsq(value);
      break;
    case 108:
      var value = new args_ps_args_postgres_pb.PostgresConn;
      reader.readMessage(value,args_ps_args_postgres_pb.PostgresConn.deserializeBinaryFromReader);
      msg.setPostgres(value);
      break;
    case 109:
      var value = new args_ps_args_pulsar_pb.PulsarConn;
      reader.readMessage(value,args_ps_args_pulsar_pb.PulsarConn.deserializeBinaryFromReader);
      msg.setPulsar(value);
      break;
    case 110:
      var value = new args_ps_args_rabbit_pb.RabbitConn;
      reader.readMessage(value,args_ps_args_rabbit_pb.RabbitConn.deserializeBinaryFromReader);
      msg.setRabbit(value);
      break;
    case 111:
      var value = new args_ps_args_rabbit_streams_pb.RabbitStreamsConn;
      reader.readMessage(value,args_ps_args_rabbit_streams_pb.RabbitStreamsConn.deserializeBinaryFromReader);
      msg.setRabbitStreams(value);
      break;
    case 112:
      var value = new args_ps_args_redis_pubsub_pb.RedisPubSubConn;
      reader.readMessage(value,args_ps_args_redis_pubsub_pb.RedisPubSubConn.deserializeBinaryFromReader);
      msg.setRedisPubsub(value);
      break;
    case 113:
      var value = new args_ps_args_redis_streams_pb.RedisStreamsConn;
      reader.readMessage(value,args_ps_args_redis_streams_pb.RedisStreamsConn.deserializeBinaryFromReader);
      msg.setRedisStreams(value);
      break;
    case 114:
      var value = new args_ps_args_azure_event_hub_pb.AzureEventHubConn;
      reader.readMessage(value,args_ps_args_azure_event_hub_pb.AzureEventHubConn.deserializeBinaryFromReader);
      msg.setAzureEventHub(value);
      break;
    case 115:
      var value = new args_ps_args_azure_service_bus_pb.AzureServiceBusConn;
      reader.readMessage(value,args_ps_args_azure_service_bus_pb.AzureServiceBusConn.deserializeBinaryFromReader);
      msg.setAzureServiceBus(value);
      break;
    case 116:
      var value = new args_ps_args_mqtt_pb.MQTTConn;
      reader.readMessage(value,args_ps_args_mqtt_pb.MQTTConn.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    case 117:
      var value = new args_ps_args_kubemq_queue_pb.KubeMQQueueConn;
      reader.readMessage(value,args_ps_args_kubemq_queue_pb.KubeMQQueueConn.deserializeBinaryFromReader);
      msg.setKubemqQueue(value);
      break;
    case 118:
      var value = new args_ps_args_gcp_pubsub_pb.GCPPubSubConn;
      reader.readMessage(value,args_ps_args_gcp_pubsub_pb.GCPPubSubConn.deserializeBinaryFromReader);
      msg.setGcpPubsub(value);
      break;
    case 1000:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ConnectionOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ConnectionOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ConnectionOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ConnectionOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNotes();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      args_ps_args_kafka_pb.KafkaConn.serializeBinaryToWriter
    );
  }
  f = message.getActiveMq();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      args_ps_args_activemq_pb.ActiveMQConn.serializeBinaryToWriter
    );
  }
  f = message.getAwssqs();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      args_ps_args_aws_sqs_pb.AWSSQSConn.serializeBinaryToWriter
    );
  }
  f = message.getAwssns();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      args_ps_args_aws_sns_pb.AWSSNSConn.serializeBinaryToWriter
    );
  }
  f = message.getMongo();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      args_ps_args_mongo_pb.MongoConn.serializeBinaryToWriter
    );
  }
  f = message.getNats();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      args_ps_args_nats_pb.NatsConn.serializeBinaryToWriter
    );
  }
  f = message.getNatsStreaming();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      args_ps_args_nats_streaming_pb.NatsStreamingConn.serializeBinaryToWriter
    );
  }
  f = message.getNsq();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      args_ps_args_nsq_pb.NSQConn.serializeBinaryToWriter
    );
  }
  f = message.getPostgres();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      args_ps_args_postgres_pb.PostgresConn.serializeBinaryToWriter
    );
  }
  f = message.getPulsar();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      args_ps_args_pulsar_pb.PulsarConn.serializeBinaryToWriter
    );
  }
  f = message.getRabbit();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      args_ps_args_rabbit_pb.RabbitConn.serializeBinaryToWriter
    );
  }
  f = message.getRabbitStreams();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      args_ps_args_rabbit_streams_pb.RabbitStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getRedisPubsub();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      args_ps_args_redis_pubsub_pb.RedisPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getRedisStreams();
  if (f != null) {
    writer.writeMessage(
      113,
      f,
      args_ps_args_redis_streams_pb.RedisStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getAzureEventHub();
  if (f != null) {
    writer.writeMessage(
      114,
      f,
      args_ps_args_azure_event_hub_pb.AzureEventHubConn.serializeBinaryToWriter
    );
  }
  f = message.getAzureServiceBus();
  if (f != null) {
    writer.writeMessage(
      115,
      f,
      args_ps_args_azure_service_bus_pb.AzureServiceBusConn.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      116,
      f,
      args_ps_args_mqtt_pb.MQTTConn.serializeBinaryToWriter
    );
  }
  f = message.getKubemqQueue();
  if (f != null) {
    writer.writeMessage(
      117,
      f,
      args_ps_args_kubemq_queue_pb.KubeMQQueueConn.serializeBinaryToWriter
    );
  }
  f = message.getGcpPubsub();
  if (f != null) {
    writer.writeMessage(
      118,
      f,
      args_ps_args_gcp_pubsub_pb.GCPPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1000,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.protos.opts.ConnectionOptions.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string notes = 2;
 * @return {string}
 */
proto.protos.opts.ConnectionOptions.prototype.getNotes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.setNotes = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional protos.args.KafkaConn kafka = 100;
 * @return {?proto.protos.args.KafkaConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getKafka = function() {
  return /** @type{?proto.protos.args.KafkaConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_kafka_pb.KafkaConn, 100));
};


/**
 * @param {?proto.protos.args.KafkaConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setKafka = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional protos.args.ActiveMQConn active_mq = 101;
 * @return {?proto.protos.args.ActiveMQConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getActiveMq = function() {
  return /** @type{?proto.protos.args.ActiveMQConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_activemq_pb.ActiveMQConn, 101));
};


/**
 * @param {?proto.protos.args.ActiveMQConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setActiveMq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearActiveMq = function() {
  return this.setActiveMq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasActiveMq = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional protos.args.AWSSQSConn awssqs = 102;
 * @return {?proto.protos.args.AWSSQSConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getAwssqs = function() {
  return /** @type{?proto.protos.args.AWSSQSConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_aws_sqs_pb.AWSSQSConn, 102));
};


/**
 * @param {?proto.protos.args.AWSSQSConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setAwssqs = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearAwssqs = function() {
  return this.setAwssqs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasAwssqs = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional protos.args.AWSSNSConn awssns = 103;
 * @return {?proto.protos.args.AWSSNSConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getAwssns = function() {
  return /** @type{?proto.protos.args.AWSSNSConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_aws_sns_pb.AWSSNSConn, 103));
};


/**
 * @param {?proto.protos.args.AWSSNSConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setAwssns = function(value) {
  return jspb.Message.setOneofWrapperField(this, 103, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearAwssns = function() {
  return this.setAwssns(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasAwssns = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional protos.args.MongoConn mongo = 104;
 * @return {?proto.protos.args.MongoConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getMongo = function() {
  return /** @type{?proto.protos.args.MongoConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_mongo_pb.MongoConn, 104));
};


/**
 * @param {?proto.protos.args.MongoConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setMongo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 104, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearMongo = function() {
  return this.setMongo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasMongo = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional protos.args.NatsConn nats = 105;
 * @return {?proto.protos.args.NatsConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getNats = function() {
  return /** @type{?proto.protos.args.NatsConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_nats_pb.NatsConn, 105));
};


/**
 * @param {?proto.protos.args.NatsConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setNats = function(value) {
  return jspb.Message.setOneofWrapperField(this, 105, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearNats = function() {
  return this.setNats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasNats = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional protos.args.NatsStreamingConn nats_streaming = 106;
 * @return {?proto.protos.args.NatsStreamingConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getNatsStreaming = function() {
  return /** @type{?proto.protos.args.NatsStreamingConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_nats_streaming_pb.NatsStreamingConn, 106));
};


/**
 * @param {?proto.protos.args.NatsStreamingConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setNatsStreaming = function(value) {
  return jspb.Message.setOneofWrapperField(this, 106, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearNatsStreaming = function() {
  return this.setNatsStreaming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasNatsStreaming = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional protos.args.NSQConn nsq = 107;
 * @return {?proto.protos.args.NSQConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getNsq = function() {
  return /** @type{?proto.protos.args.NSQConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_nsq_pb.NSQConn, 107));
};


/**
 * @param {?proto.protos.args.NSQConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setNsq = function(value) {
  return jspb.Message.setOneofWrapperField(this, 107, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearNsq = function() {
  return this.setNsq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasNsq = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional protos.args.PostgresConn postgres = 108;
 * @return {?proto.protos.args.PostgresConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getPostgres = function() {
  return /** @type{?proto.protos.args.PostgresConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_postgres_pb.PostgresConn, 108));
};


/**
 * @param {?proto.protos.args.PostgresConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setPostgres = function(value) {
  return jspb.Message.setOneofWrapperField(this, 108, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearPostgres = function() {
  return this.setPostgres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasPostgres = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional protos.args.PulsarConn pulsar = 109;
 * @return {?proto.protos.args.PulsarConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getPulsar = function() {
  return /** @type{?proto.protos.args.PulsarConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_pulsar_pb.PulsarConn, 109));
};


/**
 * @param {?proto.protos.args.PulsarConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setPulsar = function(value) {
  return jspb.Message.setOneofWrapperField(this, 109, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearPulsar = function() {
  return this.setPulsar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasPulsar = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional protos.args.RabbitConn rabbit = 110;
 * @return {?proto.protos.args.RabbitConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getRabbit = function() {
  return /** @type{?proto.protos.args.RabbitConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_rabbit_pb.RabbitConn, 110));
};


/**
 * @param {?proto.protos.args.RabbitConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setRabbit = function(value) {
  return jspb.Message.setOneofWrapperField(this, 110, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearRabbit = function() {
  return this.setRabbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasRabbit = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional protos.args.RabbitStreamsConn rabbit_streams = 111;
 * @return {?proto.protos.args.RabbitStreamsConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getRabbitStreams = function() {
  return /** @type{?proto.protos.args.RabbitStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_rabbit_streams_pb.RabbitStreamsConn, 111));
};


/**
 * @param {?proto.protos.args.RabbitStreamsConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setRabbitStreams = function(value) {
  return jspb.Message.setOneofWrapperField(this, 111, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearRabbitStreams = function() {
  return this.setRabbitStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasRabbitStreams = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional protos.args.RedisPubSubConn redis_pubsub = 112;
 * @return {?proto.protos.args.RedisPubSubConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getRedisPubsub = function() {
  return /** @type{?proto.protos.args.RedisPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_redis_pubsub_pb.RedisPubSubConn, 112));
};


/**
 * @param {?proto.protos.args.RedisPubSubConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setRedisPubsub = function(value) {
  return jspb.Message.setOneofWrapperField(this, 112, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearRedisPubsub = function() {
  return this.setRedisPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasRedisPubsub = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional protos.args.RedisStreamsConn redis_streams = 113;
 * @return {?proto.protos.args.RedisStreamsConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getRedisStreams = function() {
  return /** @type{?proto.protos.args.RedisStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_redis_streams_pb.RedisStreamsConn, 113));
};


/**
 * @param {?proto.protos.args.RedisStreamsConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setRedisStreams = function(value) {
  return jspb.Message.setOneofWrapperField(this, 113, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearRedisStreams = function() {
  return this.setRedisStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasRedisStreams = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional protos.args.AzureEventHubConn azure_event_hub = 114;
 * @return {?proto.protos.args.AzureEventHubConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getAzureEventHub = function() {
  return /** @type{?proto.protos.args.AzureEventHubConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_azure_event_hub_pb.AzureEventHubConn, 114));
};


/**
 * @param {?proto.protos.args.AzureEventHubConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setAzureEventHub = function(value) {
  return jspb.Message.setOneofWrapperField(this, 114, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearAzureEventHub = function() {
  return this.setAzureEventHub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasAzureEventHub = function() {
  return jspb.Message.getField(this, 114) != null;
};


/**
 * optional protos.args.AzureServiceBusConn azure_service_bus = 115;
 * @return {?proto.protos.args.AzureServiceBusConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getAzureServiceBus = function() {
  return /** @type{?proto.protos.args.AzureServiceBusConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_azure_service_bus_pb.AzureServiceBusConn, 115));
};


/**
 * @param {?proto.protos.args.AzureServiceBusConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setAzureServiceBus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 115, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearAzureServiceBus = function() {
  return this.setAzureServiceBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasAzureServiceBus = function() {
  return jspb.Message.getField(this, 115) != null;
};


/**
 * optional protos.args.MQTTConn mqtt = 116;
 * @return {?proto.protos.args.MQTTConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getMqtt = function() {
  return /** @type{?proto.protos.args.MQTTConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_mqtt_pb.MQTTConn, 116));
};


/**
 * @param {?proto.protos.args.MQTTConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setMqtt = function(value) {
  return jspb.Message.setOneofWrapperField(this, 116, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearMqtt = function() {
  return this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 116) != null;
};


/**
 * optional protos.args.KubeMQQueueConn kubemq_queue = 117;
 * @return {?proto.protos.args.KubeMQQueueConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getKubemqQueue = function() {
  return /** @type{?proto.protos.args.KubeMQQueueConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_kubemq_queue_pb.KubeMQQueueConn, 117));
};


/**
 * @param {?proto.protos.args.KubeMQQueueConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setKubemqQueue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 117, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearKubemqQueue = function() {
  return this.setKubemqQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasKubemqQueue = function() {
  return jspb.Message.getField(this, 117) != null;
};


/**
 * optional protos.args.GCPPubSubConn gcp_pubsub = 118;
 * @return {?proto.protos.args.GCPPubSubConn}
 */
proto.protos.opts.ConnectionOptions.prototype.getGcpPubsub = function() {
  return /** @type{?proto.protos.args.GCPPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_ps_args_gcp_pubsub_pb.GCPPubSubConn, 118));
};


/**
 * @param {?proto.protos.args.GCPPubSubConn|undefined} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
*/
proto.protos.opts.ConnectionOptions.prototype.setGcpPubsub = function(value) {
  return jspb.Message.setOneofWrapperField(this, 118, proto.protos.opts.ConnectionOptions.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.clearGcpPubsub = function() {
  return this.setGcpPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ConnectionOptions.prototype.hasGcpPubsub = function() {
  return jspb.Message.getField(this, 118) != null;
};


/**
 * optional string _id = 1000;
 * @return {string}
 */
proto.protos.opts.ConnectionOptions.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1000, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.ConnectionOptions} returns this
 */
proto.protos.opts.ConnectionOptions.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1000, value);
};


goog.object.extend(exports, proto.protos.opts);
