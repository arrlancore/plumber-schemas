// source: opts/relay.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var args_azure$service$bus_pb = require('../args/azure-service-bus_pb.js');
goog.object.extend(proto, args_azure$service$bus_pb);
var args_aws$sqs_pb = require('../args/aws-sqs_pb.js');
goog.object.extend(proto, args_aws$sqs_pb);
var args_gcp$pubsub_pb = require('../args/gcp-pubsub_pb.js');
goog.object.extend(proto, args_gcp$pubsub_pb);
var args_kafka_pb = require('../args/kafka_pb.js');
goog.object.extend(proto, args_kafka_pb);
var args_kubemq$queue_pb = require('../args/kubemq-queue_pb.js');
goog.object.extend(proto, args_kubemq$queue_pb);
var args_mongo_pb = require('../args/mongo_pb.js');
goog.object.extend(proto, args_mongo_pb);
var args_mqtt_pb = require('../args/mqtt_pb.js');
goog.object.extend(proto, args_mqtt_pb);
var args_nsq_pb = require('../args/nsq_pb.js');
goog.object.extend(proto, args_nsq_pb);
var args_postgres_pb = require('../args/postgres_pb.js');
goog.object.extend(proto, args_postgres_pb);
var args_rabbit_pb = require('../args/rabbit_pb.js');
goog.object.extend(proto, args_rabbit_pb);
var args_redis$pubsub_pb = require('../args/redis-pubsub_pb.js');
goog.object.extend(proto, args_redis$pubsub_pb);
var args_redis$streams_pb = require('../args/redis-streams_pb.js');
goog.object.extend(proto, args_redis$streams_pb);
goog.exportSymbol('proto.protos.opts.RelayCLIOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupAWSSQSOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupAzureServiceBusOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupGCPPubSubOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupKafkaOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupKubeMQQueueOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupMQTTOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupMongoOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupNSQOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupPostgresOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupRabbitOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupRedisPubSubOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayGroupRedisStreamsOptions', null, global);
goog.exportSymbol('proto.protos.opts.RelayOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayCLIOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayCLIOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayCLIOptions.displayName = 'proto.protos.opts.RelayCLIOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.protos.opts.RelayOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayOptions.displayName = 'proto.protos.opts.RelayOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupKafkaOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupKafkaOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupKafkaOptions.displayName = 'proto.protos.opts.RelayGroupKafkaOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupAWSSQSOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupAWSSQSOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupAWSSQSOptions.displayName = 'proto.protos.opts.RelayGroupAWSSQSOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupMongoOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupMongoOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupMongoOptions.displayName = 'proto.protos.opts.RelayGroupMongoOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupNSQOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupNSQOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupNSQOptions.displayName = 'proto.protos.opts.RelayGroupNSQOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupPostgresOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupPostgresOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupPostgresOptions.displayName = 'proto.protos.opts.RelayGroupPostgresOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupRabbitOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupRabbitOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupRabbitOptions.displayName = 'proto.protos.opts.RelayGroupRabbitOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupRedisPubSubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupRedisPubSubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupRedisPubSubOptions.displayName = 'proto.protos.opts.RelayGroupRedisPubSubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupRedisStreamsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupRedisStreamsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupRedisStreamsOptions.displayName = 'proto.protos.opts.RelayGroupRedisStreamsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupAzureServiceBusOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupAzureServiceBusOptions.displayName = 'proto.protos.opts.RelayGroupAzureServiceBusOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupMQTTOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupMQTTOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupMQTTOptions.displayName = 'proto.protos.opts.RelayGroupMQTTOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupGCPPubSubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupGCPPubSubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupGCPPubSubOptions.displayName = 'proto.protos.opts.RelayGroupGCPPubSubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.RelayGroupKubeMQQueueOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.RelayGroupKubeMQQueueOptions.displayName = 'proto.protos.opts.RelayGroupKubeMQQueueOptions';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayCLIOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayCLIOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayCLIOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayCLIOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    httpListenAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayCLIOptions}
 */
proto.protos.opts.RelayCLIOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayCLIOptions;
  return proto.protos.opts.RelayCLIOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayCLIOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayCLIOptions}
 */
proto.protos.opts.RelayCLIOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHttpListenAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayCLIOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayCLIOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayCLIOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayCLIOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHttpListenAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string http_listen_address = 1;
 * @return {string}
 */
proto.protos.opts.RelayCLIOptions.prototype.getHttpListenAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.RelayCLIOptions} returns this
 */
proto.protos.opts.RelayCLIOptions.prototype.setHttpListenAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    batchSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    batchMaxRetry: jspb.Message.getFieldWithDefault(msg, 3, 0),
    connectionId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    numWorkers: jspb.Message.getFieldWithDefault(msg, 5, 0),
    batchshGrpcAddress: jspb.Message.getFieldWithDefault(msg, 1000, ""),
    batchshGrpcDisableTls: jspb.Message.getBooleanFieldWithDefault(msg, 1001, false),
    batchshGrpcTimeoutSeconds: jspb.Message.getFieldWithDefault(msg, 1002, 0),
    relayId: jspb.Message.getFieldWithDefault(msg, 1003, ""),
    cliOptions: (f = msg.getCliOptions()) && proto.protos.opts.RelayCLIOptions.toObject(includeInstance, f),
    kafka: (f = msg.getKafka()) && proto.protos.opts.RelayGroupKafkaOptions.toObject(includeInstance, f),
    awssqs: (f = msg.getAwssqs()) && proto.protos.opts.RelayGroupAWSSQSOptions.toObject(includeInstance, f),
    mongo: (f = msg.getMongo()) && proto.protos.opts.RelayGroupMongoOptions.toObject(includeInstance, f),
    nsq: (f = msg.getNsq()) && proto.protos.opts.RelayGroupNSQOptions.toObject(includeInstance, f),
    rabbit: (f = msg.getRabbit()) && proto.protos.opts.RelayGroupRabbitOptions.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && proto.protos.opts.RelayGroupMQTTOptions.toObject(includeInstance, f),
    azureServiceBus: (f = msg.getAzureServiceBus()) && proto.protos.opts.RelayGroupAzureServiceBusOptions.toObject(includeInstance, f),
    gcpPubsub: (f = msg.getGcpPubsub()) && proto.protos.opts.RelayGroupGCPPubSubOptions.toObject(includeInstance, f),
    kubemqQueue: (f = msg.getKubemqQueue()) && proto.protos.opts.RelayGroupKubeMQQueueOptions.toObject(includeInstance, f),
    redisPubsub: (f = msg.getRedisPubsub()) && proto.protos.opts.RelayGroupRedisPubSubOptions.toObject(includeInstance, f),
    redisStreams: (f = msg.getRedisStreams()) && proto.protos.opts.RelayGroupRedisStreamsOptions.toObject(includeInstance, f),
    postgres: (f = msg.getPostgres()) && proto.protos.opts.RelayGroupPostgresOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayOptions}
 */
proto.protos.opts.RelayOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayOptions;
  return proto.protos.opts.RelayOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayOptions}
 */
proto.protos.opts.RelayOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollectionToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchMaxRetry(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumWorkers(value);
      break;
    case 1000:
      var value = /** @type {string} */ (reader.readString());
      msg.setBatchshGrpcAddress(value);
      break;
    case 1001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBatchshGrpcDisableTls(value);
      break;
    case 1002:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBatchshGrpcTimeoutSeconds(value);
      break;
    case 1003:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelayId(value);
      break;
    case 1004:
      var value = new proto.protos.opts.RelayCLIOptions;
      reader.readMessage(value,proto.protos.opts.RelayCLIOptions.deserializeBinaryFromReader);
      msg.setCliOptions(value);
      break;
    case 100:
      var value = new proto.protos.opts.RelayGroupKafkaOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupKafkaOptions.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 101:
      var value = new proto.protos.opts.RelayGroupAWSSQSOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupAWSSQSOptions.deserializeBinaryFromReader);
      msg.setAwssqs(value);
      break;
    case 102:
      var value = new proto.protos.opts.RelayGroupMongoOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupMongoOptions.deserializeBinaryFromReader);
      msg.setMongo(value);
      break;
    case 103:
      var value = new proto.protos.opts.RelayGroupNSQOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupNSQOptions.deserializeBinaryFromReader);
      msg.setNsq(value);
      break;
    case 104:
      var value = new proto.protos.opts.RelayGroupRabbitOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupRabbitOptions.deserializeBinaryFromReader);
      msg.setRabbit(value);
      break;
    case 105:
      var value = new proto.protos.opts.RelayGroupMQTTOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupMQTTOptions.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    case 106:
      var value = new proto.protos.opts.RelayGroupAzureServiceBusOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupAzureServiceBusOptions.deserializeBinaryFromReader);
      msg.setAzureServiceBus(value);
      break;
    case 107:
      var value = new proto.protos.opts.RelayGroupGCPPubSubOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupGCPPubSubOptions.deserializeBinaryFromReader);
      msg.setGcpPubsub(value);
      break;
    case 108:
      var value = new proto.protos.opts.RelayGroupKubeMQQueueOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupKubeMQQueueOptions.deserializeBinaryFromReader);
      msg.setKubemqQueue(value);
      break;
    case 109:
      var value = new proto.protos.opts.RelayGroupRedisPubSubOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupRedisPubSubOptions.deserializeBinaryFromReader);
      msg.setRedisPubsub(value);
      break;
    case 111:
      var value = new proto.protos.opts.RelayGroupRedisStreamsOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupRedisStreamsOptions.deserializeBinaryFromReader);
      msg.setRedisStreams(value);
      break;
    case 112:
      var value = new proto.protos.opts.RelayGroupPostgresOptions;
      reader.readMessage(value,proto.protos.opts.RelayGroupPostgresOptions.deserializeBinaryFromReader);
      msg.setPostgres(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBatchSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBatchMaxRetry();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getConnectionId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNumWorkers();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getBatchshGrpcAddress();
  if (f.length > 0) {
    writer.writeString(
      1000,
      f
    );
  }
  f = message.getBatchshGrpcDisableTls();
  if (f) {
    writer.writeBool(
      1001,
      f
    );
  }
  f = message.getBatchshGrpcTimeoutSeconds();
  if (f !== 0) {
    writer.writeInt32(
      1002,
      f
    );
  }
  f = message.getRelayId();
  if (f.length > 0) {
    writer.writeString(
      1003,
      f
    );
  }
  f = message.getCliOptions();
  if (f != null) {
    writer.writeMessage(
      1004,
      f,
      proto.protos.opts.RelayCLIOptions.serializeBinaryToWriter
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.protos.opts.RelayGroupKafkaOptions.serializeBinaryToWriter
    );
  }
  f = message.getAwssqs();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.protos.opts.RelayGroupAWSSQSOptions.serializeBinaryToWriter
    );
  }
  f = message.getMongo();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.protos.opts.RelayGroupMongoOptions.serializeBinaryToWriter
    );
  }
  f = message.getNsq();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.protos.opts.RelayGroupNSQOptions.serializeBinaryToWriter
    );
  }
  f = message.getRabbit();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.protos.opts.RelayGroupRabbitOptions.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      proto.protos.opts.RelayGroupMQTTOptions.serializeBinaryToWriter
    );
  }
  f = message.getAzureServiceBus();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      proto.protos.opts.RelayGroupAzureServiceBusOptions.serializeBinaryToWriter
    );
  }
  f = message.getGcpPubsub();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      proto.protos.opts.RelayGroupGCPPubSubOptions.serializeBinaryToWriter
    );
  }
  f = message.getKubemqQueue();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      proto.protos.opts.RelayGroupKubeMQQueueOptions.serializeBinaryToWriter
    );
  }
  f = message.getRedisPubsub();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      proto.protos.opts.RelayGroupRedisPubSubOptions.serializeBinaryToWriter
    );
  }
  f = message.getRedisStreams();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      proto.protos.opts.RelayGroupRedisStreamsOptions.serializeBinaryToWriter
    );
  }
  f = message.getPostgres();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto.protos.opts.RelayGroupPostgresOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string collection_token = 1;
 * @return {string}
 */
proto.protos.opts.RelayOptions.prototype.getCollectionToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.setCollectionToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 batch_size = 2;
 * @return {number}
 */
proto.protos.opts.RelayOptions.prototype.getBatchSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.setBatchSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 batch_max_retry = 3;
 * @return {number}
 */
proto.protos.opts.RelayOptions.prototype.getBatchMaxRetry = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.setBatchMaxRetry = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string connection_id = 4;
 * @return {string}
 */
proto.protos.opts.RelayOptions.prototype.getConnectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.setConnectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 num_workers = 5;
 * @return {number}
 */
proto.protos.opts.RelayOptions.prototype.getNumWorkers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.setNumWorkers = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string _batchsh_grpc_address = 1000;
 * @return {string}
 */
proto.protos.opts.RelayOptions.prototype.getBatchshGrpcAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1000, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.setBatchshGrpcAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1000, value);
};


/**
 * optional bool _batchsh_grpc_disable_tls = 1001;
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.getBatchshGrpcDisableTls = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1001, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.setBatchshGrpcDisableTls = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1001, value);
};


/**
 * optional int32 _batchsh_grpc_timeout_seconds = 1002;
 * @return {number}
 */
proto.protos.opts.RelayOptions.prototype.getBatchshGrpcTimeoutSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1002, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.setBatchshGrpcTimeoutSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 1002, value);
};


/**
 * optional string _relay_id = 1003;
 * @return {string}
 */
proto.protos.opts.RelayOptions.prototype.getRelayId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1003, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.setRelayId = function(value) {
  return jspb.Message.setProto3StringField(this, 1003, value);
};


/**
 * optional RelayCLIOptions _cli_options = 1004;
 * @return {?proto.protos.opts.RelayCLIOptions}
 */
proto.protos.opts.RelayOptions.prototype.getCliOptions = function() {
  return /** @type{?proto.protos.opts.RelayCLIOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayCLIOptions, 1004));
};


/**
 * @param {?proto.protos.opts.RelayCLIOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setCliOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1004, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearCliOptions = function() {
  return this.setCliOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasCliOptions = function() {
  return jspb.Message.getField(this, 1004) != null;
};


/**
 * optional RelayGroupKafkaOptions kafka = 100;
 * @return {?proto.protos.opts.RelayGroupKafkaOptions}
 */
proto.protos.opts.RelayOptions.prototype.getKafka = function() {
  return /** @type{?proto.protos.opts.RelayGroupKafkaOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupKafkaOptions, 100));
};


/**
 * @param {?proto.protos.opts.RelayGroupKafkaOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setKafka = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional RelayGroupAWSSQSOptions awssqs = 101;
 * @return {?proto.protos.opts.RelayGroupAWSSQSOptions}
 */
proto.protos.opts.RelayOptions.prototype.getAwssqs = function() {
  return /** @type{?proto.protos.opts.RelayGroupAWSSQSOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupAWSSQSOptions, 101));
};


/**
 * @param {?proto.protos.opts.RelayGroupAWSSQSOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setAwssqs = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearAwssqs = function() {
  return this.setAwssqs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasAwssqs = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional RelayGroupMongoOptions mongo = 102;
 * @return {?proto.protos.opts.RelayGroupMongoOptions}
 */
proto.protos.opts.RelayOptions.prototype.getMongo = function() {
  return /** @type{?proto.protos.opts.RelayGroupMongoOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupMongoOptions, 102));
};


/**
 * @param {?proto.protos.opts.RelayGroupMongoOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setMongo = function(value) {
  return jspb.Message.setWrapperField(this, 102, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearMongo = function() {
  return this.setMongo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasMongo = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional RelayGroupNSQOptions nsq = 103;
 * @return {?proto.protos.opts.RelayGroupNSQOptions}
 */
proto.protos.opts.RelayOptions.prototype.getNsq = function() {
  return /** @type{?proto.protos.opts.RelayGroupNSQOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupNSQOptions, 103));
};


/**
 * @param {?proto.protos.opts.RelayGroupNSQOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setNsq = function(value) {
  return jspb.Message.setWrapperField(this, 103, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearNsq = function() {
  return this.setNsq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasNsq = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional RelayGroupRabbitOptions rabbit = 104;
 * @return {?proto.protos.opts.RelayGroupRabbitOptions}
 */
proto.protos.opts.RelayOptions.prototype.getRabbit = function() {
  return /** @type{?proto.protos.opts.RelayGroupRabbitOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupRabbitOptions, 104));
};


/**
 * @param {?proto.protos.opts.RelayGroupRabbitOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setRabbit = function(value) {
  return jspb.Message.setWrapperField(this, 104, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearRabbit = function() {
  return this.setRabbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasRabbit = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional RelayGroupMQTTOptions mqtt = 105;
 * @return {?proto.protos.opts.RelayGroupMQTTOptions}
 */
proto.protos.opts.RelayOptions.prototype.getMqtt = function() {
  return /** @type{?proto.protos.opts.RelayGroupMQTTOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupMQTTOptions, 105));
};


/**
 * @param {?proto.protos.opts.RelayGroupMQTTOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setMqtt = function(value) {
  return jspb.Message.setWrapperField(this, 105, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearMqtt = function() {
  return this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional RelayGroupAzureServiceBusOptions azure_service_bus = 106;
 * @return {?proto.protos.opts.RelayGroupAzureServiceBusOptions}
 */
proto.protos.opts.RelayOptions.prototype.getAzureServiceBus = function() {
  return /** @type{?proto.protos.opts.RelayGroupAzureServiceBusOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupAzureServiceBusOptions, 106));
};


/**
 * @param {?proto.protos.opts.RelayGroupAzureServiceBusOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setAzureServiceBus = function(value) {
  return jspb.Message.setWrapperField(this, 106, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearAzureServiceBus = function() {
  return this.setAzureServiceBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasAzureServiceBus = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional RelayGroupGCPPubSubOptions gcp_pubsub = 107;
 * @return {?proto.protos.opts.RelayGroupGCPPubSubOptions}
 */
proto.protos.opts.RelayOptions.prototype.getGcpPubsub = function() {
  return /** @type{?proto.protos.opts.RelayGroupGCPPubSubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupGCPPubSubOptions, 107));
};


/**
 * @param {?proto.protos.opts.RelayGroupGCPPubSubOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setGcpPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 107, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearGcpPubsub = function() {
  return this.setGcpPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasGcpPubsub = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional RelayGroupKubeMQQueueOptions kubemq_queue = 108;
 * @return {?proto.protos.opts.RelayGroupKubeMQQueueOptions}
 */
proto.protos.opts.RelayOptions.prototype.getKubemqQueue = function() {
  return /** @type{?proto.protos.opts.RelayGroupKubeMQQueueOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupKubeMQQueueOptions, 108));
};


/**
 * @param {?proto.protos.opts.RelayGroupKubeMQQueueOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setKubemqQueue = function(value) {
  return jspb.Message.setWrapperField(this, 108, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearKubemqQueue = function() {
  return this.setKubemqQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasKubemqQueue = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional RelayGroupRedisPubSubOptions redis_pubsub = 109;
 * @return {?proto.protos.opts.RelayGroupRedisPubSubOptions}
 */
proto.protos.opts.RelayOptions.prototype.getRedisPubsub = function() {
  return /** @type{?proto.protos.opts.RelayGroupRedisPubSubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupRedisPubSubOptions, 109));
};


/**
 * @param {?proto.protos.opts.RelayGroupRedisPubSubOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setRedisPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 109, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearRedisPubsub = function() {
  return this.setRedisPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasRedisPubsub = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional RelayGroupRedisStreamsOptions redis_streams = 111;
 * @return {?proto.protos.opts.RelayGroupRedisStreamsOptions}
 */
proto.protos.opts.RelayOptions.prototype.getRedisStreams = function() {
  return /** @type{?proto.protos.opts.RelayGroupRedisStreamsOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupRedisStreamsOptions, 111));
};


/**
 * @param {?proto.protos.opts.RelayGroupRedisStreamsOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setRedisStreams = function(value) {
  return jspb.Message.setWrapperField(this, 111, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearRedisStreams = function() {
  return this.setRedisStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasRedisStreams = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional RelayGroupPostgresOptions postgres = 112;
 * @return {?proto.protos.opts.RelayGroupPostgresOptions}
 */
proto.protos.opts.RelayOptions.prototype.getPostgres = function() {
  return /** @type{?proto.protos.opts.RelayGroupPostgresOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.RelayGroupPostgresOptions, 112));
};


/**
 * @param {?proto.protos.opts.RelayGroupPostgresOptions|undefined} value
 * @return {!proto.protos.opts.RelayOptions} returns this
*/
proto.protos.opts.RelayOptions.prototype.setPostgres = function(value) {
  return jspb.Message.setWrapperField(this, 112, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayOptions} returns this
 */
proto.protos.opts.RelayOptions.prototype.clearPostgres = function() {
  return this.setPostgres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayOptions.prototype.hasPostgres = function() {
  return jspb.Message.getField(this, 112) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupKafkaOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupKafkaOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupKafkaOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupKafkaOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kafka_pb.KafkaConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kafka_pb.KafkaRelayArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupKafkaOptions}
 */
proto.protos.opts.RelayGroupKafkaOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupKafkaOptions;
  return proto.protos.opts.RelayGroupKafkaOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupKafkaOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupKafkaOptions}
 */
proto.protos.opts.RelayGroupKafkaOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kafka_pb.KafkaConn;
      reader.readMessage(value,args_kafka_pb.KafkaConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kafka_pb.KafkaRelayArgs;
      reader.readMessage(value,args_kafka_pb.KafkaRelayArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupKafkaOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupKafkaOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupKafkaOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupKafkaOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kafka_pb.KafkaConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kafka_pb.KafkaRelayArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.KafkaConn _conn = 1;
 * @return {?proto.protos.args.KafkaConn}
 */
proto.protos.opts.RelayGroupKafkaOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KafkaConn} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaConn, 1));
};


/**
 * @param {?proto.protos.args.KafkaConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupKafkaOptions} returns this
*/
proto.protos.opts.RelayGroupKafkaOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupKafkaOptions} returns this
 */
proto.protos.opts.RelayGroupKafkaOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupKafkaOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.KafkaRelayArgs args = 2;
 * @return {?proto.protos.args.KafkaRelayArgs}
 */
proto.protos.opts.RelayGroupKafkaOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KafkaRelayArgs} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaRelayArgs, 2));
};


/**
 * @param {?proto.protos.args.KafkaRelayArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupKafkaOptions} returns this
*/
proto.protos.opts.RelayGroupKafkaOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupKafkaOptions} returns this
 */
proto.protos.opts.RelayGroupKafkaOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupKafkaOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupAWSSQSOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupAWSSQSOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupAWSSQSOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_aws$sqs_pb.AWSSQSConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_aws$sqs_pb.AWSSQSRelayArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupAWSSQSOptions}
 */
proto.protos.opts.RelayGroupAWSSQSOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupAWSSQSOptions;
  return proto.protos.opts.RelayGroupAWSSQSOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupAWSSQSOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupAWSSQSOptions}
 */
proto.protos.opts.RelayGroupAWSSQSOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_aws$sqs_pb.AWSSQSConn;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_aws$sqs_pb.AWSSQSRelayArgs;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSRelayArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupAWSSQSOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupAWSSQSOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupAWSSQSOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_aws$sqs_pb.AWSSQSConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_aws$sqs_pb.AWSSQSRelayArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AWSSQSConn _conn = 1;
 * @return {?proto.protos.args.AWSSQSConn}
 */
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AWSSQSConn} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSConn, 1));
};


/**
 * @param {?proto.protos.args.AWSSQSConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupAWSSQSOptions} returns this
*/
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupAWSSQSOptions} returns this
 */
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AWSSQSRelayArgs args = 2;
 * @return {?proto.protos.args.AWSSQSRelayArgs}
 */
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AWSSQSRelayArgs} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSRelayArgs, 2));
};


/**
 * @param {?proto.protos.args.AWSSQSRelayArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupAWSSQSOptions} returns this
*/
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupAWSSQSOptions} returns this
 */
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupAWSSQSOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupMongoOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupMongoOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupMongoOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupMongoOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_mongo_pb.MongoConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_mongo_pb.MongoReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupMongoOptions}
 */
proto.protos.opts.RelayGroupMongoOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupMongoOptions;
  return proto.protos.opts.RelayGroupMongoOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupMongoOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupMongoOptions}
 */
proto.protos.opts.RelayGroupMongoOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_mongo_pb.MongoConn;
      reader.readMessage(value,args_mongo_pb.MongoConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_mongo_pb.MongoReadArgs;
      reader.readMessage(value,args_mongo_pb.MongoReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupMongoOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupMongoOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupMongoOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupMongoOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_mongo_pb.MongoConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_mongo_pb.MongoReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.MongoConn _conn = 1;
 * @return {?proto.protos.args.MongoConn}
 */
proto.protos.opts.RelayGroupMongoOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.MongoConn} */ (
    jspb.Message.getWrapperField(this, args_mongo_pb.MongoConn, 1));
};


/**
 * @param {?proto.protos.args.MongoConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupMongoOptions} returns this
*/
proto.protos.opts.RelayGroupMongoOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupMongoOptions} returns this
 */
proto.protos.opts.RelayGroupMongoOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupMongoOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.MongoReadArgs args = 2;
 * @return {?proto.protos.args.MongoReadArgs}
 */
proto.protos.opts.RelayGroupMongoOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.MongoReadArgs} */ (
    jspb.Message.getWrapperField(this, args_mongo_pb.MongoReadArgs, 2));
};


/**
 * @param {?proto.protos.args.MongoReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupMongoOptions} returns this
*/
proto.protos.opts.RelayGroupMongoOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupMongoOptions} returns this
 */
proto.protos.opts.RelayGroupMongoOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupMongoOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupNSQOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupNSQOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupNSQOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupNSQOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nsq_pb.NSQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nsq_pb.NSQReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupNSQOptions}
 */
proto.protos.opts.RelayGroupNSQOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupNSQOptions;
  return proto.protos.opts.RelayGroupNSQOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupNSQOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupNSQOptions}
 */
proto.protos.opts.RelayGroupNSQOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nsq_pb.NSQConn;
      reader.readMessage(value,args_nsq_pb.NSQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nsq_pb.NSQReadArgs;
      reader.readMessage(value,args_nsq_pb.NSQReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupNSQOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupNSQOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupNSQOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupNSQOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nsq_pb.NSQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nsq_pb.NSQReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NSQConn _conn = 1;
 * @return {?proto.protos.args.NSQConn}
 */
proto.protos.opts.RelayGroupNSQOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NSQConn} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQConn, 1));
};


/**
 * @param {?proto.protos.args.NSQConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupNSQOptions} returns this
*/
proto.protos.opts.RelayGroupNSQOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupNSQOptions} returns this
 */
proto.protos.opts.RelayGroupNSQOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupNSQOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NSQReadArgs args = 2;
 * @return {?proto.protos.args.NSQReadArgs}
 */
proto.protos.opts.RelayGroupNSQOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NSQReadArgs} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQReadArgs, 2));
};


/**
 * @param {?proto.protos.args.NSQReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupNSQOptions} returns this
*/
proto.protos.opts.RelayGroupNSQOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupNSQOptions} returns this
 */
proto.protos.opts.RelayGroupNSQOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupNSQOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupPostgresOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupPostgresOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupPostgresOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupPostgresOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_postgres_pb.PostgresConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_postgres_pb.PostgresReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupPostgresOptions}
 */
proto.protos.opts.RelayGroupPostgresOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupPostgresOptions;
  return proto.protos.opts.RelayGroupPostgresOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupPostgresOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupPostgresOptions}
 */
proto.protos.opts.RelayGroupPostgresOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_postgres_pb.PostgresConn;
      reader.readMessage(value,args_postgres_pb.PostgresConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_postgres_pb.PostgresReadArgs;
      reader.readMessage(value,args_postgres_pb.PostgresReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupPostgresOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupPostgresOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupPostgresOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupPostgresOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_postgres_pb.PostgresConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_postgres_pb.PostgresReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.PostgresConn _conn = 1;
 * @return {?proto.protos.args.PostgresConn}
 */
proto.protos.opts.RelayGroupPostgresOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.PostgresConn} */ (
    jspb.Message.getWrapperField(this, args_postgres_pb.PostgresConn, 1));
};


/**
 * @param {?proto.protos.args.PostgresConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupPostgresOptions} returns this
*/
proto.protos.opts.RelayGroupPostgresOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupPostgresOptions} returns this
 */
proto.protos.opts.RelayGroupPostgresOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupPostgresOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.PostgresReadArgs args = 2;
 * @return {?proto.protos.args.PostgresReadArgs}
 */
proto.protos.opts.RelayGroupPostgresOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.PostgresReadArgs} */ (
    jspb.Message.getWrapperField(this, args_postgres_pb.PostgresReadArgs, 2));
};


/**
 * @param {?proto.protos.args.PostgresReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupPostgresOptions} returns this
*/
proto.protos.opts.RelayGroupPostgresOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupPostgresOptions} returns this
 */
proto.protos.opts.RelayGroupPostgresOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupPostgresOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupRabbitOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupRabbitOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupRabbitOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupRabbitOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit_pb.RabbitConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit_pb.RabbitReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupRabbitOptions}
 */
proto.protos.opts.RelayGroupRabbitOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupRabbitOptions;
  return proto.protos.opts.RelayGroupRabbitOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupRabbitOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupRabbitOptions}
 */
proto.protos.opts.RelayGroupRabbitOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit_pb.RabbitConn;
      reader.readMessage(value,args_rabbit_pb.RabbitConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit_pb.RabbitReadArgs;
      reader.readMessage(value,args_rabbit_pb.RabbitReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupRabbitOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupRabbitOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupRabbitOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupRabbitOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit_pb.RabbitConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit_pb.RabbitReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RabbitConn _conn = 1;
 * @return {?proto.protos.args.RabbitConn}
 */
proto.protos.opts.RelayGroupRabbitOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupRabbitOptions} returns this
*/
proto.protos.opts.RelayGroupRabbitOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupRabbitOptions} returns this
 */
proto.protos.opts.RelayGroupRabbitOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupRabbitOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RabbitReadArgs args = 2;
 * @return {?proto.protos.args.RabbitReadArgs}
 */
proto.protos.opts.RelayGroupRabbitOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitReadArgs} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitReadArgs, 2));
};


/**
 * @param {?proto.protos.args.RabbitReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupRabbitOptions} returns this
*/
proto.protos.opts.RelayGroupRabbitOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupRabbitOptions} returns this
 */
proto.protos.opts.RelayGroupRabbitOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupRabbitOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupRedisPubSubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupRedisPubSubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$pubsub_pb.RedisPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$pubsub_pb.RedisPubSubReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupRedisPubSubOptions}
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupRedisPubSubOptions;
  return proto.protos.opts.RelayGroupRedisPubSubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupRedisPubSubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupRedisPubSubOptions}
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$pubsub_pb.RedisPubSubConn;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$pubsub_pb.RedisPubSubReadArgs;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupRedisPubSubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupRedisPubSubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$pubsub_pb.RedisPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$pubsub_pb.RedisPubSubReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RedisPubSubConn _conn = 1;
 * @return {?proto.protos.args.RedisPubSubConn}
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.RedisPubSubConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupRedisPubSubOptions} returns this
*/
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupRedisPubSubOptions} returns this
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RedisPubSubReadArgs args = 2;
 * @return {?proto.protos.args.RedisPubSubReadArgs}
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisPubSubReadArgs} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubReadArgs, 2));
};


/**
 * @param {?proto.protos.args.RedisPubSubReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupRedisPubSubOptions} returns this
*/
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupRedisPubSubOptions} returns this
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupRedisPubSubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupRedisStreamsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupRedisStreamsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$streams_pb.RedisStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$streams_pb.RedisStreamsReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupRedisStreamsOptions}
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupRedisStreamsOptions;
  return proto.protos.opts.RelayGroupRedisStreamsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupRedisStreamsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupRedisStreamsOptions}
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$streams_pb.RedisStreamsConn;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$streams_pb.RedisStreamsReadArgs;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupRedisStreamsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupRedisStreamsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$streams_pb.RedisStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$streams_pb.RedisStreamsReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RedisStreamsConn _conn = 1;
 * @return {?proto.protos.args.RedisStreamsConn}
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RedisStreamsConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupRedisStreamsOptions} returns this
*/
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupRedisStreamsOptions} returns this
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RedisStreamsReadArgs args = 2;
 * @return {?proto.protos.args.RedisStreamsReadArgs}
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisStreamsReadArgs} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsReadArgs, 2));
};


/**
 * @param {?proto.protos.args.RedisStreamsReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupRedisStreamsOptions} returns this
*/
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupRedisStreamsOptions} returns this
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupRedisStreamsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupAzureServiceBusOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupAzureServiceBusOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$service$bus_pb.AzureServiceBusConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$service$bus_pb.AzureServiceBusReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupAzureServiceBusOptions}
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupAzureServiceBusOptions;
  return proto.protos.opts.RelayGroupAzureServiceBusOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupAzureServiceBusOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupAzureServiceBusOptions}
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$service$bus_pb.AzureServiceBusConn;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$service$bus_pb.AzureServiceBusReadArgs;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupAzureServiceBusOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupAzureServiceBusOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$service$bus_pb.AzureServiceBusConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$service$bus_pb.AzureServiceBusReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AzureServiceBusConn _conn = 1;
 * @return {?proto.protos.args.AzureServiceBusConn}
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureServiceBusConn} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusConn, 1));
};


/**
 * @param {?proto.protos.args.AzureServiceBusConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupAzureServiceBusOptions} returns this
*/
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupAzureServiceBusOptions} returns this
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AzureServiceBusReadArgs args = 2;
 * @return {?proto.protos.args.AzureServiceBusReadArgs}
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureServiceBusReadArgs} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusReadArgs, 2));
};


/**
 * @param {?proto.protos.args.AzureServiceBusReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupAzureServiceBusOptions} returns this
*/
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupAzureServiceBusOptions} returns this
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupAzureServiceBusOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupMQTTOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupMQTTOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupMQTTOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupMQTTOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_mqtt_pb.MQTTConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_mqtt_pb.MQTTReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupMQTTOptions}
 */
proto.protos.opts.RelayGroupMQTTOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupMQTTOptions;
  return proto.protos.opts.RelayGroupMQTTOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupMQTTOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupMQTTOptions}
 */
proto.protos.opts.RelayGroupMQTTOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_mqtt_pb.MQTTConn;
      reader.readMessage(value,args_mqtt_pb.MQTTConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_mqtt_pb.MQTTReadArgs;
      reader.readMessage(value,args_mqtt_pb.MQTTReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupMQTTOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupMQTTOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupMQTTOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupMQTTOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_mqtt_pb.MQTTConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_mqtt_pb.MQTTReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.MQTTConn _conn = 1;
 * @return {?proto.protos.args.MQTTConn}
 */
proto.protos.opts.RelayGroupMQTTOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.MQTTConn} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTConn, 1));
};


/**
 * @param {?proto.protos.args.MQTTConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupMQTTOptions} returns this
*/
proto.protos.opts.RelayGroupMQTTOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupMQTTOptions} returns this
 */
proto.protos.opts.RelayGroupMQTTOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupMQTTOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.MQTTReadArgs args = 2;
 * @return {?proto.protos.args.MQTTReadArgs}
 */
proto.protos.opts.RelayGroupMQTTOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.MQTTReadArgs} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTReadArgs, 2));
};


/**
 * @param {?proto.protos.args.MQTTReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupMQTTOptions} returns this
*/
proto.protos.opts.RelayGroupMQTTOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupMQTTOptions} returns this
 */
proto.protos.opts.RelayGroupMQTTOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupMQTTOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupGCPPubSubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupGCPPubSubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_gcp$pubsub_pb.GCPPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_gcp$pubsub_pb.GCPPubSubReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupGCPPubSubOptions}
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupGCPPubSubOptions;
  return proto.protos.opts.RelayGroupGCPPubSubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupGCPPubSubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupGCPPubSubOptions}
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_gcp$pubsub_pb.GCPPubSubConn;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_gcp$pubsub_pb.GCPPubSubReadArgs;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupGCPPubSubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupGCPPubSubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_gcp$pubsub_pb.GCPPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_gcp$pubsub_pb.GCPPubSubReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.GCPPubSubConn _conn = 1;
 * @return {?proto.protos.args.GCPPubSubConn}
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.GCPPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.GCPPubSubConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupGCPPubSubOptions} returns this
*/
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupGCPPubSubOptions} returns this
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.GCPPubSubReadArgs args = 2;
 * @return {?proto.protos.args.GCPPubSubReadArgs}
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.GCPPubSubReadArgs} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubReadArgs, 2));
};


/**
 * @param {?proto.protos.args.GCPPubSubReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupGCPPubSubOptions} returns this
*/
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupGCPPubSubOptions} returns this
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupGCPPubSubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.RelayGroupKubeMQQueueOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.RelayGroupKubeMQQueueOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kubemq$queue_pb.KubeMQQueueConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kubemq$queue_pb.KubeMQQueueReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.RelayGroupKubeMQQueueOptions}
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.RelayGroupKubeMQQueueOptions;
  return proto.protos.opts.RelayGroupKubeMQQueueOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.RelayGroupKubeMQQueueOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.RelayGroupKubeMQQueueOptions}
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kubemq$queue_pb.KubeMQQueueConn;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kubemq$queue_pb.KubeMQQueueReadArgs;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.RelayGroupKubeMQQueueOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.RelayGroupKubeMQQueueOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kubemq$queue_pb.KubeMQQueueConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kubemq$queue_pb.KubeMQQueueReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.KubeMQQueueConn _conn = 1;
 * @return {?proto.protos.args.KubeMQQueueConn}
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KubeMQQueueConn} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueConn, 1));
};


/**
 * @param {?proto.protos.args.KubeMQQueueConn|undefined} value
 * @return {!proto.protos.opts.RelayGroupKubeMQQueueOptions} returns this
*/
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupKubeMQQueueOptions} returns this
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.KubeMQQueueReadArgs args = 2;
 * @return {?proto.protos.args.KubeMQQueueReadArgs}
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KubeMQQueueReadArgs} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueReadArgs, 2));
};


/**
 * @param {?proto.protos.args.KubeMQQueueReadArgs|undefined} value
 * @return {!proto.protos.opts.RelayGroupKubeMQQueueOptions} returns this
*/
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.RelayGroupKubeMQQueueOptions} returns this
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.RelayGroupKubeMQQueueOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.protos.opts);
