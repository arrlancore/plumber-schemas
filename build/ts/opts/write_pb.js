// source: opts/write.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var records_base_pb = require('../records/base_pb.js');
goog.object.extend(proto, records_base_pb);
var args_activemq_pb = require('../args/activemq_pb.js');
goog.object.extend(proto, args_activemq_pb);
var args_azure$service$bus_pb = require('../args/azure-service-bus_pb.js');
goog.object.extend(proto, args_azure$service$bus_pb);
var args_azure$event$hub_pb = require('../args/azure-event-hub_pb.js');
goog.object.extend(proto, args_azure$event$hub_pb);
var args_aws$sns_pb = require('../args/aws-sns_pb.js');
goog.object.extend(proto, args_aws$sns_pb);
var args_aws$sqs_pb = require('../args/aws-sqs_pb.js');
goog.object.extend(proto, args_aws$sqs_pb);
var args_gcp$pubsub_pb = require('../args/gcp-pubsub_pb.js');
goog.object.extend(proto, args_gcp$pubsub_pb);
var args_kafka_pb = require('../args/kafka_pb.js');
goog.object.extend(proto, args_kafka_pb);
var args_kubemq$queue_pb = require('../args/kubemq-queue_pb.js');
goog.object.extend(proto, args_kubemq$queue_pb);
var args_mqtt_pb = require('../args/mqtt_pb.js');
goog.object.extend(proto, args_mqtt_pb);
var args_nats_pb = require('../args/nats_pb.js');
goog.object.extend(proto, args_nats_pb);
var args_nats$streaming_pb = require('../args/nats-streaming_pb.js');
goog.object.extend(proto, args_nats$streaming_pb);
var args_nsq_pb = require('../args/nsq_pb.js');
goog.object.extend(proto, args_nsq_pb);
var args_pulsar_pb = require('../args/pulsar_pb.js');
goog.object.extend(proto, args_pulsar_pb);
var args_rabbit_pb = require('../args/rabbit_pb.js');
goog.object.extend(proto, args_rabbit_pb);
var args_rabbit$streams_pb = require('../args/rabbit-streams_pb.js');
goog.object.extend(proto, args_rabbit$streams_pb);
var args_redis$pubsub_pb = require('../args/redis-pubsub_pb.js');
goog.object.extend(proto, args_redis$pubsub_pb);
var args_redis$streams_pb = require('../args/redis-streams_pb.js');
goog.object.extend(proto, args_redis$streams_pb);
var encoding_options_pb = require('../encoding/options_pb.js');
goog.object.extend(proto, encoding_options_pb);
goog.exportSymbol('proto.protos.opts.WriteCLIOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupAWSSNSOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupAWSSQSOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupActiveMQOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupAzureEventHubOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupAzureServiceBusOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupGCPPubSubOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupKafkaOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupKubeMQQueueOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupMQTTOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupNSQOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupNatsOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupNatsStreamingOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupPulsarOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupRabbitOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupRabbitStreamsOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupRedisPubSubOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteGroupRedisStreamsOptions', null, global);
goog.exportSymbol('proto.protos.opts.WriteOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteCLIOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteCLIOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteCLIOptions.displayName = 'proto.protos.opts.WriteCLIOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.protos.opts.WriteOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteOptions.displayName = 'proto.protos.opts.WriteOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupKafkaOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupKafkaOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupKafkaOptions.displayName = 'proto.protos.opts.WriteGroupKafkaOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupActiveMQOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupActiveMQOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupActiveMQOptions.displayName = 'proto.protos.opts.WriteGroupActiveMQOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupAWSSQSOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupAWSSQSOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupAWSSQSOptions.displayName = 'proto.protos.opts.WriteGroupAWSSQSOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupAWSSNSOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupAWSSNSOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupAWSSNSOptions.displayName = 'proto.protos.opts.WriteGroupAWSSNSOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupNatsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupNatsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupNatsOptions.displayName = 'proto.protos.opts.WriteGroupNatsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupNatsStreamingOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupNatsStreamingOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupNatsStreamingOptions.displayName = 'proto.protos.opts.WriteGroupNatsStreamingOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupNSQOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupNSQOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupNSQOptions.displayName = 'proto.protos.opts.WriteGroupNSQOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupPulsarOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupPulsarOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupPulsarOptions.displayName = 'proto.protos.opts.WriteGroupPulsarOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupRabbitOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupRabbitOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupRabbitOptions.displayName = 'proto.protos.opts.WriteGroupRabbitOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupRabbitStreamsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupRabbitStreamsOptions.displayName = 'proto.protos.opts.WriteGroupRabbitStreamsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupRedisPubSubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupRedisPubSubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupRedisPubSubOptions.displayName = 'proto.protos.opts.WriteGroupRedisPubSubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupRedisStreamsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupRedisStreamsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupRedisStreamsOptions.displayName = 'proto.protos.opts.WriteGroupRedisStreamsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupAzureEventHubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupAzureEventHubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupAzureEventHubOptions.displayName = 'proto.protos.opts.WriteGroupAzureEventHubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupAzureServiceBusOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupAzureServiceBusOptions.displayName = 'proto.protos.opts.WriteGroupAzureServiceBusOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupMQTTOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupMQTTOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupMQTTOptions.displayName = 'proto.protos.opts.WriteGroupMQTTOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupGCPPubSubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupGCPPubSubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupGCPPubSubOptions.displayName = 'proto.protos.opts.WriteGroupGCPPubSubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.WriteGroupKubeMQQueueOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.WriteGroupKubeMQQueueOptions.displayName = 'proto.protos.opts.WriteGroupKubeMQQueueOptions';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteCLIOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteCLIOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteCLIOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteCLIOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    inputFile: jspb.Message.getFieldWithDefault(msg, 1, ""),
    inputAsJsonArray: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteCLIOptions}
 */
proto.protos.opts.WriteCLIOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteCLIOptions;
  return proto.protos.opts.WriteCLIOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteCLIOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteCLIOptions}
 */
proto.protos.opts.WriteCLIOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputFile(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setInputAsJsonArray(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteCLIOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteCLIOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteCLIOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteCLIOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInputFile();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInputAsJsonArray();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string input_file = 1;
 * @return {string}
 */
proto.protos.opts.WriteCLIOptions.prototype.getInputFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.WriteCLIOptions} returns this
 */
proto.protos.opts.WriteCLIOptions.prototype.setInputFile = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool input_as_json_array = 2;
 * @return {boolean}
 */
proto.protos.opts.WriteCLIOptions.prototype.getInputAsJsonArray = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.opts.WriteCLIOptions} returns this
 */
proto.protos.opts.WriteCLIOptions.prototype.setInputAsJsonArray = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    connectionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    record: (f = msg.getRecord()) && records_base_pb.WriteRecord.toObject(includeInstance, f),
    encodeOptions: (f = msg.getEncodeOptions()) && encoding_options_pb.EncodeOptions.toObject(includeInstance, f),
    cliOptions: (f = msg.getCliOptions()) && proto.protos.opts.WriteCLIOptions.toObject(includeInstance, f),
    kafka: (f = msg.getKafka()) && proto.protos.opts.WriteGroupKafkaOptions.toObject(includeInstance, f),
    activemq: (f = msg.getActivemq()) && proto.protos.opts.WriteGroupActiveMQOptions.toObject(includeInstance, f),
    awssqs: (f = msg.getAwssqs()) && proto.protos.opts.WriteGroupAWSSQSOptions.toObject(includeInstance, f),
    awssns: (f = msg.getAwssns()) && proto.protos.opts.WriteGroupAWSSNSOptions.toObject(includeInstance, f),
    nats: (f = msg.getNats()) && proto.protos.opts.WriteGroupNatsOptions.toObject(includeInstance, f),
    natsStreaming: (f = msg.getNatsStreaming()) && proto.protos.opts.WriteGroupNatsStreamingOptions.toObject(includeInstance, f),
    nsq: (f = msg.getNsq()) && proto.protos.opts.WriteGroupNSQOptions.toObject(includeInstance, f),
    pulsar: (f = msg.getPulsar()) && proto.protos.opts.WriteGroupPulsarOptions.toObject(includeInstance, f),
    rabbit: (f = msg.getRabbit()) && proto.protos.opts.WriteGroupRabbitOptions.toObject(includeInstance, f),
    rabbitStreams: (f = msg.getRabbitStreams()) && proto.protos.opts.WriteGroupRabbitStreamsOptions.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && proto.protos.opts.WriteGroupMQTTOptions.toObject(includeInstance, f),
    azureServiceBus: (f = msg.getAzureServiceBus()) && proto.protos.opts.WriteGroupAzureServiceBusOptions.toObject(includeInstance, f),
    azureEventHub: (f = msg.getAzureEventHub()) && proto.protos.opts.WriteGroupAzureEventHubOptions.toObject(includeInstance, f),
    gcpPubsub: (f = msg.getGcpPubsub()) && proto.protos.opts.WriteGroupGCPPubSubOptions.toObject(includeInstance, f),
    kubemqQueue: (f = msg.getKubemqQueue()) && proto.protos.opts.WriteGroupKubeMQQueueOptions.toObject(includeInstance, f),
    redisPubsub: (f = msg.getRedisPubsub()) && proto.protos.opts.WriteGroupRedisPubSubOptions.toObject(includeInstance, f),
    redisStreams: (f = msg.getRedisStreams()) && proto.protos.opts.WriteGroupRedisStreamsOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteOptions}
 */
proto.protos.opts.WriteOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteOptions;
  return proto.protos.opts.WriteOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteOptions}
 */
proto.protos.opts.WriteOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionId(value);
      break;
    case 2:
      var value = new records_base_pb.WriteRecord;
      reader.readMessage(value,records_base_pb.WriteRecord.deserializeBinaryFromReader);
      msg.setRecord(value);
      break;
    case 3:
      var value = new encoding_options_pb.EncodeOptions;
      reader.readMessage(value,encoding_options_pb.EncodeOptions.deserializeBinaryFromReader);
      msg.setEncodeOptions(value);
      break;
    case 1000:
      var value = new proto.protos.opts.WriteCLIOptions;
      reader.readMessage(value,proto.protos.opts.WriteCLIOptions.deserializeBinaryFromReader);
      msg.setCliOptions(value);
      break;
    case 100:
      var value = new proto.protos.opts.WriteGroupKafkaOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupKafkaOptions.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 101:
      var value = new proto.protos.opts.WriteGroupActiveMQOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupActiveMQOptions.deserializeBinaryFromReader);
      msg.setActivemq(value);
      break;
    case 102:
      var value = new proto.protos.opts.WriteGroupAWSSQSOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupAWSSQSOptions.deserializeBinaryFromReader);
      msg.setAwssqs(value);
      break;
    case 103:
      var value = new proto.protos.opts.WriteGroupAWSSNSOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupAWSSNSOptions.deserializeBinaryFromReader);
      msg.setAwssns(value);
      break;
    case 104:
      var value = new proto.protos.opts.WriteGroupNatsOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupNatsOptions.deserializeBinaryFromReader);
      msg.setNats(value);
      break;
    case 105:
      var value = new proto.protos.opts.WriteGroupNatsStreamingOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupNatsStreamingOptions.deserializeBinaryFromReader);
      msg.setNatsStreaming(value);
      break;
    case 106:
      var value = new proto.protos.opts.WriteGroupNSQOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupNSQOptions.deserializeBinaryFromReader);
      msg.setNsq(value);
      break;
    case 107:
      var value = new proto.protos.opts.WriteGroupPulsarOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupPulsarOptions.deserializeBinaryFromReader);
      msg.setPulsar(value);
      break;
    case 108:
      var value = new proto.protos.opts.WriteGroupRabbitOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupRabbitOptions.deserializeBinaryFromReader);
      msg.setRabbit(value);
      break;
    case 109:
      var value = new proto.protos.opts.WriteGroupRabbitStreamsOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupRabbitStreamsOptions.deserializeBinaryFromReader);
      msg.setRabbitStreams(value);
      break;
    case 110:
      var value = new proto.protos.opts.WriteGroupMQTTOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupMQTTOptions.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    case 111:
      var value = new proto.protos.opts.WriteGroupAzureServiceBusOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupAzureServiceBusOptions.deserializeBinaryFromReader);
      msg.setAzureServiceBus(value);
      break;
    case 112:
      var value = new proto.protos.opts.WriteGroupAzureEventHubOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupAzureEventHubOptions.deserializeBinaryFromReader);
      msg.setAzureEventHub(value);
      break;
    case 113:
      var value = new proto.protos.opts.WriteGroupGCPPubSubOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupGCPPubSubOptions.deserializeBinaryFromReader);
      msg.setGcpPubsub(value);
      break;
    case 114:
      var value = new proto.protos.opts.WriteGroupKubeMQQueueOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupKubeMQQueueOptions.deserializeBinaryFromReader);
      msg.setKubemqQueue(value);
      break;
    case 115:
      var value = new proto.protos.opts.WriteGroupRedisPubSubOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupRedisPubSubOptions.deserializeBinaryFromReader);
      msg.setRedisPubsub(value);
      break;
    case 116:
      var value = new proto.protos.opts.WriteGroupRedisStreamsOptions;
      reader.readMessage(value,proto.protos.opts.WriteGroupRedisStreamsOptions.deserializeBinaryFromReader);
      msg.setRedisStreams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnectionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRecord();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      records_base_pb.WriteRecord.serializeBinaryToWriter
    );
  }
  f = message.getEncodeOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      encoding_options_pb.EncodeOptions.serializeBinaryToWriter
    );
  }
  f = message.getCliOptions();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      proto.protos.opts.WriteCLIOptions.serializeBinaryToWriter
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.protos.opts.WriteGroupKafkaOptions.serializeBinaryToWriter
    );
  }
  f = message.getActivemq();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.protos.opts.WriteGroupActiveMQOptions.serializeBinaryToWriter
    );
  }
  f = message.getAwssqs();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.protos.opts.WriteGroupAWSSQSOptions.serializeBinaryToWriter
    );
  }
  f = message.getAwssns();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.protos.opts.WriteGroupAWSSNSOptions.serializeBinaryToWriter
    );
  }
  f = message.getNats();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.protos.opts.WriteGroupNatsOptions.serializeBinaryToWriter
    );
  }
  f = message.getNatsStreaming();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      proto.protos.opts.WriteGroupNatsStreamingOptions.serializeBinaryToWriter
    );
  }
  f = message.getNsq();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      proto.protos.opts.WriteGroupNSQOptions.serializeBinaryToWriter
    );
  }
  f = message.getPulsar();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      proto.protos.opts.WriteGroupPulsarOptions.serializeBinaryToWriter
    );
  }
  f = message.getRabbit();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      proto.protos.opts.WriteGroupRabbitOptions.serializeBinaryToWriter
    );
  }
  f = message.getRabbitStreams();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      proto.protos.opts.WriteGroupRabbitStreamsOptions.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto.protos.opts.WriteGroupMQTTOptions.serializeBinaryToWriter
    );
  }
  f = message.getAzureServiceBus();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      proto.protos.opts.WriteGroupAzureServiceBusOptions.serializeBinaryToWriter
    );
  }
  f = message.getAzureEventHub();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto.protos.opts.WriteGroupAzureEventHubOptions.serializeBinaryToWriter
    );
  }
  f = message.getGcpPubsub();
  if (f != null) {
    writer.writeMessage(
      113,
      f,
      proto.protos.opts.WriteGroupGCPPubSubOptions.serializeBinaryToWriter
    );
  }
  f = message.getKubemqQueue();
  if (f != null) {
    writer.writeMessage(
      114,
      f,
      proto.protos.opts.WriteGroupKubeMQQueueOptions.serializeBinaryToWriter
    );
  }
  f = message.getRedisPubsub();
  if (f != null) {
    writer.writeMessage(
      115,
      f,
      proto.protos.opts.WriteGroupRedisPubSubOptions.serializeBinaryToWriter
    );
  }
  f = message.getRedisStreams();
  if (f != null) {
    writer.writeMessage(
      116,
      f,
      proto.protos.opts.WriteGroupRedisStreamsOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string connection_id = 1;
 * @return {string}
 */
proto.protos.opts.WriteOptions.prototype.getConnectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.setConnectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional protos.records.WriteRecord record = 2;
 * @return {?proto.protos.records.WriteRecord}
 */
proto.protos.opts.WriteOptions.prototype.getRecord = function() {
  return /** @type{?proto.protos.records.WriteRecord} */ (
    jspb.Message.getWrapperField(this, records_base_pb.WriteRecord, 2));
};


/**
 * @param {?proto.protos.records.WriteRecord|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setRecord = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearRecord = function() {
  return this.setRecord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasRecord = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional protos.encoding.EncodeOptions encode_options = 3;
 * @return {?proto.protos.encoding.EncodeOptions}
 */
proto.protos.opts.WriteOptions.prototype.getEncodeOptions = function() {
  return /** @type{?proto.protos.encoding.EncodeOptions} */ (
    jspb.Message.getWrapperField(this, encoding_options_pb.EncodeOptions, 3));
};


/**
 * @param {?proto.protos.encoding.EncodeOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setEncodeOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearEncodeOptions = function() {
  return this.setEncodeOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasEncodeOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional WriteCLIOptions _cli_options = 1000;
 * @return {?proto.protos.opts.WriteCLIOptions}
 */
proto.protos.opts.WriteOptions.prototype.getCliOptions = function() {
  return /** @type{?proto.protos.opts.WriteCLIOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteCLIOptions, 1000));
};


/**
 * @param {?proto.protos.opts.WriteCLIOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setCliOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearCliOptions = function() {
  return this.setCliOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasCliOptions = function() {
  return jspb.Message.getField(this, 1000) != null;
};


/**
 * optional WriteGroupKafkaOptions kafka = 100;
 * @return {?proto.protos.opts.WriteGroupKafkaOptions}
 */
proto.protos.opts.WriteOptions.prototype.getKafka = function() {
  return /** @type{?proto.protos.opts.WriteGroupKafkaOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupKafkaOptions, 100));
};


/**
 * @param {?proto.protos.opts.WriteGroupKafkaOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setKafka = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional WriteGroupActiveMQOptions activemq = 101;
 * @return {?proto.protos.opts.WriteGroupActiveMQOptions}
 */
proto.protos.opts.WriteOptions.prototype.getActivemq = function() {
  return /** @type{?proto.protos.opts.WriteGroupActiveMQOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupActiveMQOptions, 101));
};


/**
 * @param {?proto.protos.opts.WriteGroupActiveMQOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setActivemq = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearActivemq = function() {
  return this.setActivemq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasActivemq = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional WriteGroupAWSSQSOptions awssqs = 102;
 * @return {?proto.protos.opts.WriteGroupAWSSQSOptions}
 */
proto.protos.opts.WriteOptions.prototype.getAwssqs = function() {
  return /** @type{?proto.protos.opts.WriteGroupAWSSQSOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupAWSSQSOptions, 102));
};


/**
 * @param {?proto.protos.opts.WriteGroupAWSSQSOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setAwssqs = function(value) {
  return jspb.Message.setWrapperField(this, 102, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearAwssqs = function() {
  return this.setAwssqs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasAwssqs = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional WriteGroupAWSSNSOptions awssns = 103;
 * @return {?proto.protos.opts.WriteGroupAWSSNSOptions}
 */
proto.protos.opts.WriteOptions.prototype.getAwssns = function() {
  return /** @type{?proto.protos.opts.WriteGroupAWSSNSOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupAWSSNSOptions, 103));
};


/**
 * @param {?proto.protos.opts.WriteGroupAWSSNSOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setAwssns = function(value) {
  return jspb.Message.setWrapperField(this, 103, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearAwssns = function() {
  return this.setAwssns(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasAwssns = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional WriteGroupNatsOptions nats = 104;
 * @return {?proto.protos.opts.WriteGroupNatsOptions}
 */
proto.protos.opts.WriteOptions.prototype.getNats = function() {
  return /** @type{?proto.protos.opts.WriteGroupNatsOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupNatsOptions, 104));
};


/**
 * @param {?proto.protos.opts.WriteGroupNatsOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setNats = function(value) {
  return jspb.Message.setWrapperField(this, 104, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearNats = function() {
  return this.setNats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasNats = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional WriteGroupNatsStreamingOptions nats_streaming = 105;
 * @return {?proto.protos.opts.WriteGroupNatsStreamingOptions}
 */
proto.protos.opts.WriteOptions.prototype.getNatsStreaming = function() {
  return /** @type{?proto.protos.opts.WriteGroupNatsStreamingOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupNatsStreamingOptions, 105));
};


/**
 * @param {?proto.protos.opts.WriteGroupNatsStreamingOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setNatsStreaming = function(value) {
  return jspb.Message.setWrapperField(this, 105, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearNatsStreaming = function() {
  return this.setNatsStreaming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasNatsStreaming = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional WriteGroupNSQOptions nsq = 106;
 * @return {?proto.protos.opts.WriteGroupNSQOptions}
 */
proto.protos.opts.WriteOptions.prototype.getNsq = function() {
  return /** @type{?proto.protos.opts.WriteGroupNSQOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupNSQOptions, 106));
};


/**
 * @param {?proto.protos.opts.WriteGroupNSQOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setNsq = function(value) {
  return jspb.Message.setWrapperField(this, 106, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearNsq = function() {
  return this.setNsq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasNsq = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional WriteGroupPulsarOptions pulsar = 107;
 * @return {?proto.protos.opts.WriteGroupPulsarOptions}
 */
proto.protos.opts.WriteOptions.prototype.getPulsar = function() {
  return /** @type{?proto.protos.opts.WriteGroupPulsarOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupPulsarOptions, 107));
};


/**
 * @param {?proto.protos.opts.WriteGroupPulsarOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setPulsar = function(value) {
  return jspb.Message.setWrapperField(this, 107, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearPulsar = function() {
  return this.setPulsar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasPulsar = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional WriteGroupRabbitOptions rabbit = 108;
 * @return {?proto.protos.opts.WriteGroupRabbitOptions}
 */
proto.protos.opts.WriteOptions.prototype.getRabbit = function() {
  return /** @type{?proto.protos.opts.WriteGroupRabbitOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupRabbitOptions, 108));
};


/**
 * @param {?proto.protos.opts.WriteGroupRabbitOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setRabbit = function(value) {
  return jspb.Message.setWrapperField(this, 108, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearRabbit = function() {
  return this.setRabbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasRabbit = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional WriteGroupRabbitStreamsOptions rabbit_streams = 109;
 * @return {?proto.protos.opts.WriteGroupRabbitStreamsOptions}
 */
proto.protos.opts.WriteOptions.prototype.getRabbitStreams = function() {
  return /** @type{?proto.protos.opts.WriteGroupRabbitStreamsOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupRabbitStreamsOptions, 109));
};


/**
 * @param {?proto.protos.opts.WriteGroupRabbitStreamsOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setRabbitStreams = function(value) {
  return jspb.Message.setWrapperField(this, 109, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearRabbitStreams = function() {
  return this.setRabbitStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasRabbitStreams = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional WriteGroupMQTTOptions mqtt = 110;
 * @return {?proto.protos.opts.WriteGroupMQTTOptions}
 */
proto.protos.opts.WriteOptions.prototype.getMqtt = function() {
  return /** @type{?proto.protos.opts.WriteGroupMQTTOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupMQTTOptions, 110));
};


/**
 * @param {?proto.protos.opts.WriteGroupMQTTOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setMqtt = function(value) {
  return jspb.Message.setWrapperField(this, 110, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearMqtt = function() {
  return this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional WriteGroupAzureServiceBusOptions azure_service_bus = 111;
 * @return {?proto.protos.opts.WriteGroupAzureServiceBusOptions}
 */
proto.protos.opts.WriteOptions.prototype.getAzureServiceBus = function() {
  return /** @type{?proto.protos.opts.WriteGroupAzureServiceBusOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupAzureServiceBusOptions, 111));
};


/**
 * @param {?proto.protos.opts.WriteGroupAzureServiceBusOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setAzureServiceBus = function(value) {
  return jspb.Message.setWrapperField(this, 111, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearAzureServiceBus = function() {
  return this.setAzureServiceBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasAzureServiceBus = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional WriteGroupAzureEventHubOptions azure_event_hub = 112;
 * @return {?proto.protos.opts.WriteGroupAzureEventHubOptions}
 */
proto.protos.opts.WriteOptions.prototype.getAzureEventHub = function() {
  return /** @type{?proto.protos.opts.WriteGroupAzureEventHubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupAzureEventHubOptions, 112));
};


/**
 * @param {?proto.protos.opts.WriteGroupAzureEventHubOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setAzureEventHub = function(value) {
  return jspb.Message.setWrapperField(this, 112, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearAzureEventHub = function() {
  return this.setAzureEventHub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasAzureEventHub = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional WriteGroupGCPPubSubOptions gcp_pubsub = 113;
 * @return {?proto.protos.opts.WriteGroupGCPPubSubOptions}
 */
proto.protos.opts.WriteOptions.prototype.getGcpPubsub = function() {
  return /** @type{?proto.protos.opts.WriteGroupGCPPubSubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupGCPPubSubOptions, 113));
};


/**
 * @param {?proto.protos.opts.WriteGroupGCPPubSubOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setGcpPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 113, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearGcpPubsub = function() {
  return this.setGcpPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasGcpPubsub = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional WriteGroupKubeMQQueueOptions kubemq_queue = 114;
 * @return {?proto.protos.opts.WriteGroupKubeMQQueueOptions}
 */
proto.protos.opts.WriteOptions.prototype.getKubemqQueue = function() {
  return /** @type{?proto.protos.opts.WriteGroupKubeMQQueueOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupKubeMQQueueOptions, 114));
};


/**
 * @param {?proto.protos.opts.WriteGroupKubeMQQueueOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setKubemqQueue = function(value) {
  return jspb.Message.setWrapperField(this, 114, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearKubemqQueue = function() {
  return this.setKubemqQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasKubemqQueue = function() {
  return jspb.Message.getField(this, 114) != null;
};


/**
 * optional WriteGroupRedisPubSubOptions redis_pubsub = 115;
 * @return {?proto.protos.opts.WriteGroupRedisPubSubOptions}
 */
proto.protos.opts.WriteOptions.prototype.getRedisPubsub = function() {
  return /** @type{?proto.protos.opts.WriteGroupRedisPubSubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupRedisPubSubOptions, 115));
};


/**
 * @param {?proto.protos.opts.WriteGroupRedisPubSubOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setRedisPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 115, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearRedisPubsub = function() {
  return this.setRedisPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasRedisPubsub = function() {
  return jspb.Message.getField(this, 115) != null;
};


/**
 * optional WriteGroupRedisStreamsOptions redis_streams = 116;
 * @return {?proto.protos.opts.WriteGroupRedisStreamsOptions}
 */
proto.protos.opts.WriteOptions.prototype.getRedisStreams = function() {
  return /** @type{?proto.protos.opts.WriteGroupRedisStreamsOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.WriteGroupRedisStreamsOptions, 116));
};


/**
 * @param {?proto.protos.opts.WriteGroupRedisStreamsOptions|undefined} value
 * @return {!proto.protos.opts.WriteOptions} returns this
*/
proto.protos.opts.WriteOptions.prototype.setRedisStreams = function(value) {
  return jspb.Message.setWrapperField(this, 116, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteOptions} returns this
 */
proto.protos.opts.WriteOptions.prototype.clearRedisStreams = function() {
  return this.setRedisStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteOptions.prototype.hasRedisStreams = function() {
  return jspb.Message.getField(this, 116) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupKafkaOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupKafkaOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupKafkaOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupKafkaOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kafka_pb.KafkaConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kafka_pb.KafkaWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupKafkaOptions}
 */
proto.protos.opts.WriteGroupKafkaOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupKafkaOptions;
  return proto.protos.opts.WriteGroupKafkaOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupKafkaOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupKafkaOptions}
 */
proto.protos.opts.WriteGroupKafkaOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kafka_pb.KafkaConn;
      reader.readMessage(value,args_kafka_pb.KafkaConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kafka_pb.KafkaWriteArgs;
      reader.readMessage(value,args_kafka_pb.KafkaWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupKafkaOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupKafkaOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupKafkaOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupKafkaOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kafka_pb.KafkaConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kafka_pb.KafkaWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.KafkaConn _conn = 1;
 * @return {?proto.protos.args.KafkaConn}
 */
proto.protos.opts.WriteGroupKafkaOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KafkaConn} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaConn, 1));
};


/**
 * @param {?proto.protos.args.KafkaConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupKafkaOptions} returns this
*/
proto.protos.opts.WriteGroupKafkaOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupKafkaOptions} returns this
 */
proto.protos.opts.WriteGroupKafkaOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupKafkaOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.KafkaWriteArgs args = 2;
 * @return {?proto.protos.args.KafkaWriteArgs}
 */
proto.protos.opts.WriteGroupKafkaOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KafkaWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.KafkaWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupKafkaOptions} returns this
*/
proto.protos.opts.WriteGroupKafkaOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupKafkaOptions} returns this
 */
proto.protos.opts.WriteGroupKafkaOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupKafkaOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupActiveMQOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupActiveMQOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupActiveMQOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupActiveMQOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_activemq_pb.ActiveMQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_activemq_pb.ActiveMQWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupActiveMQOptions}
 */
proto.protos.opts.WriteGroupActiveMQOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupActiveMQOptions;
  return proto.protos.opts.WriteGroupActiveMQOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupActiveMQOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupActiveMQOptions}
 */
proto.protos.opts.WriteGroupActiveMQOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_activemq_pb.ActiveMQConn;
      reader.readMessage(value,args_activemq_pb.ActiveMQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_activemq_pb.ActiveMQWriteArgs;
      reader.readMessage(value,args_activemq_pb.ActiveMQWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupActiveMQOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupActiveMQOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupActiveMQOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupActiveMQOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_activemq_pb.ActiveMQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_activemq_pb.ActiveMQWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.ActiveMQConn _conn = 1;
 * @return {?proto.protos.args.ActiveMQConn}
 */
proto.protos.opts.WriteGroupActiveMQOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.ActiveMQConn} */ (
    jspb.Message.getWrapperField(this, args_activemq_pb.ActiveMQConn, 1));
};


/**
 * @param {?proto.protos.args.ActiveMQConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupActiveMQOptions} returns this
*/
proto.protos.opts.WriteGroupActiveMQOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupActiveMQOptions} returns this
 */
proto.protos.opts.WriteGroupActiveMQOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupActiveMQOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.ActiveMQWriteArgs args = 2;
 * @return {?proto.protos.args.ActiveMQWriteArgs}
 */
proto.protos.opts.WriteGroupActiveMQOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.ActiveMQWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_activemq_pb.ActiveMQWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.ActiveMQWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupActiveMQOptions} returns this
*/
proto.protos.opts.WriteGroupActiveMQOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupActiveMQOptions} returns this
 */
proto.protos.opts.WriteGroupActiveMQOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupActiveMQOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupAWSSQSOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupAWSSQSOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupAWSSQSOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_aws$sqs_pb.AWSSQSConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_aws$sqs_pb.AWSSQSWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupAWSSQSOptions}
 */
proto.protos.opts.WriteGroupAWSSQSOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupAWSSQSOptions;
  return proto.protos.opts.WriteGroupAWSSQSOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupAWSSQSOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupAWSSQSOptions}
 */
proto.protos.opts.WriteGroupAWSSQSOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_aws$sqs_pb.AWSSQSConn;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_aws$sqs_pb.AWSSQSWriteArgs;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupAWSSQSOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupAWSSQSOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupAWSSQSOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_aws$sqs_pb.AWSSQSConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_aws$sqs_pb.AWSSQSWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AWSSQSConn _conn = 1;
 * @return {?proto.protos.args.AWSSQSConn}
 */
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AWSSQSConn} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSConn, 1));
};


/**
 * @param {?proto.protos.args.AWSSQSConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupAWSSQSOptions} returns this
*/
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupAWSSQSOptions} returns this
 */
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AWSSQSWriteArgs args = 2;
 * @return {?proto.protos.args.AWSSQSWriteArgs}
 */
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AWSSQSWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.AWSSQSWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupAWSSQSOptions} returns this
*/
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupAWSSQSOptions} returns this
 */
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupAWSSQSOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupAWSSNSOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupAWSSNSOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupAWSSNSOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_aws$sns_pb.AWSSNSConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_aws$sns_pb.AWSSNSWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupAWSSNSOptions}
 */
proto.protos.opts.WriteGroupAWSSNSOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupAWSSNSOptions;
  return proto.protos.opts.WriteGroupAWSSNSOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupAWSSNSOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupAWSSNSOptions}
 */
proto.protos.opts.WriteGroupAWSSNSOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_aws$sns_pb.AWSSNSConn;
      reader.readMessage(value,args_aws$sns_pb.AWSSNSConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_aws$sns_pb.AWSSNSWriteArgs;
      reader.readMessage(value,args_aws$sns_pb.AWSSNSWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupAWSSNSOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupAWSSNSOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupAWSSNSOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_aws$sns_pb.AWSSNSConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_aws$sns_pb.AWSSNSWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AWSSNSConn _conn = 1;
 * @return {?proto.protos.args.AWSSNSConn}
 */
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AWSSNSConn} */ (
    jspb.Message.getWrapperField(this, args_aws$sns_pb.AWSSNSConn, 1));
};


/**
 * @param {?proto.protos.args.AWSSNSConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupAWSSNSOptions} returns this
*/
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupAWSSNSOptions} returns this
 */
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AWSSNSWriteArgs args = 2;
 * @return {?proto.protos.args.AWSSNSWriteArgs}
 */
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AWSSNSWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_aws$sns_pb.AWSSNSWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.AWSSNSWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupAWSSNSOptions} returns this
*/
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupAWSSNSOptions} returns this
 */
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupAWSSNSOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupNatsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupNatsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupNatsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupNatsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nats_pb.NatsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nats_pb.NatsWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupNatsOptions}
 */
proto.protos.opts.WriteGroupNatsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupNatsOptions;
  return proto.protos.opts.WriteGroupNatsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupNatsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupNatsOptions}
 */
proto.protos.opts.WriteGroupNatsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nats_pb.NatsConn;
      reader.readMessage(value,args_nats_pb.NatsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nats_pb.NatsWriteArgs;
      reader.readMessage(value,args_nats_pb.NatsWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupNatsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupNatsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupNatsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupNatsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nats_pb.NatsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nats_pb.NatsWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NatsConn _conn = 1;
 * @return {?proto.protos.args.NatsConn}
 */
proto.protos.opts.WriteGroupNatsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NatsConn} */ (
    jspb.Message.getWrapperField(this, args_nats_pb.NatsConn, 1));
};


/**
 * @param {?proto.protos.args.NatsConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupNatsOptions} returns this
*/
proto.protos.opts.WriteGroupNatsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupNatsOptions} returns this
 */
proto.protos.opts.WriteGroupNatsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupNatsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NatsWriteArgs args = 2;
 * @return {?proto.protos.args.NatsWriteArgs}
 */
proto.protos.opts.WriteGroupNatsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NatsWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_nats_pb.NatsWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.NatsWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupNatsOptions} returns this
*/
proto.protos.opts.WriteGroupNatsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupNatsOptions} returns this
 */
proto.protos.opts.WriteGroupNatsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupNatsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupNatsStreamingOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupNatsStreamingOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nats$streaming_pb.NatsStreamingConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nats$streaming_pb.NatsStreamingWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupNatsStreamingOptions}
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupNatsStreamingOptions;
  return proto.protos.opts.WriteGroupNatsStreamingOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupNatsStreamingOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupNatsStreamingOptions}
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nats$streaming_pb.NatsStreamingConn;
      reader.readMessage(value,args_nats$streaming_pb.NatsStreamingConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nats$streaming_pb.NatsStreamingWriteArgs;
      reader.readMessage(value,args_nats$streaming_pb.NatsStreamingWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupNatsStreamingOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupNatsStreamingOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nats$streaming_pb.NatsStreamingConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nats$streaming_pb.NatsStreamingWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NatsStreamingConn _conn = 1;
 * @return {?proto.protos.args.NatsStreamingConn}
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NatsStreamingConn} */ (
    jspb.Message.getWrapperField(this, args_nats$streaming_pb.NatsStreamingConn, 1));
};


/**
 * @param {?proto.protos.args.NatsStreamingConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupNatsStreamingOptions} returns this
*/
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupNatsStreamingOptions} returns this
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NatsStreamingWriteArgs args = 2;
 * @return {?proto.protos.args.NatsStreamingWriteArgs}
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NatsStreamingWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_nats$streaming_pb.NatsStreamingWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.NatsStreamingWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupNatsStreamingOptions} returns this
*/
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupNatsStreamingOptions} returns this
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupNatsStreamingOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupNSQOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupNSQOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupNSQOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupNSQOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nsq_pb.NSQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nsq_pb.NSQWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupNSQOptions}
 */
proto.protos.opts.WriteGroupNSQOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupNSQOptions;
  return proto.protos.opts.WriteGroupNSQOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupNSQOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupNSQOptions}
 */
proto.protos.opts.WriteGroupNSQOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nsq_pb.NSQConn;
      reader.readMessage(value,args_nsq_pb.NSQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nsq_pb.NSQWriteArgs;
      reader.readMessage(value,args_nsq_pb.NSQWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupNSQOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupNSQOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupNSQOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupNSQOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nsq_pb.NSQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nsq_pb.NSQWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NSQConn _conn = 1;
 * @return {?proto.protos.args.NSQConn}
 */
proto.protos.opts.WriteGroupNSQOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NSQConn} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQConn, 1));
};


/**
 * @param {?proto.protos.args.NSQConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupNSQOptions} returns this
*/
proto.protos.opts.WriteGroupNSQOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupNSQOptions} returns this
 */
proto.protos.opts.WriteGroupNSQOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupNSQOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NSQWriteArgs args = 2;
 * @return {?proto.protos.args.NSQWriteArgs}
 */
proto.protos.opts.WriteGroupNSQOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NSQWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.NSQWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupNSQOptions} returns this
*/
proto.protos.opts.WriteGroupNSQOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupNSQOptions} returns this
 */
proto.protos.opts.WriteGroupNSQOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupNSQOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupPulsarOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupPulsarOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupPulsarOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupPulsarOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_pulsar_pb.PulsarConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_pulsar_pb.PulsarWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupPulsarOptions}
 */
proto.protos.opts.WriteGroupPulsarOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupPulsarOptions;
  return proto.protos.opts.WriteGroupPulsarOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupPulsarOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupPulsarOptions}
 */
proto.protos.opts.WriteGroupPulsarOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_pulsar_pb.PulsarConn;
      reader.readMessage(value,args_pulsar_pb.PulsarConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_pulsar_pb.PulsarWriteArgs;
      reader.readMessage(value,args_pulsar_pb.PulsarWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupPulsarOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupPulsarOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupPulsarOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupPulsarOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_pulsar_pb.PulsarConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_pulsar_pb.PulsarWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.PulsarConn _conn = 1;
 * @return {?proto.protos.args.PulsarConn}
 */
proto.protos.opts.WriteGroupPulsarOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.PulsarConn} */ (
    jspb.Message.getWrapperField(this, args_pulsar_pb.PulsarConn, 1));
};


/**
 * @param {?proto.protos.args.PulsarConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupPulsarOptions} returns this
*/
proto.protos.opts.WriteGroupPulsarOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupPulsarOptions} returns this
 */
proto.protos.opts.WriteGroupPulsarOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupPulsarOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.PulsarWriteArgs args = 2;
 * @return {?proto.protos.args.PulsarWriteArgs}
 */
proto.protos.opts.WriteGroupPulsarOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.PulsarWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_pulsar_pb.PulsarWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.PulsarWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupPulsarOptions} returns this
*/
proto.protos.opts.WriteGroupPulsarOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupPulsarOptions} returns this
 */
proto.protos.opts.WriteGroupPulsarOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupPulsarOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupRabbitOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupRabbitOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupRabbitOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupRabbitOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit_pb.RabbitConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit_pb.RabbitWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupRabbitOptions}
 */
proto.protos.opts.WriteGroupRabbitOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupRabbitOptions;
  return proto.protos.opts.WriteGroupRabbitOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupRabbitOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupRabbitOptions}
 */
proto.protos.opts.WriteGroupRabbitOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit_pb.RabbitConn;
      reader.readMessage(value,args_rabbit_pb.RabbitConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit_pb.RabbitWriteArgs;
      reader.readMessage(value,args_rabbit_pb.RabbitWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupRabbitOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupRabbitOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupRabbitOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupRabbitOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit_pb.RabbitConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit_pb.RabbitWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RabbitConn _conn = 1;
 * @return {?proto.protos.args.RabbitConn}
 */
proto.protos.opts.WriteGroupRabbitOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupRabbitOptions} returns this
*/
proto.protos.opts.WriteGroupRabbitOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupRabbitOptions} returns this
 */
proto.protos.opts.WriteGroupRabbitOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupRabbitOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RabbitWriteArgs args = 2;
 * @return {?proto.protos.args.RabbitWriteArgs}
 */
proto.protos.opts.WriteGroupRabbitOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.RabbitWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupRabbitOptions} returns this
*/
proto.protos.opts.WriteGroupRabbitOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupRabbitOptions} returns this
 */
proto.protos.opts.WriteGroupRabbitOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupRabbitOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupRabbitStreamsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupRabbitStreamsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit$streams_pb.RabbitStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit$streams_pb.RabbitStreamsWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupRabbitStreamsOptions}
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupRabbitStreamsOptions;
  return proto.protos.opts.WriteGroupRabbitStreamsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupRabbitStreamsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupRabbitStreamsOptions}
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit$streams_pb.RabbitStreamsConn;
      reader.readMessage(value,args_rabbit$streams_pb.RabbitStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit$streams_pb.RabbitStreamsWriteArgs;
      reader.readMessage(value,args_rabbit$streams_pb.RabbitStreamsWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupRabbitStreamsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupRabbitStreamsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit$streams_pb.RabbitStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit$streams_pb.RabbitStreamsWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RabbitStreamsConn _conn = 1;
 * @return {?proto.protos.args.RabbitStreamsConn}
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit$streams_pb.RabbitStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitStreamsConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupRabbitStreamsOptions} returns this
*/
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupRabbitStreamsOptions} returns this
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RabbitStreamsWriteArgs args = 2;
 * @return {?proto.protos.args.RabbitStreamsWriteArgs}
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitStreamsWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_rabbit$streams_pb.RabbitStreamsWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.RabbitStreamsWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupRabbitStreamsOptions} returns this
*/
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupRabbitStreamsOptions} returns this
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupRabbitStreamsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupRedisPubSubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupRedisPubSubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$pubsub_pb.RedisPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$pubsub_pb.RedisPubSubWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupRedisPubSubOptions}
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupRedisPubSubOptions;
  return proto.protos.opts.WriteGroupRedisPubSubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupRedisPubSubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupRedisPubSubOptions}
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$pubsub_pb.RedisPubSubConn;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$pubsub_pb.RedisPubSubWriteArgs;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupRedisPubSubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupRedisPubSubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$pubsub_pb.RedisPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$pubsub_pb.RedisPubSubWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RedisPubSubConn _conn = 1;
 * @return {?proto.protos.args.RedisPubSubConn}
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.RedisPubSubConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupRedisPubSubOptions} returns this
*/
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupRedisPubSubOptions} returns this
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RedisPubSubWriteArgs args = 2;
 * @return {?proto.protos.args.RedisPubSubWriteArgs}
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisPubSubWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.RedisPubSubWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupRedisPubSubOptions} returns this
*/
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupRedisPubSubOptions} returns this
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupRedisPubSubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupRedisStreamsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupRedisStreamsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$streams_pb.RedisStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$streams_pb.RedisStreamsWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupRedisStreamsOptions}
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupRedisStreamsOptions;
  return proto.protos.opts.WriteGroupRedisStreamsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupRedisStreamsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupRedisStreamsOptions}
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$streams_pb.RedisStreamsConn;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$streams_pb.RedisStreamsWriteArgs;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupRedisStreamsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupRedisStreamsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$streams_pb.RedisStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$streams_pb.RedisStreamsWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RedisStreamsConn _conn = 1;
 * @return {?proto.protos.args.RedisStreamsConn}
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RedisStreamsConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupRedisStreamsOptions} returns this
*/
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupRedisStreamsOptions} returns this
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RedisStreamsWriteArgs args = 2;
 * @return {?proto.protos.args.RedisStreamsWriteArgs}
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisStreamsWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.RedisStreamsWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupRedisStreamsOptions} returns this
*/
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupRedisStreamsOptions} returns this
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupRedisStreamsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupAzureEventHubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupAzureEventHubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$event$hub_pb.AzureEventHubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$event$hub_pb.AzureEventHubWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupAzureEventHubOptions}
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupAzureEventHubOptions;
  return proto.protos.opts.WriteGroupAzureEventHubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupAzureEventHubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupAzureEventHubOptions}
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$event$hub_pb.AzureEventHubConn;
      reader.readMessage(value,args_azure$event$hub_pb.AzureEventHubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$event$hub_pb.AzureEventHubWriteArgs;
      reader.readMessage(value,args_azure$event$hub_pb.AzureEventHubWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupAzureEventHubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupAzureEventHubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$event$hub_pb.AzureEventHubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$event$hub_pb.AzureEventHubWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AzureEventHubConn _conn = 1;
 * @return {?proto.protos.args.AzureEventHubConn}
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureEventHubConn} */ (
    jspb.Message.getWrapperField(this, args_azure$event$hub_pb.AzureEventHubConn, 1));
};


/**
 * @param {?proto.protos.args.AzureEventHubConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupAzureEventHubOptions} returns this
*/
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupAzureEventHubOptions} returns this
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AzureEventHubWriteArgs args = 2;
 * @return {?proto.protos.args.AzureEventHubWriteArgs}
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureEventHubWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_azure$event$hub_pb.AzureEventHubWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.AzureEventHubWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupAzureEventHubOptions} returns this
*/
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupAzureEventHubOptions} returns this
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupAzureEventHubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupAzureServiceBusOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupAzureServiceBusOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$service$bus_pb.AzureServiceBusConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$service$bus_pb.AzureServiceBusWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupAzureServiceBusOptions}
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupAzureServiceBusOptions;
  return proto.protos.opts.WriteGroupAzureServiceBusOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupAzureServiceBusOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupAzureServiceBusOptions}
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$service$bus_pb.AzureServiceBusConn;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$service$bus_pb.AzureServiceBusWriteArgs;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupAzureServiceBusOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupAzureServiceBusOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$service$bus_pb.AzureServiceBusConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$service$bus_pb.AzureServiceBusWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AzureServiceBusConn _conn = 1;
 * @return {?proto.protos.args.AzureServiceBusConn}
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureServiceBusConn} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusConn, 1));
};


/**
 * @param {?proto.protos.args.AzureServiceBusConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupAzureServiceBusOptions} returns this
*/
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupAzureServiceBusOptions} returns this
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AzureServiceBusWriteArgs args = 2;
 * @return {?proto.protos.args.AzureServiceBusWriteArgs}
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureServiceBusWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.AzureServiceBusWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupAzureServiceBusOptions} returns this
*/
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupAzureServiceBusOptions} returns this
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupAzureServiceBusOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupMQTTOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupMQTTOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupMQTTOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupMQTTOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_mqtt_pb.MQTTConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_mqtt_pb.MQTTWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupMQTTOptions}
 */
proto.protos.opts.WriteGroupMQTTOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupMQTTOptions;
  return proto.protos.opts.WriteGroupMQTTOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupMQTTOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupMQTTOptions}
 */
proto.protos.opts.WriteGroupMQTTOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_mqtt_pb.MQTTConn;
      reader.readMessage(value,args_mqtt_pb.MQTTConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_mqtt_pb.MQTTWriteArgs;
      reader.readMessage(value,args_mqtt_pb.MQTTWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupMQTTOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupMQTTOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupMQTTOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupMQTTOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_mqtt_pb.MQTTConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_mqtt_pb.MQTTWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.MQTTConn _conn = 1;
 * @return {?proto.protos.args.MQTTConn}
 */
proto.protos.opts.WriteGroupMQTTOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.MQTTConn} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTConn, 1));
};


/**
 * @param {?proto.protos.args.MQTTConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupMQTTOptions} returns this
*/
proto.protos.opts.WriteGroupMQTTOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupMQTTOptions} returns this
 */
proto.protos.opts.WriteGroupMQTTOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupMQTTOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.MQTTWriteArgs args = 2;
 * @return {?proto.protos.args.MQTTWriteArgs}
 */
proto.protos.opts.WriteGroupMQTTOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.MQTTWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.MQTTWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupMQTTOptions} returns this
*/
proto.protos.opts.WriteGroupMQTTOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupMQTTOptions} returns this
 */
proto.protos.opts.WriteGroupMQTTOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupMQTTOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupGCPPubSubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupGCPPubSubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_gcp$pubsub_pb.GCPPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_gcp$pubsub_pb.GCPPubSubWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupGCPPubSubOptions}
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupGCPPubSubOptions;
  return proto.protos.opts.WriteGroupGCPPubSubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupGCPPubSubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupGCPPubSubOptions}
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_gcp$pubsub_pb.GCPPubSubConn;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_gcp$pubsub_pb.GCPPubSubWriteArgs;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupGCPPubSubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupGCPPubSubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_gcp$pubsub_pb.GCPPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_gcp$pubsub_pb.GCPPubSubWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.GCPPubSubConn _conn = 1;
 * @return {?proto.protos.args.GCPPubSubConn}
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.GCPPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.GCPPubSubConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupGCPPubSubOptions} returns this
*/
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupGCPPubSubOptions} returns this
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.GCPPubSubWriteArgs args = 2;
 * @return {?proto.protos.args.GCPPubSubWriteArgs}
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.GCPPubSubWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.GCPPubSubWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupGCPPubSubOptions} returns this
*/
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupGCPPubSubOptions} returns this
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupGCPPubSubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.WriteGroupKubeMQQueueOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.WriteGroupKubeMQQueueOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kubemq$queue_pb.KubeMQQueueConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kubemq$queue_pb.KubeMQQueueWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.WriteGroupKubeMQQueueOptions}
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.WriteGroupKubeMQQueueOptions;
  return proto.protos.opts.WriteGroupKubeMQQueueOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.WriteGroupKubeMQQueueOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.WriteGroupKubeMQQueueOptions}
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kubemq$queue_pb.KubeMQQueueConn;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kubemq$queue_pb.KubeMQQueueWriteArgs;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.WriteGroupKubeMQQueueOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.WriteGroupKubeMQQueueOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kubemq$queue_pb.KubeMQQueueConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kubemq$queue_pb.KubeMQQueueWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.KubeMQQueueConn _conn = 1;
 * @return {?proto.protos.args.KubeMQQueueConn}
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KubeMQQueueConn} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueConn, 1));
};


/**
 * @param {?proto.protos.args.KubeMQQueueConn|undefined} value
 * @return {!proto.protos.opts.WriteGroupKubeMQQueueOptions} returns this
*/
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupKubeMQQueueOptions} returns this
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.KubeMQQueueWriteArgs args = 2;
 * @return {?proto.protos.args.KubeMQQueueWriteArgs}
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KubeMQQueueWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.KubeMQQueueWriteArgs|undefined} value
 * @return {!proto.protos.opts.WriteGroupKubeMQQueueOptions} returns this
*/
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.WriteGroupKubeMQQueueOptions} returns this
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.WriteGroupKubeMQQueueOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.protos.opts);
