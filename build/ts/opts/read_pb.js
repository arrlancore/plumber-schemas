// source: opts/read.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var encoding_options_pb = require('../encoding/options_pb.js');
goog.object.extend(proto, encoding_options_pb);
var args_activemq_pb = require('../args/activemq_pb.js');
goog.object.extend(proto, args_activemq_pb);
var args_azure$service$bus_pb = require('../args/azure-service-bus_pb.js');
goog.object.extend(proto, args_azure$service$bus_pb);
var args_azure$event$hub_pb = require('../args/azure-event-hub_pb.js');
goog.object.extend(proto, args_azure$event$hub_pb);
var args_aws$sqs_pb = require('../args/aws-sqs_pb.js');
goog.object.extend(proto, args_aws$sqs_pb);
var args_gcp$pubsub_pb = require('../args/gcp-pubsub_pb.js');
goog.object.extend(proto, args_gcp$pubsub_pb);
var args_kafka_pb = require('../args/kafka_pb.js');
goog.object.extend(proto, args_kafka_pb);
var args_kubemq$queue_pb = require('../args/kubemq-queue_pb.js');
goog.object.extend(proto, args_kubemq$queue_pb);
var args_mongo_pb = require('../args/mongo_pb.js');
goog.object.extend(proto, args_mongo_pb);
var args_mqtt_pb = require('../args/mqtt_pb.js');
goog.object.extend(proto, args_mqtt_pb);
var args_nats_pb = require('../args/nats_pb.js');
goog.object.extend(proto, args_nats_pb);
var args_nats$streaming_pb = require('../args/nats-streaming_pb.js');
goog.object.extend(proto, args_nats$streaming_pb);
var args_nsq_pb = require('../args/nsq_pb.js');
goog.object.extend(proto, args_nsq_pb);
var args_postgres_pb = require('../args/postgres_pb.js');
goog.object.extend(proto, args_postgres_pb);
var args_pulsar_pb = require('../args/pulsar_pb.js');
goog.object.extend(proto, args_pulsar_pb);
var args_rabbit_pb = require('../args/rabbit_pb.js');
goog.object.extend(proto, args_rabbit_pb);
var args_rabbit$streams_pb = require('../args/rabbit-streams_pb.js');
goog.object.extend(proto, args_rabbit$streams_pb);
var args_redis$pubsub_pb = require('../args/redis-pubsub_pb.js');
goog.object.extend(proto, args_redis$pubsub_pb);
var args_redis$streams_pb = require('../args/redis-streams_pb.js');
goog.object.extend(proto, args_redis$streams_pb);
goog.exportSymbol('proto.protos.opts.ConvertOption', null, global);
goog.exportSymbol('proto.protos.opts.ReadCLIOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupAWSSQSOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupActiveMQOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupAzureEventHubOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupAzureServiceBusOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupGCPPubSubOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupKafkaOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupKubeMQQueueOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupMQTTOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupMongoOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupNSQOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupNatsOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupNatsStreamingOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupPostgresOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupPulsarOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupRabbitOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupRabbitStreamsOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupRedisPubSubOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadGroupRedisStreamsOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadOptions', null, global);
goog.exportSymbol('proto.protos.opts.ReadSampleOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadCLIOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protos.opts.ReadCLIOptions.repeatedFields_, null);
};
goog.inherits(proto.protos.opts.ReadCLIOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadCLIOptions.displayName = 'proto.protos.opts.ReadCLIOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadSampleOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadSampleOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadSampleOptions.displayName = 'proto.protos.opts.ReadSampleOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.protos.opts.ReadOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadOptions.displayName = 'proto.protos.opts.ReadOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupKafkaOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupKafkaOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupKafkaOptions.displayName = 'proto.protos.opts.ReadGroupKafkaOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupActiveMQOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupActiveMQOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupActiveMQOptions.displayName = 'proto.protos.opts.ReadGroupActiveMQOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupAWSSQSOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupAWSSQSOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupAWSSQSOptions.displayName = 'proto.protos.opts.ReadGroupAWSSQSOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupMongoOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupMongoOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupMongoOptions.displayName = 'proto.protos.opts.ReadGroupMongoOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupNatsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupNatsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupNatsOptions.displayName = 'proto.protos.opts.ReadGroupNatsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupNatsStreamingOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupNatsStreamingOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupNatsStreamingOptions.displayName = 'proto.protos.opts.ReadGroupNatsStreamingOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupNSQOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupNSQOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupNSQOptions.displayName = 'proto.protos.opts.ReadGroupNSQOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupPostgresOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupPostgresOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupPostgresOptions.displayName = 'proto.protos.opts.ReadGroupPostgresOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupPulsarOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupPulsarOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupPulsarOptions.displayName = 'proto.protos.opts.ReadGroupPulsarOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupRabbitOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupRabbitOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupRabbitOptions.displayName = 'proto.protos.opts.ReadGroupRabbitOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupRabbitStreamsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupRabbitStreamsOptions.displayName = 'proto.protos.opts.ReadGroupRabbitStreamsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupRedisPubSubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupRedisPubSubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupRedisPubSubOptions.displayName = 'proto.protos.opts.ReadGroupRedisPubSubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupRedisStreamsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupRedisStreamsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupRedisStreamsOptions.displayName = 'proto.protos.opts.ReadGroupRedisStreamsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupAzureEventHubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupAzureEventHubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupAzureEventHubOptions.displayName = 'proto.protos.opts.ReadGroupAzureEventHubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupAzureServiceBusOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupAzureServiceBusOptions.displayName = 'proto.protos.opts.ReadGroupAzureServiceBusOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupMQTTOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupMQTTOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupMQTTOptions.displayName = 'proto.protos.opts.ReadGroupMQTTOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupGCPPubSubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupGCPPubSubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupGCPPubSubOptions.displayName = 'proto.protos.opts.ReadGroupGCPPubSubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.ReadGroupKubeMQQueueOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.ReadGroupKubeMQQueueOptions.displayName = 'proto.protos.opts.ReadGroupKubeMQQueueOptions';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protos.opts.ReadCLIOptions.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadCLIOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadCLIOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadCLIOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadCLIOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayOffsetStats: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    convertOutputList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    verboseOutput: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    statsEnable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    statsReportIntervalSec: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadCLIOptions}
 */
proto.protos.opts.ReadCLIOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadCLIOptions;
  return proto.protos.opts.ReadCLIOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadCLIOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadCLIOptions}
 */
proto.protos.opts.ReadCLIOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisplayOffsetStats(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.protos.opts.ConvertOption>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addConvertOutput(values[i]);
      }
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerboseOutput(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatsEnable(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatsReportIntervalSec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadCLIOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadCLIOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadCLIOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadCLIOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayOffsetStats();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getConvertOutputList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getVerboseOutput();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getStatsEnable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getStatsReportIntervalSec();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional bool display_offset_stats = 1;
 * @return {boolean}
 */
proto.protos.opts.ReadCLIOptions.prototype.getDisplayOffsetStats = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.opts.ReadCLIOptions} returns this
 */
proto.protos.opts.ReadCLIOptions.prototype.setDisplayOffsetStats = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated ConvertOption convert_output = 2;
 * @return {!Array<!proto.protos.opts.ConvertOption>}
 */
proto.protos.opts.ReadCLIOptions.prototype.getConvertOutputList = function() {
  return /** @type {!Array<!proto.protos.opts.ConvertOption>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.protos.opts.ConvertOption>} value
 * @return {!proto.protos.opts.ReadCLIOptions} returns this
 */
proto.protos.opts.ReadCLIOptions.prototype.setConvertOutputList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.protos.opts.ConvertOption} value
 * @param {number=} opt_index
 * @return {!proto.protos.opts.ReadCLIOptions} returns this
 */
proto.protos.opts.ReadCLIOptions.prototype.addConvertOutput = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protos.opts.ReadCLIOptions} returns this
 */
proto.protos.opts.ReadCLIOptions.prototype.clearConvertOutputList = function() {
  return this.setConvertOutputList([]);
};


/**
 * optional bool verbose_output = 3;
 * @return {boolean}
 */
proto.protos.opts.ReadCLIOptions.prototype.getVerboseOutput = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.opts.ReadCLIOptions} returns this
 */
proto.protos.opts.ReadCLIOptions.prototype.setVerboseOutput = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool stats_enable = 4;
 * @return {boolean}
 */
proto.protos.opts.ReadCLIOptions.prototype.getStatsEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.opts.ReadCLIOptions} returns this
 */
proto.protos.opts.ReadCLIOptions.prototype.setStatsEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional int32 stats_report_interval_sec = 5;
 * @return {number}
 */
proto.protos.opts.ReadCLIOptions.prototype.getStatsReportIntervalSec = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.opts.ReadCLIOptions} returns this
 */
proto.protos.opts.ReadCLIOptions.prototype.setStatsReportIntervalSec = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadSampleOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadSampleOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadSampleOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadSampleOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    sampleRate: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sampleIntervalSeconds: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadSampleOptions}
 */
proto.protos.opts.ReadSampleOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadSampleOptions;
  return proto.protos.opts.ReadSampleOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadSampleOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadSampleOptions}
 */
proto.protos.opts.ReadSampleOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSampleRate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSampleIntervalSeconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadSampleOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadSampleOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadSampleOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadSampleOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSampleRate();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSampleIntervalSeconds();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 sample_rate = 1;
 * @return {number}
 */
proto.protos.opts.ReadSampleOptions.prototype.getSampleRate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.opts.ReadSampleOptions} returns this
 */
proto.protos.opts.ReadSampleOptions.prototype.setSampleRate = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 sample_interval_seconds = 2;
 * @return {number}
 */
proto.protos.opts.ReadSampleOptions.prototype.getSampleIntervalSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.opts.ReadSampleOptions} returns this
 */
proto.protos.opts.ReadSampleOptions.prototype.setSampleIntervalSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connectionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    continuous: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    sampleOptions: (f = msg.getSampleOptions()) && proto.protos.opts.ReadSampleOptions.toObject(includeInstance, f),
    decodeOptions: (f = msg.getDecodeOptions()) && encoding_options_pb.DecodeOptions.toObject(includeInstance, f),
    id: jspb.Message.getFieldWithDefault(msg, 1000, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 1001, false),
    cliOptions: (f = msg.getCliOptions()) && proto.protos.opts.ReadCLIOptions.toObject(includeInstance, f),
    kafka: (f = msg.getKafka()) && proto.protos.opts.ReadGroupKafkaOptions.toObject(includeInstance, f),
    activemq: (f = msg.getActivemq()) && proto.protos.opts.ReadGroupActiveMQOptions.toObject(includeInstance, f),
    awssqs: (f = msg.getAwssqs()) && proto.protos.opts.ReadGroupAWSSQSOptions.toObject(includeInstance, f),
    mongo: (f = msg.getMongo()) && proto.protos.opts.ReadGroupMongoOptions.toObject(includeInstance, f),
    nats: (f = msg.getNats()) && proto.protos.opts.ReadGroupNatsOptions.toObject(includeInstance, f),
    natsStreaming: (f = msg.getNatsStreaming()) && proto.protos.opts.ReadGroupNatsStreamingOptions.toObject(includeInstance, f),
    nsq: (f = msg.getNsq()) && proto.protos.opts.ReadGroupNSQOptions.toObject(includeInstance, f),
    pulsar: (f = msg.getPulsar()) && proto.protos.opts.ReadGroupPulsarOptions.toObject(includeInstance, f),
    rabbit: (f = msg.getRabbit()) && proto.protos.opts.ReadGroupRabbitOptions.toObject(includeInstance, f),
    rabbitStreams: (f = msg.getRabbitStreams()) && proto.protos.opts.ReadGroupRabbitStreamsOptions.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && proto.protos.opts.ReadGroupMQTTOptions.toObject(includeInstance, f),
    azureServiceBus: (f = msg.getAzureServiceBus()) && proto.protos.opts.ReadGroupAzureServiceBusOptions.toObject(includeInstance, f),
    azureEventHub: (f = msg.getAzureEventHub()) && proto.protos.opts.ReadGroupAzureEventHubOptions.toObject(includeInstance, f),
    gcpPubsub: (f = msg.getGcpPubsub()) && proto.protos.opts.ReadGroupGCPPubSubOptions.toObject(includeInstance, f),
    kubemqQueue: (f = msg.getKubemqQueue()) && proto.protos.opts.ReadGroupKubeMQQueueOptions.toObject(includeInstance, f),
    redisPubsub: (f = msg.getRedisPubsub()) && proto.protos.opts.ReadGroupRedisPubSubOptions.toObject(includeInstance, f),
    redisStreams: (f = msg.getRedisStreams()) && proto.protos.opts.ReadGroupRedisStreamsOptions.toObject(includeInstance, f),
    postgres: (f = msg.getPostgres()) && proto.protos.opts.ReadGroupPostgresOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadOptions}
 */
proto.protos.opts.ReadOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadOptions;
  return proto.protos.opts.ReadOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadOptions}
 */
proto.protos.opts.ReadOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectionId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setContinuous(value);
      break;
    case 4:
      var value = new proto.protos.opts.ReadSampleOptions;
      reader.readMessage(value,proto.protos.opts.ReadSampleOptions.deserializeBinaryFromReader);
      msg.setSampleOptions(value);
      break;
    case 5:
      var value = new encoding_options_pb.DecodeOptions;
      reader.readMessage(value,encoding_options_pb.DecodeOptions.deserializeBinaryFromReader);
      msg.setDecodeOptions(value);
      break;
    case 1000:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 1001:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 1002:
      var value = new proto.protos.opts.ReadCLIOptions;
      reader.readMessage(value,proto.protos.opts.ReadCLIOptions.deserializeBinaryFromReader);
      msg.setCliOptions(value);
      break;
    case 100:
      var value = new proto.protos.opts.ReadGroupKafkaOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupKafkaOptions.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 101:
      var value = new proto.protos.opts.ReadGroupActiveMQOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupActiveMQOptions.deserializeBinaryFromReader);
      msg.setActivemq(value);
      break;
    case 102:
      var value = new proto.protos.opts.ReadGroupAWSSQSOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupAWSSQSOptions.deserializeBinaryFromReader);
      msg.setAwssqs(value);
      break;
    case 103:
      var value = new proto.protos.opts.ReadGroupMongoOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupMongoOptions.deserializeBinaryFromReader);
      msg.setMongo(value);
      break;
    case 104:
      var value = new proto.protos.opts.ReadGroupNatsOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupNatsOptions.deserializeBinaryFromReader);
      msg.setNats(value);
      break;
    case 105:
      var value = new proto.protos.opts.ReadGroupNatsStreamingOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupNatsStreamingOptions.deserializeBinaryFromReader);
      msg.setNatsStreaming(value);
      break;
    case 106:
      var value = new proto.protos.opts.ReadGroupNSQOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupNSQOptions.deserializeBinaryFromReader);
      msg.setNsq(value);
      break;
    case 107:
      var value = new proto.protos.opts.ReadGroupPulsarOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupPulsarOptions.deserializeBinaryFromReader);
      msg.setPulsar(value);
      break;
    case 108:
      var value = new proto.protos.opts.ReadGroupRabbitOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupRabbitOptions.deserializeBinaryFromReader);
      msg.setRabbit(value);
      break;
    case 109:
      var value = new proto.protos.opts.ReadGroupRabbitStreamsOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupRabbitStreamsOptions.deserializeBinaryFromReader);
      msg.setRabbitStreams(value);
      break;
    case 110:
      var value = new proto.protos.opts.ReadGroupMQTTOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupMQTTOptions.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    case 111:
      var value = new proto.protos.opts.ReadGroupAzureServiceBusOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupAzureServiceBusOptions.deserializeBinaryFromReader);
      msg.setAzureServiceBus(value);
      break;
    case 112:
      var value = new proto.protos.opts.ReadGroupAzureEventHubOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupAzureEventHubOptions.deserializeBinaryFromReader);
      msg.setAzureEventHub(value);
      break;
    case 113:
      var value = new proto.protos.opts.ReadGroupGCPPubSubOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupGCPPubSubOptions.deserializeBinaryFromReader);
      msg.setGcpPubsub(value);
      break;
    case 114:
      var value = new proto.protos.opts.ReadGroupKubeMQQueueOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupKubeMQQueueOptions.deserializeBinaryFromReader);
      msg.setKubemqQueue(value);
      break;
    case 115:
      var value = new proto.protos.opts.ReadGroupRedisPubSubOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupRedisPubSubOptions.deserializeBinaryFromReader);
      msg.setRedisPubsub(value);
      break;
    case 116:
      var value = new proto.protos.opts.ReadGroupRedisStreamsOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupRedisStreamsOptions.deserializeBinaryFromReader);
      msg.setRedisStreams(value);
      break;
    case 117:
      var value = new proto.protos.opts.ReadGroupPostgresOptions;
      reader.readMessage(value,proto.protos.opts.ReadGroupPostgresOptions.deserializeBinaryFromReader);
      msg.setPostgres(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContinuous();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSampleOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protos.opts.ReadSampleOptions.serializeBinaryToWriter
    );
  }
  f = message.getDecodeOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      encoding_options_pb.DecodeOptions.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1000,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      1001,
      f
    );
  }
  f = message.getCliOptions();
  if (f != null) {
    writer.writeMessage(
      1002,
      f,
      proto.protos.opts.ReadCLIOptions.serializeBinaryToWriter
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.protos.opts.ReadGroupKafkaOptions.serializeBinaryToWriter
    );
  }
  f = message.getActivemq();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.protos.opts.ReadGroupActiveMQOptions.serializeBinaryToWriter
    );
  }
  f = message.getAwssqs();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.protos.opts.ReadGroupAWSSQSOptions.serializeBinaryToWriter
    );
  }
  f = message.getMongo();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.protos.opts.ReadGroupMongoOptions.serializeBinaryToWriter
    );
  }
  f = message.getNats();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.protos.opts.ReadGroupNatsOptions.serializeBinaryToWriter
    );
  }
  f = message.getNatsStreaming();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      proto.protos.opts.ReadGroupNatsStreamingOptions.serializeBinaryToWriter
    );
  }
  f = message.getNsq();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      proto.protos.opts.ReadGroupNSQOptions.serializeBinaryToWriter
    );
  }
  f = message.getPulsar();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      proto.protos.opts.ReadGroupPulsarOptions.serializeBinaryToWriter
    );
  }
  f = message.getRabbit();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      proto.protos.opts.ReadGroupRabbitOptions.serializeBinaryToWriter
    );
  }
  f = message.getRabbitStreams();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      proto.protos.opts.ReadGroupRabbitStreamsOptions.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto.protos.opts.ReadGroupMQTTOptions.serializeBinaryToWriter
    );
  }
  f = message.getAzureServiceBus();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      proto.protos.opts.ReadGroupAzureServiceBusOptions.serializeBinaryToWriter
    );
  }
  f = message.getAzureEventHub();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto.protos.opts.ReadGroupAzureEventHubOptions.serializeBinaryToWriter
    );
  }
  f = message.getGcpPubsub();
  if (f != null) {
    writer.writeMessage(
      113,
      f,
      proto.protos.opts.ReadGroupGCPPubSubOptions.serializeBinaryToWriter
    );
  }
  f = message.getKubemqQueue();
  if (f != null) {
    writer.writeMessage(
      114,
      f,
      proto.protos.opts.ReadGroupKubeMQQueueOptions.serializeBinaryToWriter
    );
  }
  f = message.getRedisPubsub();
  if (f != null) {
    writer.writeMessage(
      115,
      f,
      proto.protos.opts.ReadGroupRedisPubSubOptions.serializeBinaryToWriter
    );
  }
  f = message.getRedisStreams();
  if (f != null) {
    writer.writeMessage(
      116,
      f,
      proto.protos.opts.ReadGroupRedisStreamsOptions.serializeBinaryToWriter
    );
  }
  f = message.getPostgres();
  if (f != null) {
    writer.writeMessage(
      117,
      f,
      proto.protos.opts.ReadGroupPostgresOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.protos.opts.ReadOptions.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string connection_id = 2;
 * @return {string}
 */
proto.protos.opts.ReadOptions.prototype.getConnectionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.setConnectionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool continuous = 3;
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.getContinuous = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.setContinuous = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional ReadSampleOptions sample_options = 4;
 * @return {?proto.protos.opts.ReadSampleOptions}
 */
proto.protos.opts.ReadOptions.prototype.getSampleOptions = function() {
  return /** @type{?proto.protos.opts.ReadSampleOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadSampleOptions, 4));
};


/**
 * @param {?proto.protos.opts.ReadSampleOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setSampleOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearSampleOptions = function() {
  return this.setSampleOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasSampleOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional protos.encoding.DecodeOptions decode_options = 5;
 * @return {?proto.protos.encoding.DecodeOptions}
 */
proto.protos.opts.ReadOptions.prototype.getDecodeOptions = function() {
  return /** @type{?proto.protos.encoding.DecodeOptions} */ (
    jspb.Message.getWrapperField(this, encoding_options_pb.DecodeOptions, 5));
};


/**
 * @param {?proto.protos.encoding.DecodeOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setDecodeOptions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearDecodeOptions = function() {
  return this.setDecodeOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasDecodeOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string _id = 1000;
 * @return {string}
 */
proto.protos.opts.ReadOptions.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1000, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1000, value);
};


/**
 * optional bool _active = 1001;
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1001, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1001, value);
};


/**
 * optional ReadCLIOptions _cli_options = 1002;
 * @return {?proto.protos.opts.ReadCLIOptions}
 */
proto.protos.opts.ReadOptions.prototype.getCliOptions = function() {
  return /** @type{?proto.protos.opts.ReadCLIOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadCLIOptions, 1002));
};


/**
 * @param {?proto.protos.opts.ReadCLIOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setCliOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1002, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearCliOptions = function() {
  return this.setCliOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasCliOptions = function() {
  return jspb.Message.getField(this, 1002) != null;
};


/**
 * optional ReadGroupKafkaOptions kafka = 100;
 * @return {?proto.protos.opts.ReadGroupKafkaOptions}
 */
proto.protos.opts.ReadOptions.prototype.getKafka = function() {
  return /** @type{?proto.protos.opts.ReadGroupKafkaOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupKafkaOptions, 100));
};


/**
 * @param {?proto.protos.opts.ReadGroupKafkaOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setKafka = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional ReadGroupActiveMQOptions activemq = 101;
 * @return {?proto.protos.opts.ReadGroupActiveMQOptions}
 */
proto.protos.opts.ReadOptions.prototype.getActivemq = function() {
  return /** @type{?proto.protos.opts.ReadGroupActiveMQOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupActiveMQOptions, 101));
};


/**
 * @param {?proto.protos.opts.ReadGroupActiveMQOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setActivemq = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearActivemq = function() {
  return this.setActivemq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasActivemq = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional ReadGroupAWSSQSOptions awssqs = 102;
 * @return {?proto.protos.opts.ReadGroupAWSSQSOptions}
 */
proto.protos.opts.ReadOptions.prototype.getAwssqs = function() {
  return /** @type{?proto.protos.opts.ReadGroupAWSSQSOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupAWSSQSOptions, 102));
};


/**
 * @param {?proto.protos.opts.ReadGroupAWSSQSOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setAwssqs = function(value) {
  return jspb.Message.setWrapperField(this, 102, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearAwssqs = function() {
  return this.setAwssqs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasAwssqs = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional ReadGroupMongoOptions mongo = 103;
 * @return {?proto.protos.opts.ReadGroupMongoOptions}
 */
proto.protos.opts.ReadOptions.prototype.getMongo = function() {
  return /** @type{?proto.protos.opts.ReadGroupMongoOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupMongoOptions, 103));
};


/**
 * @param {?proto.protos.opts.ReadGroupMongoOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setMongo = function(value) {
  return jspb.Message.setWrapperField(this, 103, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearMongo = function() {
  return this.setMongo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasMongo = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional ReadGroupNatsOptions nats = 104;
 * @return {?proto.protos.opts.ReadGroupNatsOptions}
 */
proto.protos.opts.ReadOptions.prototype.getNats = function() {
  return /** @type{?proto.protos.opts.ReadGroupNatsOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupNatsOptions, 104));
};


/**
 * @param {?proto.protos.opts.ReadGroupNatsOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setNats = function(value) {
  return jspb.Message.setWrapperField(this, 104, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearNats = function() {
  return this.setNats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasNats = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional ReadGroupNatsStreamingOptions nats_streaming = 105;
 * @return {?proto.protos.opts.ReadGroupNatsStreamingOptions}
 */
proto.protos.opts.ReadOptions.prototype.getNatsStreaming = function() {
  return /** @type{?proto.protos.opts.ReadGroupNatsStreamingOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupNatsStreamingOptions, 105));
};


/**
 * @param {?proto.protos.opts.ReadGroupNatsStreamingOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setNatsStreaming = function(value) {
  return jspb.Message.setWrapperField(this, 105, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearNatsStreaming = function() {
  return this.setNatsStreaming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasNatsStreaming = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional ReadGroupNSQOptions nsq = 106;
 * @return {?proto.protos.opts.ReadGroupNSQOptions}
 */
proto.protos.opts.ReadOptions.prototype.getNsq = function() {
  return /** @type{?proto.protos.opts.ReadGroupNSQOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupNSQOptions, 106));
};


/**
 * @param {?proto.protos.opts.ReadGroupNSQOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setNsq = function(value) {
  return jspb.Message.setWrapperField(this, 106, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearNsq = function() {
  return this.setNsq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasNsq = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional ReadGroupPulsarOptions pulsar = 107;
 * @return {?proto.protos.opts.ReadGroupPulsarOptions}
 */
proto.protos.opts.ReadOptions.prototype.getPulsar = function() {
  return /** @type{?proto.protos.opts.ReadGroupPulsarOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupPulsarOptions, 107));
};


/**
 * @param {?proto.protos.opts.ReadGroupPulsarOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setPulsar = function(value) {
  return jspb.Message.setWrapperField(this, 107, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearPulsar = function() {
  return this.setPulsar(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasPulsar = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional ReadGroupRabbitOptions rabbit = 108;
 * @return {?proto.protos.opts.ReadGroupRabbitOptions}
 */
proto.protos.opts.ReadOptions.prototype.getRabbit = function() {
  return /** @type{?proto.protos.opts.ReadGroupRabbitOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupRabbitOptions, 108));
};


/**
 * @param {?proto.protos.opts.ReadGroupRabbitOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setRabbit = function(value) {
  return jspb.Message.setWrapperField(this, 108, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearRabbit = function() {
  return this.setRabbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasRabbit = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional ReadGroupRabbitStreamsOptions rabbit_streams = 109;
 * @return {?proto.protos.opts.ReadGroupRabbitStreamsOptions}
 */
proto.protos.opts.ReadOptions.prototype.getRabbitStreams = function() {
  return /** @type{?proto.protos.opts.ReadGroupRabbitStreamsOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupRabbitStreamsOptions, 109));
};


/**
 * @param {?proto.protos.opts.ReadGroupRabbitStreamsOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setRabbitStreams = function(value) {
  return jspb.Message.setWrapperField(this, 109, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearRabbitStreams = function() {
  return this.setRabbitStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasRabbitStreams = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional ReadGroupMQTTOptions mqtt = 110;
 * @return {?proto.protos.opts.ReadGroupMQTTOptions}
 */
proto.protos.opts.ReadOptions.prototype.getMqtt = function() {
  return /** @type{?proto.protos.opts.ReadGroupMQTTOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupMQTTOptions, 110));
};


/**
 * @param {?proto.protos.opts.ReadGroupMQTTOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setMqtt = function(value) {
  return jspb.Message.setWrapperField(this, 110, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearMqtt = function() {
  return this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional ReadGroupAzureServiceBusOptions azure_service_bus = 111;
 * @return {?proto.protos.opts.ReadGroupAzureServiceBusOptions}
 */
proto.protos.opts.ReadOptions.prototype.getAzureServiceBus = function() {
  return /** @type{?proto.protos.opts.ReadGroupAzureServiceBusOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupAzureServiceBusOptions, 111));
};


/**
 * @param {?proto.protos.opts.ReadGroupAzureServiceBusOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setAzureServiceBus = function(value) {
  return jspb.Message.setWrapperField(this, 111, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearAzureServiceBus = function() {
  return this.setAzureServiceBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasAzureServiceBus = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional ReadGroupAzureEventHubOptions azure_event_hub = 112;
 * @return {?proto.protos.opts.ReadGroupAzureEventHubOptions}
 */
proto.protos.opts.ReadOptions.prototype.getAzureEventHub = function() {
  return /** @type{?proto.protos.opts.ReadGroupAzureEventHubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupAzureEventHubOptions, 112));
};


/**
 * @param {?proto.protos.opts.ReadGroupAzureEventHubOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setAzureEventHub = function(value) {
  return jspb.Message.setWrapperField(this, 112, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearAzureEventHub = function() {
  return this.setAzureEventHub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasAzureEventHub = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional ReadGroupGCPPubSubOptions gcp_pubsub = 113;
 * @return {?proto.protos.opts.ReadGroupGCPPubSubOptions}
 */
proto.protos.opts.ReadOptions.prototype.getGcpPubsub = function() {
  return /** @type{?proto.protos.opts.ReadGroupGCPPubSubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupGCPPubSubOptions, 113));
};


/**
 * @param {?proto.protos.opts.ReadGroupGCPPubSubOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setGcpPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 113, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearGcpPubsub = function() {
  return this.setGcpPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasGcpPubsub = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional ReadGroupKubeMQQueueOptions kubemq_queue = 114;
 * @return {?proto.protos.opts.ReadGroupKubeMQQueueOptions}
 */
proto.protos.opts.ReadOptions.prototype.getKubemqQueue = function() {
  return /** @type{?proto.protos.opts.ReadGroupKubeMQQueueOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupKubeMQQueueOptions, 114));
};


/**
 * @param {?proto.protos.opts.ReadGroupKubeMQQueueOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setKubemqQueue = function(value) {
  return jspb.Message.setWrapperField(this, 114, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearKubemqQueue = function() {
  return this.setKubemqQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasKubemqQueue = function() {
  return jspb.Message.getField(this, 114) != null;
};


/**
 * optional ReadGroupRedisPubSubOptions redis_pubsub = 115;
 * @return {?proto.protos.opts.ReadGroupRedisPubSubOptions}
 */
proto.protos.opts.ReadOptions.prototype.getRedisPubsub = function() {
  return /** @type{?proto.protos.opts.ReadGroupRedisPubSubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupRedisPubSubOptions, 115));
};


/**
 * @param {?proto.protos.opts.ReadGroupRedisPubSubOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setRedisPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 115, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearRedisPubsub = function() {
  return this.setRedisPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasRedisPubsub = function() {
  return jspb.Message.getField(this, 115) != null;
};


/**
 * optional ReadGroupRedisStreamsOptions redis_streams = 116;
 * @return {?proto.protos.opts.ReadGroupRedisStreamsOptions}
 */
proto.protos.opts.ReadOptions.prototype.getRedisStreams = function() {
  return /** @type{?proto.protos.opts.ReadGroupRedisStreamsOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupRedisStreamsOptions, 116));
};


/**
 * @param {?proto.protos.opts.ReadGroupRedisStreamsOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setRedisStreams = function(value) {
  return jspb.Message.setWrapperField(this, 116, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearRedisStreams = function() {
  return this.setRedisStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasRedisStreams = function() {
  return jspb.Message.getField(this, 116) != null;
};


/**
 * optional ReadGroupPostgresOptions postgres = 117;
 * @return {?proto.protos.opts.ReadGroupPostgresOptions}
 */
proto.protos.opts.ReadOptions.prototype.getPostgres = function() {
  return /** @type{?proto.protos.opts.ReadGroupPostgresOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.ReadGroupPostgresOptions, 117));
};


/**
 * @param {?proto.protos.opts.ReadGroupPostgresOptions|undefined} value
 * @return {!proto.protos.opts.ReadOptions} returns this
*/
proto.protos.opts.ReadOptions.prototype.setPostgres = function(value) {
  return jspb.Message.setWrapperField(this, 117, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadOptions} returns this
 */
proto.protos.opts.ReadOptions.prototype.clearPostgres = function() {
  return this.setPostgres(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadOptions.prototype.hasPostgres = function() {
  return jspb.Message.getField(this, 117) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupKafkaOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupKafkaOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupKafkaOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupKafkaOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kafka_pb.KafkaConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kafka_pb.KafkaReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupKafkaOptions}
 */
proto.protos.opts.ReadGroupKafkaOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupKafkaOptions;
  return proto.protos.opts.ReadGroupKafkaOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupKafkaOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupKafkaOptions}
 */
proto.protos.opts.ReadGroupKafkaOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kafka_pb.KafkaConn;
      reader.readMessage(value,args_kafka_pb.KafkaConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kafka_pb.KafkaReadArgs;
      reader.readMessage(value,args_kafka_pb.KafkaReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupKafkaOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupKafkaOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupKafkaOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupKafkaOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kafka_pb.KafkaConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kafka_pb.KafkaReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.KafkaConn _conn = 1;
 * @return {?proto.protos.args.KafkaConn}
 */
proto.protos.opts.ReadGroupKafkaOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KafkaConn} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaConn, 1));
};


/**
 * @param {?proto.protos.args.KafkaConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupKafkaOptions} returns this
*/
proto.protos.opts.ReadGroupKafkaOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupKafkaOptions} returns this
 */
proto.protos.opts.ReadGroupKafkaOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupKafkaOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.KafkaReadArgs args = 2;
 * @return {?proto.protos.args.KafkaReadArgs}
 */
proto.protos.opts.ReadGroupKafkaOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KafkaReadArgs} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaReadArgs, 2));
};


/**
 * @param {?proto.protos.args.KafkaReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupKafkaOptions} returns this
*/
proto.protos.opts.ReadGroupKafkaOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupKafkaOptions} returns this
 */
proto.protos.opts.ReadGroupKafkaOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupKafkaOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupActiveMQOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupActiveMQOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupActiveMQOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupActiveMQOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_activemq_pb.ActiveMQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_activemq_pb.ActiveMQReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupActiveMQOptions}
 */
proto.protos.opts.ReadGroupActiveMQOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupActiveMQOptions;
  return proto.protos.opts.ReadGroupActiveMQOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupActiveMQOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupActiveMQOptions}
 */
proto.protos.opts.ReadGroupActiveMQOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_activemq_pb.ActiveMQConn;
      reader.readMessage(value,args_activemq_pb.ActiveMQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_activemq_pb.ActiveMQReadArgs;
      reader.readMessage(value,args_activemq_pb.ActiveMQReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupActiveMQOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupActiveMQOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupActiveMQOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupActiveMQOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_activemq_pb.ActiveMQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_activemq_pb.ActiveMQReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.ActiveMQConn _conn = 1;
 * @return {?proto.protos.args.ActiveMQConn}
 */
proto.protos.opts.ReadGroupActiveMQOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.ActiveMQConn} */ (
    jspb.Message.getWrapperField(this, args_activemq_pb.ActiveMQConn, 1));
};


/**
 * @param {?proto.protos.args.ActiveMQConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupActiveMQOptions} returns this
*/
proto.protos.opts.ReadGroupActiveMQOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupActiveMQOptions} returns this
 */
proto.protos.opts.ReadGroupActiveMQOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupActiveMQOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.ActiveMQReadArgs args = 2;
 * @return {?proto.protos.args.ActiveMQReadArgs}
 */
proto.protos.opts.ReadGroupActiveMQOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.ActiveMQReadArgs} */ (
    jspb.Message.getWrapperField(this, args_activemq_pb.ActiveMQReadArgs, 2));
};


/**
 * @param {?proto.protos.args.ActiveMQReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupActiveMQOptions} returns this
*/
proto.protos.opts.ReadGroupActiveMQOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupActiveMQOptions} returns this
 */
proto.protos.opts.ReadGroupActiveMQOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupActiveMQOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupAWSSQSOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupAWSSQSOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupAWSSQSOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_aws$sqs_pb.AWSSQSConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_aws$sqs_pb.AWSSQSReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupAWSSQSOptions}
 */
proto.protos.opts.ReadGroupAWSSQSOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupAWSSQSOptions;
  return proto.protos.opts.ReadGroupAWSSQSOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupAWSSQSOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupAWSSQSOptions}
 */
proto.protos.opts.ReadGroupAWSSQSOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_aws$sqs_pb.AWSSQSConn;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_aws$sqs_pb.AWSSQSReadArgs;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupAWSSQSOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupAWSSQSOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupAWSSQSOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_aws$sqs_pb.AWSSQSConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_aws$sqs_pb.AWSSQSReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AWSSQSConn _conn = 1;
 * @return {?proto.protos.args.AWSSQSConn}
 */
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AWSSQSConn} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSConn, 1));
};


/**
 * @param {?proto.protos.args.AWSSQSConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupAWSSQSOptions} returns this
*/
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupAWSSQSOptions} returns this
 */
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AWSSQSReadArgs args = 2;
 * @return {?proto.protos.args.AWSSQSReadArgs}
 */
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AWSSQSReadArgs} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSReadArgs, 2));
};


/**
 * @param {?proto.protos.args.AWSSQSReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupAWSSQSOptions} returns this
*/
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupAWSSQSOptions} returns this
 */
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupAWSSQSOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupMongoOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupMongoOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupMongoOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupMongoOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_mongo_pb.MongoConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_mongo_pb.MongoReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupMongoOptions}
 */
proto.protos.opts.ReadGroupMongoOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupMongoOptions;
  return proto.protos.opts.ReadGroupMongoOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupMongoOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupMongoOptions}
 */
proto.protos.opts.ReadGroupMongoOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_mongo_pb.MongoConn;
      reader.readMessage(value,args_mongo_pb.MongoConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_mongo_pb.MongoReadArgs;
      reader.readMessage(value,args_mongo_pb.MongoReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupMongoOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupMongoOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupMongoOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupMongoOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_mongo_pb.MongoConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_mongo_pb.MongoReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.MongoConn _conn = 1;
 * @return {?proto.protos.args.MongoConn}
 */
proto.protos.opts.ReadGroupMongoOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.MongoConn} */ (
    jspb.Message.getWrapperField(this, args_mongo_pb.MongoConn, 1));
};


/**
 * @param {?proto.protos.args.MongoConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupMongoOptions} returns this
*/
proto.protos.opts.ReadGroupMongoOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupMongoOptions} returns this
 */
proto.protos.opts.ReadGroupMongoOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupMongoOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.MongoReadArgs args = 2;
 * @return {?proto.protos.args.MongoReadArgs}
 */
proto.protos.opts.ReadGroupMongoOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.MongoReadArgs} */ (
    jspb.Message.getWrapperField(this, args_mongo_pb.MongoReadArgs, 2));
};


/**
 * @param {?proto.protos.args.MongoReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupMongoOptions} returns this
*/
proto.protos.opts.ReadGroupMongoOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupMongoOptions} returns this
 */
proto.protos.opts.ReadGroupMongoOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupMongoOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupNatsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupNatsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupNatsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupNatsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nats_pb.NatsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nats_pb.NatsReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupNatsOptions}
 */
proto.protos.opts.ReadGroupNatsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupNatsOptions;
  return proto.protos.opts.ReadGroupNatsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupNatsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupNatsOptions}
 */
proto.protos.opts.ReadGroupNatsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nats_pb.NatsConn;
      reader.readMessage(value,args_nats_pb.NatsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nats_pb.NatsReadArgs;
      reader.readMessage(value,args_nats_pb.NatsReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupNatsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupNatsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupNatsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupNatsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nats_pb.NatsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nats_pb.NatsReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NatsConn _conn = 1;
 * @return {?proto.protos.args.NatsConn}
 */
proto.protos.opts.ReadGroupNatsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NatsConn} */ (
    jspb.Message.getWrapperField(this, args_nats_pb.NatsConn, 1));
};


/**
 * @param {?proto.protos.args.NatsConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupNatsOptions} returns this
*/
proto.protos.opts.ReadGroupNatsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupNatsOptions} returns this
 */
proto.protos.opts.ReadGroupNatsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupNatsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NatsReadArgs args = 2;
 * @return {?proto.protos.args.NatsReadArgs}
 */
proto.protos.opts.ReadGroupNatsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NatsReadArgs} */ (
    jspb.Message.getWrapperField(this, args_nats_pb.NatsReadArgs, 2));
};


/**
 * @param {?proto.protos.args.NatsReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupNatsOptions} returns this
*/
proto.protos.opts.ReadGroupNatsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupNatsOptions} returns this
 */
proto.protos.opts.ReadGroupNatsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupNatsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupNatsStreamingOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupNatsStreamingOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nats$streaming_pb.NatsStreamingConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nats$streaming_pb.NatsStreamingReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupNatsStreamingOptions}
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupNatsStreamingOptions;
  return proto.protos.opts.ReadGroupNatsStreamingOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupNatsStreamingOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupNatsStreamingOptions}
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nats$streaming_pb.NatsStreamingConn;
      reader.readMessage(value,args_nats$streaming_pb.NatsStreamingConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nats$streaming_pb.NatsStreamingReadArgs;
      reader.readMessage(value,args_nats$streaming_pb.NatsStreamingReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupNatsStreamingOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupNatsStreamingOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nats$streaming_pb.NatsStreamingConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nats$streaming_pb.NatsStreamingReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NatsStreamingConn _conn = 1;
 * @return {?proto.protos.args.NatsStreamingConn}
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NatsStreamingConn} */ (
    jspb.Message.getWrapperField(this, args_nats$streaming_pb.NatsStreamingConn, 1));
};


/**
 * @param {?proto.protos.args.NatsStreamingConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupNatsStreamingOptions} returns this
*/
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupNatsStreamingOptions} returns this
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NatsStreamingReadArgs args = 2;
 * @return {?proto.protos.args.NatsStreamingReadArgs}
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NatsStreamingReadArgs} */ (
    jspb.Message.getWrapperField(this, args_nats$streaming_pb.NatsStreamingReadArgs, 2));
};


/**
 * @param {?proto.protos.args.NatsStreamingReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupNatsStreamingOptions} returns this
*/
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupNatsStreamingOptions} returns this
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupNatsStreamingOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupNSQOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupNSQOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupNSQOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupNSQOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nsq_pb.NSQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nsq_pb.NSQReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupNSQOptions}
 */
proto.protos.opts.ReadGroupNSQOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupNSQOptions;
  return proto.protos.opts.ReadGroupNSQOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupNSQOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupNSQOptions}
 */
proto.protos.opts.ReadGroupNSQOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nsq_pb.NSQConn;
      reader.readMessage(value,args_nsq_pb.NSQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nsq_pb.NSQReadArgs;
      reader.readMessage(value,args_nsq_pb.NSQReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupNSQOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupNSQOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupNSQOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupNSQOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nsq_pb.NSQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nsq_pb.NSQReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NSQConn _conn = 1;
 * @return {?proto.protos.args.NSQConn}
 */
proto.protos.opts.ReadGroupNSQOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NSQConn} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQConn, 1));
};


/**
 * @param {?proto.protos.args.NSQConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupNSQOptions} returns this
*/
proto.protos.opts.ReadGroupNSQOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupNSQOptions} returns this
 */
proto.protos.opts.ReadGroupNSQOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupNSQOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NSQReadArgs args = 2;
 * @return {?proto.protos.args.NSQReadArgs}
 */
proto.protos.opts.ReadGroupNSQOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NSQReadArgs} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQReadArgs, 2));
};


/**
 * @param {?proto.protos.args.NSQReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupNSQOptions} returns this
*/
proto.protos.opts.ReadGroupNSQOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupNSQOptions} returns this
 */
proto.protos.opts.ReadGroupNSQOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupNSQOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupPostgresOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupPostgresOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupPostgresOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupPostgresOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_postgres_pb.PostgresConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_postgres_pb.PostgresReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupPostgresOptions}
 */
proto.protos.opts.ReadGroupPostgresOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupPostgresOptions;
  return proto.protos.opts.ReadGroupPostgresOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupPostgresOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupPostgresOptions}
 */
proto.protos.opts.ReadGroupPostgresOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_postgres_pb.PostgresConn;
      reader.readMessage(value,args_postgres_pb.PostgresConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_postgres_pb.PostgresReadArgs;
      reader.readMessage(value,args_postgres_pb.PostgresReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupPostgresOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupPostgresOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupPostgresOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupPostgresOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_postgres_pb.PostgresConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_postgres_pb.PostgresReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.PostgresConn _conn = 1;
 * @return {?proto.protos.args.PostgresConn}
 */
proto.protos.opts.ReadGroupPostgresOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.PostgresConn} */ (
    jspb.Message.getWrapperField(this, args_postgres_pb.PostgresConn, 1));
};


/**
 * @param {?proto.protos.args.PostgresConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupPostgresOptions} returns this
*/
proto.protos.opts.ReadGroupPostgresOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupPostgresOptions} returns this
 */
proto.protos.opts.ReadGroupPostgresOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupPostgresOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.PostgresReadArgs args = 2;
 * @return {?proto.protos.args.PostgresReadArgs}
 */
proto.protos.opts.ReadGroupPostgresOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.PostgresReadArgs} */ (
    jspb.Message.getWrapperField(this, args_postgres_pb.PostgresReadArgs, 2));
};


/**
 * @param {?proto.protos.args.PostgresReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupPostgresOptions} returns this
*/
proto.protos.opts.ReadGroupPostgresOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupPostgresOptions} returns this
 */
proto.protos.opts.ReadGroupPostgresOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupPostgresOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupPulsarOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupPulsarOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupPulsarOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupPulsarOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_pulsar_pb.PulsarConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_pulsar_pb.PulsarReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupPulsarOptions}
 */
proto.protos.opts.ReadGroupPulsarOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupPulsarOptions;
  return proto.protos.opts.ReadGroupPulsarOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupPulsarOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupPulsarOptions}
 */
proto.protos.opts.ReadGroupPulsarOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_pulsar_pb.PulsarConn;
      reader.readMessage(value,args_pulsar_pb.PulsarConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_pulsar_pb.PulsarReadArgs;
      reader.readMessage(value,args_pulsar_pb.PulsarReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupPulsarOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupPulsarOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupPulsarOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupPulsarOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_pulsar_pb.PulsarConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_pulsar_pb.PulsarReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.PulsarConn _conn = 1;
 * @return {?proto.protos.args.PulsarConn}
 */
proto.protos.opts.ReadGroupPulsarOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.PulsarConn} */ (
    jspb.Message.getWrapperField(this, args_pulsar_pb.PulsarConn, 1));
};


/**
 * @param {?proto.protos.args.PulsarConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupPulsarOptions} returns this
*/
proto.protos.opts.ReadGroupPulsarOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupPulsarOptions} returns this
 */
proto.protos.opts.ReadGroupPulsarOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupPulsarOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.PulsarReadArgs args = 2;
 * @return {?proto.protos.args.PulsarReadArgs}
 */
proto.protos.opts.ReadGroupPulsarOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.PulsarReadArgs} */ (
    jspb.Message.getWrapperField(this, args_pulsar_pb.PulsarReadArgs, 2));
};


/**
 * @param {?proto.protos.args.PulsarReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupPulsarOptions} returns this
*/
proto.protos.opts.ReadGroupPulsarOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupPulsarOptions} returns this
 */
proto.protos.opts.ReadGroupPulsarOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupPulsarOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupRabbitOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupRabbitOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupRabbitOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupRabbitOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit_pb.RabbitConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit_pb.RabbitReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupRabbitOptions}
 */
proto.protos.opts.ReadGroupRabbitOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupRabbitOptions;
  return proto.protos.opts.ReadGroupRabbitOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupRabbitOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupRabbitOptions}
 */
proto.protos.opts.ReadGroupRabbitOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit_pb.RabbitConn;
      reader.readMessage(value,args_rabbit_pb.RabbitConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit_pb.RabbitReadArgs;
      reader.readMessage(value,args_rabbit_pb.RabbitReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupRabbitOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupRabbitOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupRabbitOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupRabbitOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit_pb.RabbitConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit_pb.RabbitReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RabbitConn _conn = 1;
 * @return {?proto.protos.args.RabbitConn}
 */
proto.protos.opts.ReadGroupRabbitOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupRabbitOptions} returns this
*/
proto.protos.opts.ReadGroupRabbitOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupRabbitOptions} returns this
 */
proto.protos.opts.ReadGroupRabbitOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupRabbitOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RabbitReadArgs args = 2;
 * @return {?proto.protos.args.RabbitReadArgs}
 */
proto.protos.opts.ReadGroupRabbitOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitReadArgs} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitReadArgs, 2));
};


/**
 * @param {?proto.protos.args.RabbitReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupRabbitOptions} returns this
*/
proto.protos.opts.ReadGroupRabbitOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupRabbitOptions} returns this
 */
proto.protos.opts.ReadGroupRabbitOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupRabbitOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupRabbitStreamsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupRabbitStreamsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit$streams_pb.RabbitStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit$streams_pb.RabbitStreamsReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupRabbitStreamsOptions}
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupRabbitStreamsOptions;
  return proto.protos.opts.ReadGroupRabbitStreamsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupRabbitStreamsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupRabbitStreamsOptions}
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit$streams_pb.RabbitStreamsConn;
      reader.readMessage(value,args_rabbit$streams_pb.RabbitStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit$streams_pb.RabbitStreamsReadArgs;
      reader.readMessage(value,args_rabbit$streams_pb.RabbitStreamsReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupRabbitStreamsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupRabbitStreamsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit$streams_pb.RabbitStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit$streams_pb.RabbitStreamsReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RabbitStreamsConn _conn = 1;
 * @return {?proto.protos.args.RabbitStreamsConn}
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit$streams_pb.RabbitStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitStreamsConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupRabbitStreamsOptions} returns this
*/
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupRabbitStreamsOptions} returns this
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RabbitStreamsReadArgs args = 2;
 * @return {?proto.protos.args.RabbitStreamsReadArgs}
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitStreamsReadArgs} */ (
    jspb.Message.getWrapperField(this, args_rabbit$streams_pb.RabbitStreamsReadArgs, 2));
};


/**
 * @param {?proto.protos.args.RabbitStreamsReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupRabbitStreamsOptions} returns this
*/
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupRabbitStreamsOptions} returns this
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupRabbitStreamsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupRedisPubSubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupRedisPubSubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$pubsub_pb.RedisPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$pubsub_pb.RedisPubSubReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupRedisPubSubOptions}
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupRedisPubSubOptions;
  return proto.protos.opts.ReadGroupRedisPubSubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupRedisPubSubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupRedisPubSubOptions}
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$pubsub_pb.RedisPubSubConn;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$pubsub_pb.RedisPubSubReadArgs;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupRedisPubSubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupRedisPubSubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$pubsub_pb.RedisPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$pubsub_pb.RedisPubSubReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RedisPubSubConn _conn = 1;
 * @return {?proto.protos.args.RedisPubSubConn}
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.RedisPubSubConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupRedisPubSubOptions} returns this
*/
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupRedisPubSubOptions} returns this
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RedisPubSubReadArgs args = 2;
 * @return {?proto.protos.args.RedisPubSubReadArgs}
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisPubSubReadArgs} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubReadArgs, 2));
};


/**
 * @param {?proto.protos.args.RedisPubSubReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupRedisPubSubOptions} returns this
*/
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupRedisPubSubOptions} returns this
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupRedisPubSubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupRedisStreamsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupRedisStreamsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$streams_pb.RedisStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$streams_pb.RedisStreamsReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupRedisStreamsOptions}
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupRedisStreamsOptions;
  return proto.protos.opts.ReadGroupRedisStreamsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupRedisStreamsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupRedisStreamsOptions}
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$streams_pb.RedisStreamsConn;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$streams_pb.RedisStreamsReadArgs;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupRedisStreamsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupRedisStreamsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$streams_pb.RedisStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$streams_pb.RedisStreamsReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RedisStreamsConn _conn = 1;
 * @return {?proto.protos.args.RedisStreamsConn}
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RedisStreamsConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupRedisStreamsOptions} returns this
*/
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupRedisStreamsOptions} returns this
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RedisStreamsReadArgs args = 2;
 * @return {?proto.protos.args.RedisStreamsReadArgs}
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisStreamsReadArgs} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsReadArgs, 2));
};


/**
 * @param {?proto.protos.args.RedisStreamsReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupRedisStreamsOptions} returns this
*/
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupRedisStreamsOptions} returns this
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupRedisStreamsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupAzureEventHubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupAzureEventHubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$event$hub_pb.AzureEventHubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$event$hub_pb.AzureEventHubReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupAzureEventHubOptions}
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupAzureEventHubOptions;
  return proto.protos.opts.ReadGroupAzureEventHubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupAzureEventHubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupAzureEventHubOptions}
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$event$hub_pb.AzureEventHubConn;
      reader.readMessage(value,args_azure$event$hub_pb.AzureEventHubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$event$hub_pb.AzureEventHubReadArgs;
      reader.readMessage(value,args_azure$event$hub_pb.AzureEventHubReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupAzureEventHubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupAzureEventHubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$event$hub_pb.AzureEventHubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$event$hub_pb.AzureEventHubReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AzureEventHubConn _conn = 1;
 * @return {?proto.protos.args.AzureEventHubConn}
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureEventHubConn} */ (
    jspb.Message.getWrapperField(this, args_azure$event$hub_pb.AzureEventHubConn, 1));
};


/**
 * @param {?proto.protos.args.AzureEventHubConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupAzureEventHubOptions} returns this
*/
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupAzureEventHubOptions} returns this
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AzureEventHubReadArgs args = 2;
 * @return {?proto.protos.args.AzureEventHubReadArgs}
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureEventHubReadArgs} */ (
    jspb.Message.getWrapperField(this, args_azure$event$hub_pb.AzureEventHubReadArgs, 2));
};


/**
 * @param {?proto.protos.args.AzureEventHubReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupAzureEventHubOptions} returns this
*/
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupAzureEventHubOptions} returns this
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupAzureEventHubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupAzureServiceBusOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupAzureServiceBusOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$service$bus_pb.AzureServiceBusConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$service$bus_pb.AzureServiceBusReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupAzureServiceBusOptions}
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupAzureServiceBusOptions;
  return proto.protos.opts.ReadGroupAzureServiceBusOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupAzureServiceBusOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupAzureServiceBusOptions}
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$service$bus_pb.AzureServiceBusConn;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$service$bus_pb.AzureServiceBusReadArgs;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupAzureServiceBusOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupAzureServiceBusOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$service$bus_pb.AzureServiceBusConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$service$bus_pb.AzureServiceBusReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AzureServiceBusConn _conn = 1;
 * @return {?proto.protos.args.AzureServiceBusConn}
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureServiceBusConn} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusConn, 1));
};


/**
 * @param {?proto.protos.args.AzureServiceBusConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupAzureServiceBusOptions} returns this
*/
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupAzureServiceBusOptions} returns this
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AzureServiceBusReadArgs args = 2;
 * @return {?proto.protos.args.AzureServiceBusReadArgs}
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureServiceBusReadArgs} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusReadArgs, 2));
};


/**
 * @param {?proto.protos.args.AzureServiceBusReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupAzureServiceBusOptions} returns this
*/
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupAzureServiceBusOptions} returns this
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupAzureServiceBusOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupMQTTOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupMQTTOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupMQTTOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupMQTTOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_mqtt_pb.MQTTConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_mqtt_pb.MQTTReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupMQTTOptions}
 */
proto.protos.opts.ReadGroupMQTTOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupMQTTOptions;
  return proto.protos.opts.ReadGroupMQTTOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupMQTTOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupMQTTOptions}
 */
proto.protos.opts.ReadGroupMQTTOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_mqtt_pb.MQTTConn;
      reader.readMessage(value,args_mqtt_pb.MQTTConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_mqtt_pb.MQTTReadArgs;
      reader.readMessage(value,args_mqtt_pb.MQTTReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupMQTTOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupMQTTOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupMQTTOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupMQTTOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_mqtt_pb.MQTTConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_mqtt_pb.MQTTReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.MQTTConn _conn = 1;
 * @return {?proto.protos.args.MQTTConn}
 */
proto.protos.opts.ReadGroupMQTTOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.MQTTConn} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTConn, 1));
};


/**
 * @param {?proto.protos.args.MQTTConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupMQTTOptions} returns this
*/
proto.protos.opts.ReadGroupMQTTOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupMQTTOptions} returns this
 */
proto.protos.opts.ReadGroupMQTTOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupMQTTOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.MQTTReadArgs args = 2;
 * @return {?proto.protos.args.MQTTReadArgs}
 */
proto.protos.opts.ReadGroupMQTTOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.MQTTReadArgs} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTReadArgs, 2));
};


/**
 * @param {?proto.protos.args.MQTTReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupMQTTOptions} returns this
*/
proto.protos.opts.ReadGroupMQTTOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupMQTTOptions} returns this
 */
proto.protos.opts.ReadGroupMQTTOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupMQTTOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupGCPPubSubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupGCPPubSubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_gcp$pubsub_pb.GCPPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_gcp$pubsub_pb.GCPPubSubReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupGCPPubSubOptions}
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupGCPPubSubOptions;
  return proto.protos.opts.ReadGroupGCPPubSubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupGCPPubSubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupGCPPubSubOptions}
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_gcp$pubsub_pb.GCPPubSubConn;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_gcp$pubsub_pb.GCPPubSubReadArgs;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupGCPPubSubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupGCPPubSubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_gcp$pubsub_pb.GCPPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_gcp$pubsub_pb.GCPPubSubReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.GCPPubSubConn _conn = 1;
 * @return {?proto.protos.args.GCPPubSubConn}
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.GCPPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.GCPPubSubConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupGCPPubSubOptions} returns this
*/
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupGCPPubSubOptions} returns this
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.GCPPubSubReadArgs args = 2;
 * @return {?proto.protos.args.GCPPubSubReadArgs}
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.GCPPubSubReadArgs} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubReadArgs, 2));
};


/**
 * @param {?proto.protos.args.GCPPubSubReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupGCPPubSubOptions} returns this
*/
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupGCPPubSubOptions} returns this
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupGCPPubSubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.ReadGroupKubeMQQueueOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.ReadGroupKubeMQQueueOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kubemq$queue_pb.KubeMQQueueConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kubemq$queue_pb.KubeMQQueueReadArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.ReadGroupKubeMQQueueOptions}
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.ReadGroupKubeMQQueueOptions;
  return proto.protos.opts.ReadGroupKubeMQQueueOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.ReadGroupKubeMQQueueOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.ReadGroupKubeMQQueueOptions}
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kubemq$queue_pb.KubeMQQueueConn;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kubemq$queue_pb.KubeMQQueueReadArgs;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueReadArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.ReadGroupKubeMQQueueOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.ReadGroupKubeMQQueueOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kubemq$queue_pb.KubeMQQueueConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kubemq$queue_pb.KubeMQQueueReadArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.KubeMQQueueConn _conn = 1;
 * @return {?proto.protos.args.KubeMQQueueConn}
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KubeMQQueueConn} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueConn, 1));
};


/**
 * @param {?proto.protos.args.KubeMQQueueConn|undefined} value
 * @return {!proto.protos.opts.ReadGroupKubeMQQueueOptions} returns this
*/
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupKubeMQQueueOptions} returns this
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.KubeMQQueueReadArgs args = 2;
 * @return {?proto.protos.args.KubeMQQueueReadArgs}
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KubeMQQueueReadArgs} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueReadArgs, 2));
};


/**
 * @param {?proto.protos.args.KubeMQQueueReadArgs|undefined} value
 * @return {!proto.protos.opts.ReadGroupKubeMQQueueOptions} returns this
*/
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.ReadGroupKubeMQQueueOptions} returns this
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.ReadGroupKubeMQQueueOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.protos.opts.ConvertOption = {
  CONVERT_OPTION_UNSET: 0,
  CONVERT_OPTION_BASE64: 1,
  CONVERT_OPTION_GZIP: 2
};

goog.object.extend(exports, proto.protos.opts);
