// source: opts/dynamic.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var args_activemq_pb = require('../args/activemq_pb.js');
goog.object.extend(proto, args_activemq_pb);
var args_azure$service$bus_pb = require('../args/azure-service-bus_pb.js');
goog.object.extend(proto, args_azure$service$bus_pb);
var args_azure$event$hub_pb = require('../args/azure-event-hub_pb.js');
goog.object.extend(proto, args_azure$event$hub_pb);
var args_aws$sqs_pb = require('../args/aws-sqs_pb.js');
goog.object.extend(proto, args_aws$sqs_pb);
var args_aws$sns_pb = require('../args/aws-sns_pb.js');
goog.object.extend(proto, args_aws$sns_pb);
var args_gcp$pubsub_pb = require('../args/gcp-pubsub_pb.js');
goog.object.extend(proto, args_gcp$pubsub_pb);
var args_kafka_pb = require('../args/kafka_pb.js');
goog.object.extend(proto, args_kafka_pb);
var args_kubemq$queue_pb = require('../args/kubemq-queue_pb.js');
goog.object.extend(proto, args_kubemq$queue_pb);
var args_mqtt_pb = require('../args/mqtt_pb.js');
goog.object.extend(proto, args_mqtt_pb);
var args_nats_pb = require('../args/nats_pb.js');
goog.object.extend(proto, args_nats_pb);
var args_nats$streaming_pb = require('../args/nats-streaming_pb.js');
goog.object.extend(proto, args_nats$streaming_pb);
var args_nsq_pb = require('../args/nsq_pb.js');
goog.object.extend(proto, args_nsq_pb);
var args_rabbit_pb = require('../args/rabbit_pb.js');
goog.object.extend(proto, args_rabbit_pb);
var args_rabbit$streams_pb = require('../args/rabbit-streams_pb.js');
goog.object.extend(proto, args_rabbit$streams_pb);
var args_redis$pubsub_pb = require('../args/redis-pubsub_pb.js');
goog.object.extend(proto, args_redis$pubsub_pb);
var args_redis$streams_pb = require('../args/redis-streams_pb.js');
goog.object.extend(proto, args_redis$streams_pb);
goog.exportSymbol('proto.protos.opts.DynamicGroupAWSSNSOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupAWSSQSOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupActiveMQOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupAzureEventHubOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupAzureServiceBusOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupGCPPubSubOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupKafkaOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupKubeMQQueueOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupMQTTOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupNSQOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupNatsOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupNatsStreamingOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupRabbitOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupRabbitStreamsOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupRedisPubSubOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicGroupRedisStreamsOptions', null, global);
goog.exportSymbol('proto.protos.opts.DynamicOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicOptions.displayName = 'proto.protos.opts.DynamicOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupKafkaOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupKafkaOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupKafkaOptions.displayName = 'proto.protos.opts.DynamicGroupKafkaOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupActiveMQOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupActiveMQOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupActiveMQOptions.displayName = 'proto.protos.opts.DynamicGroupActiveMQOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupAWSSQSOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupAWSSQSOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupAWSSQSOptions.displayName = 'proto.protos.opts.DynamicGroupAWSSQSOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupAWSSNSOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupAWSSNSOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupAWSSNSOptions.displayName = 'proto.protos.opts.DynamicGroupAWSSNSOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupNatsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupNatsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupNatsOptions.displayName = 'proto.protos.opts.DynamicGroupNatsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupNatsStreamingOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupNatsStreamingOptions.displayName = 'proto.protos.opts.DynamicGroupNatsStreamingOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupNSQOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupNSQOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupNSQOptions.displayName = 'proto.protos.opts.DynamicGroupNSQOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupRabbitOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupRabbitOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupRabbitOptions.displayName = 'proto.protos.opts.DynamicGroupRabbitOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupRabbitStreamsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupRabbitStreamsOptions.displayName = 'proto.protos.opts.DynamicGroupRabbitStreamsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupRedisPubSubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupRedisPubSubOptions.displayName = 'proto.protos.opts.DynamicGroupRedisPubSubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupRedisStreamsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupRedisStreamsOptions.displayName = 'proto.protos.opts.DynamicGroupRedisStreamsOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupAzureEventHubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupAzureEventHubOptions.displayName = 'proto.protos.opts.DynamicGroupAzureEventHubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupAzureServiceBusOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupAzureServiceBusOptions.displayName = 'proto.protos.opts.DynamicGroupAzureServiceBusOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupMQTTOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupMQTTOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupMQTTOptions.displayName = 'proto.protos.opts.DynamicGroupMQTTOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupGCPPubSubOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupGCPPubSubOptions.displayName = 'proto.protos.opts.DynamicGroupGCPPubSubOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.opts.DynamicGroupKubeMQQueueOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.opts.DynamicGroupKubeMQQueueOptions.displayName = 'proto.protos.opts.DynamicGroupKubeMQQueueOptions';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiToken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    grpcAddress: jspb.Message.getFieldWithDefault(msg, 2, ""),
    grpcTimeoutSeconds: jspb.Message.getFieldWithDefault(msg, 3, ""),
    grpcInsecureTls: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    kafka: (f = msg.getKafka()) && proto.protos.opts.DynamicGroupKafkaOptions.toObject(includeInstance, f),
    activemq: (f = msg.getActivemq()) && proto.protos.opts.DynamicGroupActiveMQOptions.toObject(includeInstance, f),
    awssqs: (f = msg.getAwssqs()) && proto.protos.opts.DynamicGroupAWSSQSOptions.toObject(includeInstance, f),
    awssns: (f = msg.getAwssns()) && proto.protos.opts.DynamicGroupAWSSNSOptions.toObject(includeInstance, f),
    nats: (f = msg.getNats()) && proto.protos.opts.DynamicGroupNatsOptions.toObject(includeInstance, f),
    natsStreaming: (f = msg.getNatsStreaming()) && proto.protos.opts.DynamicGroupNatsStreamingOptions.toObject(includeInstance, f),
    nsq: (f = msg.getNsq()) && proto.protos.opts.DynamicGroupNSQOptions.toObject(includeInstance, f),
    rabbit: (f = msg.getRabbit()) && proto.protos.opts.DynamicGroupRabbitOptions.toObject(includeInstance, f),
    mqtt: (f = msg.getMqtt()) && proto.protos.opts.DynamicGroupMQTTOptions.toObject(includeInstance, f),
    azureServiceBus: (f = msg.getAzureServiceBus()) && proto.protos.opts.DynamicGroupAzureServiceBusOptions.toObject(includeInstance, f),
    azureEventHub: (f = msg.getAzureEventHub()) && proto.protos.opts.DynamicGroupAzureEventHubOptions.toObject(includeInstance, f),
    gcpPubsub: (f = msg.getGcpPubsub()) && proto.protos.opts.DynamicGroupGCPPubSubOptions.toObject(includeInstance, f),
    kubemqQueue: (f = msg.getKubemqQueue()) && proto.protos.opts.DynamicGroupKubeMQQueueOptions.toObject(includeInstance, f),
    redisPubsub: (f = msg.getRedisPubsub()) && proto.protos.opts.DynamicGroupRedisPubSubOptions.toObject(includeInstance, f),
    redisStreams: (f = msg.getRedisStreams()) && proto.protos.opts.DynamicGroupRedisStreamsOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicOptions}
 */
proto.protos.opts.DynamicOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicOptions;
  return proto.protos.opts.DynamicOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicOptions}
 */
proto.protos.opts.DynamicOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrpcAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGrpcTimeoutSeconds(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGrpcInsecureTls(value);
      break;
    case 100:
      var value = new proto.protos.opts.DynamicGroupKafkaOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupKafkaOptions.deserializeBinaryFromReader);
      msg.setKafka(value);
      break;
    case 101:
      var value = new proto.protos.opts.DynamicGroupActiveMQOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupActiveMQOptions.deserializeBinaryFromReader);
      msg.setActivemq(value);
      break;
    case 102:
      var value = new proto.protos.opts.DynamicGroupAWSSQSOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupAWSSQSOptions.deserializeBinaryFromReader);
      msg.setAwssqs(value);
      break;
    case 103:
      var value = new proto.protos.opts.DynamicGroupAWSSNSOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupAWSSNSOptions.deserializeBinaryFromReader);
      msg.setAwssns(value);
      break;
    case 104:
      var value = new proto.protos.opts.DynamicGroupNatsOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupNatsOptions.deserializeBinaryFromReader);
      msg.setNats(value);
      break;
    case 105:
      var value = new proto.protos.opts.DynamicGroupNatsStreamingOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupNatsStreamingOptions.deserializeBinaryFromReader);
      msg.setNatsStreaming(value);
      break;
    case 106:
      var value = new proto.protos.opts.DynamicGroupNSQOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupNSQOptions.deserializeBinaryFromReader);
      msg.setNsq(value);
      break;
    case 107:
      var value = new proto.protos.opts.DynamicGroupRabbitOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupRabbitOptions.deserializeBinaryFromReader);
      msg.setRabbit(value);
      break;
    case 108:
      var value = new proto.protos.opts.DynamicGroupMQTTOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupMQTTOptions.deserializeBinaryFromReader);
      msg.setMqtt(value);
      break;
    case 109:
      var value = new proto.protos.opts.DynamicGroupAzureServiceBusOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupAzureServiceBusOptions.deserializeBinaryFromReader);
      msg.setAzureServiceBus(value);
      break;
    case 110:
      var value = new proto.protos.opts.DynamicGroupAzureEventHubOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupAzureEventHubOptions.deserializeBinaryFromReader);
      msg.setAzureEventHub(value);
      break;
    case 111:
      var value = new proto.protos.opts.DynamicGroupGCPPubSubOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupGCPPubSubOptions.deserializeBinaryFromReader);
      msg.setGcpPubsub(value);
      break;
    case 112:
      var value = new proto.protos.opts.DynamicGroupKubeMQQueueOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupKubeMQQueueOptions.deserializeBinaryFromReader);
      msg.setKubemqQueue(value);
      break;
    case 113:
      var value = new proto.protos.opts.DynamicGroupRedisPubSubOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupRedisPubSubOptions.deserializeBinaryFromReader);
      msg.setRedisPubsub(value);
      break;
    case 114:
      var value = new proto.protos.opts.DynamicGroupRedisStreamsOptions;
      reader.readMessage(value,proto.protos.opts.DynamicGroupRedisStreamsOptions.deserializeBinaryFromReader);
      msg.setRedisStreams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApiToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGrpcAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGrpcTimeoutSeconds();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGrpcInsecureTls();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getKafka();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.protos.opts.DynamicGroupKafkaOptions.serializeBinaryToWriter
    );
  }
  f = message.getActivemq();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.protos.opts.DynamicGroupActiveMQOptions.serializeBinaryToWriter
    );
  }
  f = message.getAwssqs();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.protos.opts.DynamicGroupAWSSQSOptions.serializeBinaryToWriter
    );
  }
  f = message.getAwssns();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.protos.opts.DynamicGroupAWSSNSOptions.serializeBinaryToWriter
    );
  }
  f = message.getNats();
  if (f != null) {
    writer.writeMessage(
      104,
      f,
      proto.protos.opts.DynamicGroupNatsOptions.serializeBinaryToWriter
    );
  }
  f = message.getNatsStreaming();
  if (f != null) {
    writer.writeMessage(
      105,
      f,
      proto.protos.opts.DynamicGroupNatsStreamingOptions.serializeBinaryToWriter
    );
  }
  f = message.getNsq();
  if (f != null) {
    writer.writeMessage(
      106,
      f,
      proto.protos.opts.DynamicGroupNSQOptions.serializeBinaryToWriter
    );
  }
  f = message.getRabbit();
  if (f != null) {
    writer.writeMessage(
      107,
      f,
      proto.protos.opts.DynamicGroupRabbitOptions.serializeBinaryToWriter
    );
  }
  f = message.getMqtt();
  if (f != null) {
    writer.writeMessage(
      108,
      f,
      proto.protos.opts.DynamicGroupMQTTOptions.serializeBinaryToWriter
    );
  }
  f = message.getAzureServiceBus();
  if (f != null) {
    writer.writeMessage(
      109,
      f,
      proto.protos.opts.DynamicGroupAzureServiceBusOptions.serializeBinaryToWriter
    );
  }
  f = message.getAzureEventHub();
  if (f != null) {
    writer.writeMessage(
      110,
      f,
      proto.protos.opts.DynamicGroupAzureEventHubOptions.serializeBinaryToWriter
    );
  }
  f = message.getGcpPubsub();
  if (f != null) {
    writer.writeMessage(
      111,
      f,
      proto.protos.opts.DynamicGroupGCPPubSubOptions.serializeBinaryToWriter
    );
  }
  f = message.getKubemqQueue();
  if (f != null) {
    writer.writeMessage(
      112,
      f,
      proto.protos.opts.DynamicGroupKubeMQQueueOptions.serializeBinaryToWriter
    );
  }
  f = message.getRedisPubsub();
  if (f != null) {
    writer.writeMessage(
      113,
      f,
      proto.protos.opts.DynamicGroupRedisPubSubOptions.serializeBinaryToWriter
    );
  }
  f = message.getRedisStreams();
  if (f != null) {
    writer.writeMessage(
      114,
      f,
      proto.protos.opts.DynamicGroupRedisStreamsOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string api_token = 1;
 * @return {string}
 */
proto.protos.opts.DynamicOptions.prototype.getApiToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.setApiToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string _grpc_address = 2;
 * @return {string}
 */
proto.protos.opts.DynamicOptions.prototype.getGrpcAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.setGrpcAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string _grpc_timeout_seconds = 3;
 * @return {string}
 */
proto.protos.opts.DynamicOptions.prototype.getGrpcTimeoutSeconds = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.setGrpcTimeoutSeconds = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool _grpc_insecure_tls = 4;
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.getGrpcInsecureTls = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.setGrpcInsecureTls = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional DynamicGroupKafkaOptions kafka = 100;
 * @return {?proto.protos.opts.DynamicGroupKafkaOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getKafka = function() {
  return /** @type{?proto.protos.opts.DynamicGroupKafkaOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupKafkaOptions, 100));
};


/**
 * @param {?proto.protos.opts.DynamicGroupKafkaOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setKafka = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearKafka = function() {
  return this.setKafka(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasKafka = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional DynamicGroupActiveMQOptions activemq = 101;
 * @return {?proto.protos.opts.DynamicGroupActiveMQOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getActivemq = function() {
  return /** @type{?proto.protos.opts.DynamicGroupActiveMQOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupActiveMQOptions, 101));
};


/**
 * @param {?proto.protos.opts.DynamicGroupActiveMQOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setActivemq = function(value) {
  return jspb.Message.setWrapperField(this, 101, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearActivemq = function() {
  return this.setActivemq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasActivemq = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional DynamicGroupAWSSQSOptions awssqs = 102;
 * @return {?proto.protos.opts.DynamicGroupAWSSQSOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getAwssqs = function() {
  return /** @type{?proto.protos.opts.DynamicGroupAWSSQSOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupAWSSQSOptions, 102));
};


/**
 * @param {?proto.protos.opts.DynamicGroupAWSSQSOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setAwssqs = function(value) {
  return jspb.Message.setWrapperField(this, 102, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearAwssqs = function() {
  return this.setAwssqs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasAwssqs = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional DynamicGroupAWSSNSOptions awssns = 103;
 * @return {?proto.protos.opts.DynamicGroupAWSSNSOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getAwssns = function() {
  return /** @type{?proto.protos.opts.DynamicGroupAWSSNSOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupAWSSNSOptions, 103));
};


/**
 * @param {?proto.protos.opts.DynamicGroupAWSSNSOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setAwssns = function(value) {
  return jspb.Message.setWrapperField(this, 103, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearAwssns = function() {
  return this.setAwssns(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasAwssns = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * optional DynamicGroupNatsOptions nats = 104;
 * @return {?proto.protos.opts.DynamicGroupNatsOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getNats = function() {
  return /** @type{?proto.protos.opts.DynamicGroupNatsOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupNatsOptions, 104));
};


/**
 * @param {?proto.protos.opts.DynamicGroupNatsOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setNats = function(value) {
  return jspb.Message.setWrapperField(this, 104, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearNats = function() {
  return this.setNats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasNats = function() {
  return jspb.Message.getField(this, 104) != null;
};


/**
 * optional DynamicGroupNatsStreamingOptions nats_streaming = 105;
 * @return {?proto.protos.opts.DynamicGroupNatsStreamingOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getNatsStreaming = function() {
  return /** @type{?proto.protos.opts.DynamicGroupNatsStreamingOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupNatsStreamingOptions, 105));
};


/**
 * @param {?proto.protos.opts.DynamicGroupNatsStreamingOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setNatsStreaming = function(value) {
  return jspb.Message.setWrapperField(this, 105, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearNatsStreaming = function() {
  return this.setNatsStreaming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasNatsStreaming = function() {
  return jspb.Message.getField(this, 105) != null;
};


/**
 * optional DynamicGroupNSQOptions nsq = 106;
 * @return {?proto.protos.opts.DynamicGroupNSQOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getNsq = function() {
  return /** @type{?proto.protos.opts.DynamicGroupNSQOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupNSQOptions, 106));
};


/**
 * @param {?proto.protos.opts.DynamicGroupNSQOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setNsq = function(value) {
  return jspb.Message.setWrapperField(this, 106, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearNsq = function() {
  return this.setNsq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasNsq = function() {
  return jspb.Message.getField(this, 106) != null;
};


/**
 * optional DynamicGroupRabbitOptions rabbit = 107;
 * @return {?proto.protos.opts.DynamicGroupRabbitOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getRabbit = function() {
  return /** @type{?proto.protos.opts.DynamicGroupRabbitOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupRabbitOptions, 107));
};


/**
 * @param {?proto.protos.opts.DynamicGroupRabbitOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setRabbit = function(value) {
  return jspb.Message.setWrapperField(this, 107, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearRabbit = function() {
  return this.setRabbit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasRabbit = function() {
  return jspb.Message.getField(this, 107) != null;
};


/**
 * optional DynamicGroupMQTTOptions mqtt = 108;
 * @return {?proto.protos.opts.DynamicGroupMQTTOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getMqtt = function() {
  return /** @type{?proto.protos.opts.DynamicGroupMQTTOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupMQTTOptions, 108));
};


/**
 * @param {?proto.protos.opts.DynamicGroupMQTTOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setMqtt = function(value) {
  return jspb.Message.setWrapperField(this, 108, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearMqtt = function() {
  return this.setMqtt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasMqtt = function() {
  return jspb.Message.getField(this, 108) != null;
};


/**
 * optional DynamicGroupAzureServiceBusOptions azure_service_bus = 109;
 * @return {?proto.protos.opts.DynamicGroupAzureServiceBusOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getAzureServiceBus = function() {
  return /** @type{?proto.protos.opts.DynamicGroupAzureServiceBusOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupAzureServiceBusOptions, 109));
};


/**
 * @param {?proto.protos.opts.DynamicGroupAzureServiceBusOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setAzureServiceBus = function(value) {
  return jspb.Message.setWrapperField(this, 109, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearAzureServiceBus = function() {
  return this.setAzureServiceBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasAzureServiceBus = function() {
  return jspb.Message.getField(this, 109) != null;
};


/**
 * optional DynamicGroupAzureEventHubOptions azure_event_hub = 110;
 * @return {?proto.protos.opts.DynamicGroupAzureEventHubOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getAzureEventHub = function() {
  return /** @type{?proto.protos.opts.DynamicGroupAzureEventHubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupAzureEventHubOptions, 110));
};


/**
 * @param {?proto.protos.opts.DynamicGroupAzureEventHubOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setAzureEventHub = function(value) {
  return jspb.Message.setWrapperField(this, 110, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearAzureEventHub = function() {
  return this.setAzureEventHub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasAzureEventHub = function() {
  return jspb.Message.getField(this, 110) != null;
};


/**
 * optional DynamicGroupGCPPubSubOptions gcp_pubsub = 111;
 * @return {?proto.protos.opts.DynamicGroupGCPPubSubOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getGcpPubsub = function() {
  return /** @type{?proto.protos.opts.DynamicGroupGCPPubSubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupGCPPubSubOptions, 111));
};


/**
 * @param {?proto.protos.opts.DynamicGroupGCPPubSubOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setGcpPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 111, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearGcpPubsub = function() {
  return this.setGcpPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasGcpPubsub = function() {
  return jspb.Message.getField(this, 111) != null;
};


/**
 * optional DynamicGroupKubeMQQueueOptions kubemq_queue = 112;
 * @return {?proto.protos.opts.DynamicGroupKubeMQQueueOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getKubemqQueue = function() {
  return /** @type{?proto.protos.opts.DynamicGroupKubeMQQueueOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupKubeMQQueueOptions, 112));
};


/**
 * @param {?proto.protos.opts.DynamicGroupKubeMQQueueOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setKubemqQueue = function(value) {
  return jspb.Message.setWrapperField(this, 112, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearKubemqQueue = function() {
  return this.setKubemqQueue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasKubemqQueue = function() {
  return jspb.Message.getField(this, 112) != null;
};


/**
 * optional DynamicGroupRedisPubSubOptions redis_pubsub = 113;
 * @return {?proto.protos.opts.DynamicGroupRedisPubSubOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getRedisPubsub = function() {
  return /** @type{?proto.protos.opts.DynamicGroupRedisPubSubOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupRedisPubSubOptions, 113));
};


/**
 * @param {?proto.protos.opts.DynamicGroupRedisPubSubOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setRedisPubsub = function(value) {
  return jspb.Message.setWrapperField(this, 113, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearRedisPubsub = function() {
  return this.setRedisPubsub(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasRedisPubsub = function() {
  return jspb.Message.getField(this, 113) != null;
};


/**
 * optional DynamicGroupRedisStreamsOptions redis_streams = 114;
 * @return {?proto.protos.opts.DynamicGroupRedisStreamsOptions}
 */
proto.protos.opts.DynamicOptions.prototype.getRedisStreams = function() {
  return /** @type{?proto.protos.opts.DynamicGroupRedisStreamsOptions} */ (
    jspb.Message.getWrapperField(this, proto.protos.opts.DynamicGroupRedisStreamsOptions, 114));
};


/**
 * @param {?proto.protos.opts.DynamicGroupRedisStreamsOptions|undefined} value
 * @return {!proto.protos.opts.DynamicOptions} returns this
*/
proto.protos.opts.DynamicOptions.prototype.setRedisStreams = function(value) {
  return jspb.Message.setWrapperField(this, 114, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicOptions} returns this
 */
proto.protos.opts.DynamicOptions.prototype.clearRedisStreams = function() {
  return this.setRedisStreams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicOptions.prototype.hasRedisStreams = function() {
  return jspb.Message.getField(this, 114) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupKafkaOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupKafkaOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupKafkaOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupKafkaOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kafka_pb.KafkaConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kafka_pb.KafkaWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupKafkaOptions}
 */
proto.protos.opts.DynamicGroupKafkaOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupKafkaOptions;
  return proto.protos.opts.DynamicGroupKafkaOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupKafkaOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupKafkaOptions}
 */
proto.protos.opts.DynamicGroupKafkaOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kafka_pb.KafkaConn;
      reader.readMessage(value,args_kafka_pb.KafkaConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kafka_pb.KafkaWriteArgs;
      reader.readMessage(value,args_kafka_pb.KafkaWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupKafkaOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupKafkaOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupKafkaOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupKafkaOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kafka_pb.KafkaConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kafka_pb.KafkaWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.KafkaConn _conn = 1;
 * @return {?proto.protos.args.KafkaConn}
 */
proto.protos.opts.DynamicGroupKafkaOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KafkaConn} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaConn, 1));
};


/**
 * @param {?proto.protos.args.KafkaConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupKafkaOptions} returns this
*/
proto.protos.opts.DynamicGroupKafkaOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupKafkaOptions} returns this
 */
proto.protos.opts.DynamicGroupKafkaOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupKafkaOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.KafkaWriteArgs args = 2;
 * @return {?proto.protos.args.KafkaWriteArgs}
 */
proto.protos.opts.DynamicGroupKafkaOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KafkaWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_kafka_pb.KafkaWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.KafkaWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupKafkaOptions} returns this
*/
proto.protos.opts.DynamicGroupKafkaOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupKafkaOptions} returns this
 */
proto.protos.opts.DynamicGroupKafkaOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupKafkaOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupActiveMQOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupActiveMQOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupActiveMQOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_activemq_pb.ActiveMQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_activemq_pb.ActiveMQWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupActiveMQOptions}
 */
proto.protos.opts.DynamicGroupActiveMQOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupActiveMQOptions;
  return proto.protos.opts.DynamicGroupActiveMQOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupActiveMQOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupActiveMQOptions}
 */
proto.protos.opts.DynamicGroupActiveMQOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_activemq_pb.ActiveMQConn;
      reader.readMessage(value,args_activemq_pb.ActiveMQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_activemq_pb.ActiveMQWriteArgs;
      reader.readMessage(value,args_activemq_pb.ActiveMQWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupActiveMQOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupActiveMQOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupActiveMQOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_activemq_pb.ActiveMQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_activemq_pb.ActiveMQWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.ActiveMQConn _conn = 1;
 * @return {?proto.protos.args.ActiveMQConn}
 */
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.ActiveMQConn} */ (
    jspb.Message.getWrapperField(this, args_activemq_pb.ActiveMQConn, 1));
};


/**
 * @param {?proto.protos.args.ActiveMQConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupActiveMQOptions} returns this
*/
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupActiveMQOptions} returns this
 */
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.ActiveMQWriteArgs args = 2;
 * @return {?proto.protos.args.ActiveMQWriteArgs}
 */
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.ActiveMQWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_activemq_pb.ActiveMQWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.ActiveMQWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupActiveMQOptions} returns this
*/
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupActiveMQOptions} returns this
 */
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupActiveMQOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupAWSSQSOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupAWSSQSOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_aws$sqs_pb.AWSSQSConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_aws$sqs_pb.AWSSQSWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupAWSSQSOptions}
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupAWSSQSOptions;
  return proto.protos.opts.DynamicGroupAWSSQSOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupAWSSQSOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupAWSSQSOptions}
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_aws$sqs_pb.AWSSQSConn;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_aws$sqs_pb.AWSSQSWriteArgs;
      reader.readMessage(value,args_aws$sqs_pb.AWSSQSWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupAWSSQSOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupAWSSQSOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_aws$sqs_pb.AWSSQSConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_aws$sqs_pb.AWSSQSWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AWSSQSConn _conn = 1;
 * @return {?proto.protos.args.AWSSQSConn}
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AWSSQSConn} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSConn, 1));
};


/**
 * @param {?proto.protos.args.AWSSQSConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupAWSSQSOptions} returns this
*/
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupAWSSQSOptions} returns this
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AWSSQSWriteArgs args = 2;
 * @return {?proto.protos.args.AWSSQSWriteArgs}
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AWSSQSWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_aws$sqs_pb.AWSSQSWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.AWSSQSWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupAWSSQSOptions} returns this
*/
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupAWSSQSOptions} returns this
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupAWSSQSOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupAWSSNSOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupAWSSNSOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_aws$sns_pb.AWSSNSConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_aws$sns_pb.AWSSNSWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupAWSSNSOptions}
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupAWSSNSOptions;
  return proto.protos.opts.DynamicGroupAWSSNSOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupAWSSNSOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupAWSSNSOptions}
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_aws$sns_pb.AWSSNSConn;
      reader.readMessage(value,args_aws$sns_pb.AWSSNSConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_aws$sns_pb.AWSSNSWriteArgs;
      reader.readMessage(value,args_aws$sns_pb.AWSSNSWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupAWSSNSOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupAWSSNSOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_aws$sns_pb.AWSSNSConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_aws$sns_pb.AWSSNSWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AWSSNSConn _conn = 1;
 * @return {?proto.protos.args.AWSSNSConn}
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AWSSNSConn} */ (
    jspb.Message.getWrapperField(this, args_aws$sns_pb.AWSSNSConn, 1));
};


/**
 * @param {?proto.protos.args.AWSSNSConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupAWSSNSOptions} returns this
*/
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupAWSSNSOptions} returns this
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AWSSNSWriteArgs args = 2;
 * @return {?proto.protos.args.AWSSNSWriteArgs}
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AWSSNSWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_aws$sns_pb.AWSSNSWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.AWSSNSWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupAWSSNSOptions} returns this
*/
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupAWSSNSOptions} returns this
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupAWSSNSOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupNatsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupNatsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupNatsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupNatsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nats_pb.NatsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nats_pb.NatsWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupNatsOptions}
 */
proto.protos.opts.DynamicGroupNatsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupNatsOptions;
  return proto.protos.opts.DynamicGroupNatsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupNatsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupNatsOptions}
 */
proto.protos.opts.DynamicGroupNatsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nats_pb.NatsConn;
      reader.readMessage(value,args_nats_pb.NatsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nats_pb.NatsWriteArgs;
      reader.readMessage(value,args_nats_pb.NatsWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupNatsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupNatsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupNatsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupNatsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nats_pb.NatsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nats_pb.NatsWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NatsConn _conn = 1;
 * @return {?proto.protos.args.NatsConn}
 */
proto.protos.opts.DynamicGroupNatsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NatsConn} */ (
    jspb.Message.getWrapperField(this, args_nats_pb.NatsConn, 1));
};


/**
 * @param {?proto.protos.args.NatsConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupNatsOptions} returns this
*/
proto.protos.opts.DynamicGroupNatsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupNatsOptions} returns this
 */
proto.protos.opts.DynamicGroupNatsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupNatsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NatsWriteArgs args = 2;
 * @return {?proto.protos.args.NatsWriteArgs}
 */
proto.protos.opts.DynamicGroupNatsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NatsWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_nats_pb.NatsWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.NatsWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupNatsOptions} returns this
*/
proto.protos.opts.DynamicGroupNatsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupNatsOptions} returns this
 */
proto.protos.opts.DynamicGroupNatsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupNatsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupNatsStreamingOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupNatsStreamingOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nats$streaming_pb.NatsStreamingConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nats$streaming_pb.NatsStreamingWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupNatsStreamingOptions}
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupNatsStreamingOptions;
  return proto.protos.opts.DynamicGroupNatsStreamingOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupNatsStreamingOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupNatsStreamingOptions}
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nats$streaming_pb.NatsStreamingConn;
      reader.readMessage(value,args_nats$streaming_pb.NatsStreamingConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nats$streaming_pb.NatsStreamingWriteArgs;
      reader.readMessage(value,args_nats$streaming_pb.NatsStreamingWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupNatsStreamingOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupNatsStreamingOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nats$streaming_pb.NatsStreamingConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nats$streaming_pb.NatsStreamingWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NatsStreamingConn _conn = 1;
 * @return {?proto.protos.args.NatsStreamingConn}
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NatsStreamingConn} */ (
    jspb.Message.getWrapperField(this, args_nats$streaming_pb.NatsStreamingConn, 1));
};


/**
 * @param {?proto.protos.args.NatsStreamingConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupNatsStreamingOptions} returns this
*/
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupNatsStreamingOptions} returns this
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NatsStreamingWriteArgs args = 2;
 * @return {?proto.protos.args.NatsStreamingWriteArgs}
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NatsStreamingWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_nats$streaming_pb.NatsStreamingWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.NatsStreamingWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupNatsStreamingOptions} returns this
*/
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupNatsStreamingOptions} returns this
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupNatsStreamingOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupNSQOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupNSQOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupNSQOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupNSQOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_nsq_pb.NSQConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_nsq_pb.NSQWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupNSQOptions}
 */
proto.protos.opts.DynamicGroupNSQOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupNSQOptions;
  return proto.protos.opts.DynamicGroupNSQOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupNSQOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupNSQOptions}
 */
proto.protos.opts.DynamicGroupNSQOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_nsq_pb.NSQConn;
      reader.readMessage(value,args_nsq_pb.NSQConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_nsq_pb.NSQWriteArgs;
      reader.readMessage(value,args_nsq_pb.NSQWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupNSQOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupNSQOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupNSQOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupNSQOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_nsq_pb.NSQConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_nsq_pb.NSQWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.NSQConn _conn = 1;
 * @return {?proto.protos.args.NSQConn}
 */
proto.protos.opts.DynamicGroupNSQOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.NSQConn} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQConn, 1));
};


/**
 * @param {?proto.protos.args.NSQConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupNSQOptions} returns this
*/
proto.protos.opts.DynamicGroupNSQOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupNSQOptions} returns this
 */
proto.protos.opts.DynamicGroupNSQOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupNSQOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.NSQWriteArgs args = 2;
 * @return {?proto.protos.args.NSQWriteArgs}
 */
proto.protos.opts.DynamicGroupNSQOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.NSQWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_nsq_pb.NSQWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.NSQWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupNSQOptions} returns this
*/
proto.protos.opts.DynamicGroupNSQOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupNSQOptions} returns this
 */
proto.protos.opts.DynamicGroupNSQOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupNSQOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupRabbitOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupRabbitOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupRabbitOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupRabbitOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit_pb.RabbitConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit_pb.RabbitWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupRabbitOptions}
 */
proto.protos.opts.DynamicGroupRabbitOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupRabbitOptions;
  return proto.protos.opts.DynamicGroupRabbitOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupRabbitOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupRabbitOptions}
 */
proto.protos.opts.DynamicGroupRabbitOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit_pb.RabbitConn;
      reader.readMessage(value,args_rabbit_pb.RabbitConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit_pb.RabbitWriteArgs;
      reader.readMessage(value,args_rabbit_pb.RabbitWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupRabbitOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupRabbitOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupRabbitOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupRabbitOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit_pb.RabbitConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit_pb.RabbitWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RabbitConn _conn = 1;
 * @return {?proto.protos.args.RabbitConn}
 */
proto.protos.opts.DynamicGroupRabbitOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupRabbitOptions} returns this
*/
proto.protos.opts.DynamicGroupRabbitOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupRabbitOptions} returns this
 */
proto.protos.opts.DynamicGroupRabbitOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupRabbitOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RabbitWriteArgs args = 2;
 * @return {?proto.protos.args.RabbitWriteArgs}
 */
proto.protos.opts.DynamicGroupRabbitOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_rabbit_pb.RabbitWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.RabbitWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupRabbitOptions} returns this
*/
proto.protos.opts.DynamicGroupRabbitOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupRabbitOptions} returns this
 */
proto.protos.opts.DynamicGroupRabbitOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupRabbitOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupRabbitStreamsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupRabbitStreamsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_rabbit$streams_pb.RabbitStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_rabbit$streams_pb.RabbitStreamsWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupRabbitStreamsOptions}
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupRabbitStreamsOptions;
  return proto.protos.opts.DynamicGroupRabbitStreamsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupRabbitStreamsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupRabbitStreamsOptions}
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_rabbit$streams_pb.RabbitStreamsConn;
      reader.readMessage(value,args_rabbit$streams_pb.RabbitStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_rabbit$streams_pb.RabbitStreamsWriteArgs;
      reader.readMessage(value,args_rabbit$streams_pb.RabbitStreamsWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupRabbitStreamsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupRabbitStreamsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_rabbit$streams_pb.RabbitStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_rabbit$streams_pb.RabbitStreamsWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RabbitStreamsConn _conn = 1;
 * @return {?proto.protos.args.RabbitStreamsConn}
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RabbitStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_rabbit$streams_pb.RabbitStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RabbitStreamsConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupRabbitStreamsOptions} returns this
*/
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupRabbitStreamsOptions} returns this
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RabbitStreamsWriteArgs args = 2;
 * @return {?proto.protos.args.RabbitStreamsWriteArgs}
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RabbitStreamsWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_rabbit$streams_pb.RabbitStreamsWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.RabbitStreamsWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupRabbitStreamsOptions} returns this
*/
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupRabbitStreamsOptions} returns this
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupRabbitStreamsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupRedisPubSubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupRedisPubSubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$pubsub_pb.RedisPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$pubsub_pb.RedisPubSubWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupRedisPubSubOptions}
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupRedisPubSubOptions;
  return proto.protos.opts.DynamicGroupRedisPubSubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupRedisPubSubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupRedisPubSubOptions}
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$pubsub_pb.RedisPubSubConn;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$pubsub_pb.RedisPubSubWriteArgs;
      reader.readMessage(value,args_redis$pubsub_pb.RedisPubSubWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupRedisPubSubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupRedisPubSubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$pubsub_pb.RedisPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$pubsub_pb.RedisPubSubWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RedisPubSubConn _conn = 1;
 * @return {?proto.protos.args.RedisPubSubConn}
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.RedisPubSubConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupRedisPubSubOptions} returns this
*/
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupRedisPubSubOptions} returns this
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RedisPubSubWriteArgs args = 2;
 * @return {?proto.protos.args.RedisPubSubWriteArgs}
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisPubSubWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_redis$pubsub_pb.RedisPubSubWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.RedisPubSubWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupRedisPubSubOptions} returns this
*/
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupRedisPubSubOptions} returns this
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupRedisPubSubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupRedisStreamsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupRedisStreamsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_redis$streams_pb.RedisStreamsConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_redis$streams_pb.RedisStreamsWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupRedisStreamsOptions}
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupRedisStreamsOptions;
  return proto.protos.opts.DynamicGroupRedisStreamsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupRedisStreamsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupRedisStreamsOptions}
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_redis$streams_pb.RedisStreamsConn;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_redis$streams_pb.RedisStreamsWriteArgs;
      reader.readMessage(value,args_redis$streams_pb.RedisStreamsWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupRedisStreamsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupRedisStreamsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_redis$streams_pb.RedisStreamsConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_redis$streams_pb.RedisStreamsWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.RedisStreamsConn _conn = 1;
 * @return {?proto.protos.args.RedisStreamsConn}
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.RedisStreamsConn} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsConn, 1));
};


/**
 * @param {?proto.protos.args.RedisStreamsConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupRedisStreamsOptions} returns this
*/
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupRedisStreamsOptions} returns this
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.RedisStreamsWriteArgs args = 2;
 * @return {?proto.protos.args.RedisStreamsWriteArgs}
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.RedisStreamsWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_redis$streams_pb.RedisStreamsWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.RedisStreamsWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupRedisStreamsOptions} returns this
*/
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupRedisStreamsOptions} returns this
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupRedisStreamsOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupAzureEventHubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupAzureEventHubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$event$hub_pb.AzureEventHubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$event$hub_pb.AzureEventHubWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupAzureEventHubOptions}
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupAzureEventHubOptions;
  return proto.protos.opts.DynamicGroupAzureEventHubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupAzureEventHubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupAzureEventHubOptions}
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$event$hub_pb.AzureEventHubConn;
      reader.readMessage(value,args_azure$event$hub_pb.AzureEventHubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$event$hub_pb.AzureEventHubWriteArgs;
      reader.readMessage(value,args_azure$event$hub_pb.AzureEventHubWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupAzureEventHubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupAzureEventHubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$event$hub_pb.AzureEventHubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$event$hub_pb.AzureEventHubWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AzureEventHubConn _conn = 1;
 * @return {?proto.protos.args.AzureEventHubConn}
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureEventHubConn} */ (
    jspb.Message.getWrapperField(this, args_azure$event$hub_pb.AzureEventHubConn, 1));
};


/**
 * @param {?proto.protos.args.AzureEventHubConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupAzureEventHubOptions} returns this
*/
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupAzureEventHubOptions} returns this
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AzureEventHubWriteArgs args = 2;
 * @return {?proto.protos.args.AzureEventHubWriteArgs}
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureEventHubWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_azure$event$hub_pb.AzureEventHubWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.AzureEventHubWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupAzureEventHubOptions} returns this
*/
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupAzureEventHubOptions} returns this
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupAzureEventHubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupAzureServiceBusOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupAzureServiceBusOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_azure$service$bus_pb.AzureServiceBusConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_azure$service$bus_pb.AzureServiceBusWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupAzureServiceBusOptions}
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupAzureServiceBusOptions;
  return proto.protos.opts.DynamicGroupAzureServiceBusOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupAzureServiceBusOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupAzureServiceBusOptions}
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_azure$service$bus_pb.AzureServiceBusConn;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_azure$service$bus_pb.AzureServiceBusWriteArgs;
      reader.readMessage(value,args_azure$service$bus_pb.AzureServiceBusWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupAzureServiceBusOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupAzureServiceBusOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_azure$service$bus_pb.AzureServiceBusConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_azure$service$bus_pb.AzureServiceBusWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.AzureServiceBusConn _conn = 1;
 * @return {?proto.protos.args.AzureServiceBusConn}
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.AzureServiceBusConn} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusConn, 1));
};


/**
 * @param {?proto.protos.args.AzureServiceBusConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupAzureServiceBusOptions} returns this
*/
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupAzureServiceBusOptions} returns this
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.AzureServiceBusWriteArgs args = 2;
 * @return {?proto.protos.args.AzureServiceBusWriteArgs}
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.AzureServiceBusWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_azure$service$bus_pb.AzureServiceBusWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.AzureServiceBusWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupAzureServiceBusOptions} returns this
*/
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupAzureServiceBusOptions} returns this
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupAzureServiceBusOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupMQTTOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupMQTTOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupMQTTOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupMQTTOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_mqtt_pb.MQTTConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_mqtt_pb.MQTTWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupMQTTOptions}
 */
proto.protos.opts.DynamicGroupMQTTOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupMQTTOptions;
  return proto.protos.opts.DynamicGroupMQTTOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupMQTTOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupMQTTOptions}
 */
proto.protos.opts.DynamicGroupMQTTOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_mqtt_pb.MQTTConn;
      reader.readMessage(value,args_mqtt_pb.MQTTConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_mqtt_pb.MQTTWriteArgs;
      reader.readMessage(value,args_mqtt_pb.MQTTWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupMQTTOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupMQTTOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupMQTTOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupMQTTOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_mqtt_pb.MQTTConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_mqtt_pb.MQTTWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.MQTTConn _conn = 1;
 * @return {?proto.protos.args.MQTTConn}
 */
proto.protos.opts.DynamicGroupMQTTOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.MQTTConn} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTConn, 1));
};


/**
 * @param {?proto.protos.args.MQTTConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupMQTTOptions} returns this
*/
proto.protos.opts.DynamicGroupMQTTOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupMQTTOptions} returns this
 */
proto.protos.opts.DynamicGroupMQTTOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupMQTTOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.MQTTWriteArgs args = 2;
 * @return {?proto.protos.args.MQTTWriteArgs}
 */
proto.protos.opts.DynamicGroupMQTTOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.MQTTWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_mqtt_pb.MQTTWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.MQTTWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupMQTTOptions} returns this
*/
proto.protos.opts.DynamicGroupMQTTOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupMQTTOptions} returns this
 */
proto.protos.opts.DynamicGroupMQTTOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupMQTTOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupGCPPubSubOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupGCPPubSubOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_gcp$pubsub_pb.GCPPubSubConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_gcp$pubsub_pb.GCPPubSubWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupGCPPubSubOptions}
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupGCPPubSubOptions;
  return proto.protos.opts.DynamicGroupGCPPubSubOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupGCPPubSubOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupGCPPubSubOptions}
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_gcp$pubsub_pb.GCPPubSubConn;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_gcp$pubsub_pb.GCPPubSubWriteArgs;
      reader.readMessage(value,args_gcp$pubsub_pb.GCPPubSubWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupGCPPubSubOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupGCPPubSubOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_gcp$pubsub_pb.GCPPubSubConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_gcp$pubsub_pb.GCPPubSubWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.GCPPubSubConn _conn = 1;
 * @return {?proto.protos.args.GCPPubSubConn}
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.GCPPubSubConn} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubConn, 1));
};


/**
 * @param {?proto.protos.args.GCPPubSubConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupGCPPubSubOptions} returns this
*/
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupGCPPubSubOptions} returns this
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.GCPPubSubWriteArgs args = 2;
 * @return {?proto.protos.args.GCPPubSubWriteArgs}
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.GCPPubSubWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_gcp$pubsub_pb.GCPPubSubWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.GCPPubSubWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupGCPPubSubOptions} returns this
*/
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupGCPPubSubOptions} returns this
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupGCPPubSubOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.opts.DynamicGroupKubeMQQueueOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.opts.DynamicGroupKubeMQQueueOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    conn: (f = msg.getConn()) && args_kubemq$queue_pb.KubeMQQueueConn.toObject(includeInstance, f),
    args: (f = msg.getArgs()) && args_kubemq$queue_pb.KubeMQQueueWriteArgs.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.opts.DynamicGroupKubeMQQueueOptions}
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.opts.DynamicGroupKubeMQQueueOptions;
  return proto.protos.opts.DynamicGroupKubeMQQueueOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.opts.DynamicGroupKubeMQQueueOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.opts.DynamicGroupKubeMQQueueOptions}
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new args_kubemq$queue_pb.KubeMQQueueConn;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueConn.deserializeBinaryFromReader);
      msg.setConn(value);
      break;
    case 2:
      var value = new args_kubemq$queue_pb.KubeMQQueueWriteArgs;
      reader.readMessage(value,args_kubemq$queue_pb.KubeMQQueueWriteArgs.deserializeBinaryFromReader);
      msg.setArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.opts.DynamicGroupKubeMQQueueOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.opts.DynamicGroupKubeMQQueueOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      args_kubemq$queue_pb.KubeMQQueueConn.serializeBinaryToWriter
    );
  }
  f = message.getArgs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      args_kubemq$queue_pb.KubeMQQueueWriteArgs.serializeBinaryToWriter
    );
  }
};


/**
 * optional protos.args.KubeMQQueueConn _conn = 1;
 * @return {?proto.protos.args.KubeMQQueueConn}
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.getConn = function() {
  return /** @type{?proto.protos.args.KubeMQQueueConn} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueConn, 1));
};


/**
 * @param {?proto.protos.args.KubeMQQueueConn|undefined} value
 * @return {!proto.protos.opts.DynamicGroupKubeMQQueueOptions} returns this
*/
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.setConn = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupKubeMQQueueOptions} returns this
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.clearConn = function() {
  return this.setConn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.hasConn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protos.args.KubeMQQueueWriteArgs args = 2;
 * @return {?proto.protos.args.KubeMQQueueWriteArgs}
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.getArgs = function() {
  return /** @type{?proto.protos.args.KubeMQQueueWriteArgs} */ (
    jspb.Message.getWrapperField(this, args_kubemq$queue_pb.KubeMQQueueWriteArgs, 2));
};


/**
 * @param {?proto.protos.args.KubeMQQueueWriteArgs|undefined} value
 * @return {!proto.protos.opts.DynamicGroupKubeMQQueueOptions} returns this
*/
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.setArgs = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.opts.DynamicGroupKubeMQQueueOptions} returns this
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.clearArgs = function() {
  return this.setArgs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.opts.DynamicGroupKubeMQQueueOptions.prototype.hasArgs = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.protos.opts);
